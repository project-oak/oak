# Reference: https://cloud.google.com/cloud-build/docs/build-config

steps:
  # Pull pre-existing latest Docker image.
  - name: 'gcr.io/cloud-builders/docker'
    id: pull_image
    waitFor: ['-']
    timeout: 10m
    args: ['pull', 'gcr.io/oak-ci/oak:latest']
  # Build Docker image based on current Dockerfile, if necessary.
  - name: 'gcr.io/cloud-builders/docker'
    id: build_image
    waitFor: ['pull_image']
    timeout: 10m
    args: ['build', '--pull', '--cache-from=gcr.io/oak-ci/oak:latest', '--tag=gcr.io/oak-ci/oak:latest', '.']
  # Run next build steps inside the newly created Docker image.
  # See: https://cloud.google.com/cloud-build/docs/create-custom-build-steps
  # Init .git repository used by check_generated
  # Workaround for https://github.com/GoogleCloudPlatform/cloud-builders/issues/236
  - name: 'gcr.io/oak-ci/oak:latest'
    id: git_init
    entrypoint: 'bash'
    waitFor: ['build_image']
    timeout: 5m
    args: ['./scripts/git_init']
  - name: 'gcr.io/oak-ci/oak:latest'
    id: check_formatting
    waitFor: ['build_image']
    timeout: 30m
    entrypoint: 'bash'
    args: ['./scripts/check_formatting']
  - name: 'gcr.io/oak-ci/oak:latest'
    id: build_server_asylo
    waitFor: ['build_image']
    timeout: 30m
    entrypoint: 'bash'
    args: ['./scripts/build_server_asylo']
  - name: 'gcr.io/oak-ci/oak:latest'
    id: build_server_dev
    timeout: 30m
    entrypoint: 'bash'
    args: ['./scripts/build_server_dev']
  - name: 'gcr.io/oak-ci/oak:latest'
    id: run_tests
    timeout: 30m
    entrypoint: 'bash'
    args: ['./scripts/run_tests']
  - name: 'gcr.io/oak-ci/oak:latest'
    id: run_examples
    timeout: 30m
    entrypoint: 'bash'
    args: ['./scripts/run_examples']
  - name: 'gcr.io/oak-ci/oak:latest'
    id: git_check_diff
    waitFor: ['git_init', 'run_tests', 'run_examples']
    timeout: 5m
    entrypoint: 'bash'
    args: ['./scripts/git_check_diff']
  # Copy compiled enclave binary to workspace so that it can be uploaded as artifact.
  - name: 'gcr.io/oak-ci/oak:latest'
    id: copy_artifacts
    waitFor: ['build_server_asylo']
    timeout: 5m
    entrypoint: 'cp'
    args: ['./bazel-bin/oak/server/asylo/liboak_enclave_unsigned.so', './liboak_enclave_unsigned.so']

# Copy compiled enclave binary to Google Cloud Storage.
# See:
# - https://pantheon.corp.google.com/storage/browser/artifacts.oak-ci.appspot.com/test/?project=oak-ci
# - https://cloud.google.com/cloud-build/docs/configuring-builds/store-images-artifacts#storing_artifacts_in
# TODO: Finalize artifact location.
artifacts:
  objects:
    location: gs://artifacts.oak-ci.appspot.com/test
    paths:
      - ./liboak_enclave_unsigned.so

timeout: 2h

options:
  # See: https://cloud.google.com/cloud-build/docs/api/reference/rest/Shared.Types/MachineType
  machineType: 'N1_HIGHCPU_32'
  requestedVerifyOption: 'VERIFIED'
  sourceProvenanceHash: [ 'SHA256' ]
