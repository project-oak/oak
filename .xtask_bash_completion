_xtask() {
    local i cur prev opts cmds
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    cmd=""
    opts=""

    for i in ${COMP_WORDS[@]}
    do
        case "${i}" in
            "$1")
                cmd="xtask"
                ;;
            build-oak-functions-example)
                cmd+="__build__oak__functions__example"
                ;;
            build-oak-functions-server-variants)
                cmd+="__build__oak__functions__server__variants"
                ;;
            check-format)
                cmd+="__check__format"
                ;;
            completion)
                cmd+="__completion"
                ;;
            format)
                cmd+="__format"
                ;;
            help)
                cmd+="__help"
                ;;
            run-bazel-tests)
                cmd+="__run__bazel__tests"
                ;;
            run-cargo-clean)
                cmd+="__run__cargo__clean"
                ;;
            run-cargo-clippy)
                cmd+="__run__cargo__clippy"
                ;;
            run-cargo-deny)
                cmd+="__run__cargo__deny"
                ;;
            run-cargo-fuzz)
                cmd+="__run__cargo__fuzz"
                ;;
            run-cargo-tests)
                cmd+="__run__cargo__tests"
                ;;
            run-cargo-udeps)
                cmd+="__run__cargo__udeps"
                ;;
            run-ci)
                cmd+="__run__ci"
                ;;
            run-launcher-test)
                cmd+="__run__launcher__test"
                ;;
            run-oak-functions-examples)
                cmd+="__run__oak__functions__examples"
                ;;
            run-tests)
                cmd+="__run__tests"
                ;;
            *)
                ;;
        esac
    done

    case "${cmd}" in
        xtask)
            opts="-h --help --dry-run --logs --keep-going --scope run-launcher-test run-oak-functions-examples build-oak-functions-example build-oak-functions-server-variants format check-format run-tests run-cargo-clippy run-cargo-tests run-bazel-tests run-cargo-fuzz run-cargo-deny run-cargo-udeps run-ci run-cargo-clean completion help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 1 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --scope)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        xtask__build__oak__functions__example)
            opts="-h --application-variant --example-name --client-variant --client-rust-toolchain --client-rust-target --server-variant --server-rust-toolchain --server-rust-target --run-server --client-additional-args --server-additional-args --build-docker --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --application-variant)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --example-name)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --client-variant)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --client-rust-toolchain)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --client-rust-target)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --server-variant)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --server-rust-toolchain)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --server-rust-target)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --run-server)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --client-additional-args)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --server-additional-args)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        xtask__build__oak__functions__server__variants)
            opts="-h --server-variant --server-rust-toolchain --server-rust-target --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --server-variant)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --server-rust-toolchain)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --server-rust-target)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        xtask__check__format)
            opts="-h --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        xtask__completion)
            opts="-h --file-name --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --file-name)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        xtask__format)
            opts="-h --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        xtask__help)
            opts="<SUBCOMMAND>..."
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        xtask__run__bazel__tests)
            opts="-h --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        xtask__run__cargo__clean)
            opts="-h --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        xtask__run__cargo__clippy)
            opts="-h --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        xtask__run__cargo__deny)
            opts="-h --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        xtask__run__cargo__fuzz)
            opts="-h --crate-name --target-name --help <ARGS>..."
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --crate-name)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --target-name)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        xtask__run__cargo__tests)
            opts="-h --cleanup --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        xtask__run__cargo__udeps)
            opts="-h --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        xtask__run__ci)
            opts="-h --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        xtask__run__launcher__test)
            opts="-h --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        xtask__run__oak__functions__examples)
            opts="-h --application-variant --example-name --client-variant --client-rust-toolchain --client-rust-target --server-variant --server-rust-toolchain --server-rust-target --run-server --client-additional-args --server-additional-args --build-docker --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                --application-variant)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --example-name)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --client-variant)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --client-rust-toolchain)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --client-rust-target)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --server-variant)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --server-rust-toolchain)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --server-rust-target)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --run-server)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --client-additional-args)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                --server-additional-args)
                    COMPREPLY=($(compgen -f "${cur}"))
                    return 0
                    ;;
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
        xtask__run__tests)
            opts="-h --help"
            if [[ ${cur} == -* || ${COMP_CWORD} -eq 2 ]] ; then
                COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
                return 0
            fi
            case "${prev}" in
                *)
                    COMPREPLY=()
                    ;;
            esac
            COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )
            return 0
            ;;
    esac
}

complete -F _xtask -o bashdefault -o default xtask
