//
// Copyright 2020 The Project Oak Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package oak.remote;

import "google/protobuf/descriptor.proto";
import "oak_abi/proto/label.proto";
import "oak_abi/proto/application.proto";

message AddRemoteRequest {
  // IP address and port number for a remote Runtime
  string remote_address = 1;
}

message AddRemoteResponse {
  // empty response
}

message NodeCreateRequest {
    string name = 1;
    oak.application.NodeConfiguration node_configuration = 2;
    oak.label.Label label = 3;
    fixed64 initial_handle = 4;
}

message NodeCreateResponse {
  fixed64 remote_node_id = 1;
}

message ChannelReadRequest {
    fixed64 read_handle = 1;
}

message ChannelReadResponse {
  bytes data = 1;
  repeated fixed64 handles = 2;
}

message ChannelWriteRequest {
  fixed64 write_handle = 1;
  bytes data = 2;
  repeated fixed64 handles = 3;
}

message ChannelWriteResponse {
  // empty response
}

// As seen in https://grpc.io/docs/guides/concepts/.
service RemoteRuntime {
  rpc AddRemote(AddRemoteRequest) returns (AddRemoteResponse);
  rpc NodeCreate(NodeCreateRequest) returns (NodeCreateResponse);
  rpc ChannelRead(ChannelReadRequest) returns (ChannelReadResponse);
  rpc ChannelWrite(ChannelWriteRequest) returns (ChannelWriteResponse);
}