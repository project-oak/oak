//
// Copyright 2020 The Project Oak Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package oak.remote;

import "google/protobuf/descriptor.proto";
import "proto/remote.proto";


// A gRPC service for interacting with a remote Oak Runtime.
service RemoteRuntime {
  // Add the given address to the list of remote runtime instances. Returns the `runtime_uuid` of the 
  // runtime serving the request in the response, so that the caller can as well add the runtime to
  // the list of its remotes.
  rpc AddRemote(oak.remote.encap.AddRemoteRequest) returns (oak.remote.encap.AddRemoteResponse);

  // Request matching a call to the `node_create` function in the runtime. Returns the `node_id` of
  // the newly created node.
  rpc NodeCreate(oak.remote.encap.NodeCreateRequest) returns (oak.remote.encap.NodeCreateResponse);

  // Request matching a call to the `channel_write` function in the runtime.
  rpc ChannelWrite(oak.remote.encap.ChannelWriteRequest) returns (oak.remote.encap.ChannelWriteResponse);
}