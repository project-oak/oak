//
// Copyright 2020 The Project Oak Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package oak.authentication;

import "google/protobuf/empty.proto";

// Parameters needed by clients to initiate OpenID Connect authentication requests.
message AuthParameters {
  string client_id = 1;
  string auth_endpoint = 2;
  // TODO(#922): Add support for scope, state and code challenge.
}

// Request for exchanging an authorisation code for an identity token.
message IdentityTokenRequest {
  string auth_code = 1;
}

// Wrapper for the exchanged identity token.
message IdentityTokenResponse {
  string token = 1;
}

service Authentication {
  // Gets the parameters needed by a client to make an authentication request.
  rpc GetAuthParameters(google.protobuf.Empty) returns (AuthParameters);
  // Exchanges an authorisation code for an identity token.
  rpc GetTokenFromCode(IdentityTokenRequest) returns (IdentityTokenResponse);
}
