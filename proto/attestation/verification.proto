//
// Copyright 2023 The Project Oak Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package oak.attestation.v1;

option go_package = "proto/oak/attestation/v1";
option java_multiple_files = true;
option java_package = "com.google.oak.attestation.v1";

// Represents a verification result. Can be extended to return certain
// measurements and other detail to the client for further processing.
// Nomenclature follows RFC 9334.
message AttestationResults {
  enum Status {
    STATUS_UNSPECIFIED = 0;
    STATUS_SUCCESS = 1;
    STATUS_GENERIC_FAILURE = 2;
  }

  // Indicates whether the verification passed and perhaps more.
  Status status = 1;

  // Provides the reason why verification did not pass, on non-success status.
  string reason = 2;

  // Contains the verified public key for encryption whenever the status
  // indicates success. The key is serialized as an X25519 octet string.
  bytes encryption_public_key = 3;

  // Contains the verified public key for signing whenever the status
  // indicates success. The key is serialized using the SEC 1
  // Elliptic-Curve-Point-to-Octet-String conversion.
  bytes signing_public_key = 4;
}
