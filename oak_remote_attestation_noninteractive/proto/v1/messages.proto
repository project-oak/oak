//
// Copyright 2022 The Project Oak Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package oak.session.noninteractive.v1;

option java_multiple_files = true;
option java_package = "oak.session.noninteractive.v1";

message PublicKeyInfo {
  // The serialized enclave public key.
  // TODO(#3442): Specify key format.
  bytes public_key = 1;
  // The serialized attestation report binding the public key.
  bytes attestation = 2;
  // TODO(#3442): Add evidence (endorsements and inclusion proofs) for the attested binary.
}

message GetPublicKeyRequest {}

message GetPublicKeyResponse {
  // The enclave public key.
  PublicKeyInfo public_key_info = 1;
}

message InvokeRequest {
  // Body of the request, encrypted with the enclave public key.
  // TODO(#3442): Specify encryption format.
  // TODO(#3442): Also pass client public or symmetric key to use for response encryption. Note that
  // needs to be at least authenticated by the client, if not encrypted within this field.
  bytes encrypted_body = 1;
}

message InvokeResponse {
  // Body of the request, encrypted with the client public or symmetric key.
  // TODO(#3442): Specify encryption format.
  bytes encrypted_body = 1;
}
