# YAML schema for GitHub Actions:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions
#
# Helpful YAML parser to clarify YAML syntax:
# https://yaml-online-parser.appspot.com/

name: Cortex-M on Arm Virtual Hardware

# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onschedule
on:
  schedule:
    - cron: '0 4 * * *'

  # Allow manually triggering of the workflow.
  workflow_dispatch: {}

env:
  AWS_DEFAULT_REGION: eu-west-1
  AWS_S3_BUCKET_NAME: tensorflow-ci-1
  AWS_IAM_PROFILE: Proj-s3-orta-vht-role
  AWS_SECURITY_GROUP_ID: sg-03afe5ec007b4bcb0
  AWS_SUBNET_ID: subnet-025b7baebd743a68b
jobs:
  cortex_m_generic:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'schedule' && github.repository == 'tensorflow/tflite-micro')
    name: Cortex-M Generic
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install AVH Client for Python
        run: |
          pip install git+https://github.com/ARM-software/avhclient.git@v0.1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::720528183931:role/Proj-vht-assume-role
          aws-region: eu-west-1
      - name: Execute test suite on Arm Virtual Hardware at AWS
        run: |
          avhclient -b aws execute --specfile ./tensorflow/lite/micro/tools/github/arm_virtual_hardware/cortex_m_generic_avh.yml
      - name: Fetch results from Arm Virtual Hardware
        run: |
          cat ./tensorflow/lite/micro/tools/github/arm_virtual_hardware/cortex_m_generic.log


  cortex_m_corstone_300:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'schedule' && github.repository == 'tensorflow/tflite-micro')
    name: Cortex-M Corstone 300 (FVP)
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: Install AVH Client for Python
        run: |
          pip install git+https://github.com/ARM-software/avhclient.git@v0.1.1
      - name: Execute test suite on Arm Virtual Hardware at AWS
        run: |
          avhclient -b aws execute --specfile ./tensorflow/lite/micro/tools/github/arm_virtual_hardware/cortex_m_corstone_300_avh.yml
      - name: Fetch results from Arm Virtual Hardware
        run: |
          cat ./tensorflow/lite/micro/tools/github/arm_virtual_hardware/corstone300.log
