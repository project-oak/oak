/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_google_oak_crypto_hpke_Hpke */

#ifndef _Included_com_google_oak_crypto_hpke_Hpke
#define _Included_com_google_oak_crypto_hpke_Hpke
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_google_oak_crypto_hpke_Hpke
 * Method:    nativeSetupBaseSender
 * Signature: ([B[B)Lcom/google/oak/crypto/hpke/SenderContext;
 */
JNIEXPORT jobject JNICALL Java_com_google_oak_crypto_hpke_Hpke_nativeSetupBaseSender
  (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     com_google_oak_crypto_hpke_Hpke
 * Method:    nativeSetupBaseRecipient
 * Signature: ([BLcom/google/oak/crypto/hpke/KeyPair;[B)Lcom/google/oak/crypto/hpke/RecipientContext;
 */
JNIEXPORT jobject JNICALL Java_com_google_oak_crypto_hpke_Hpke_nativeSetupBaseRecipient
  (JNIEnv *, jclass, jbyteArray, jobject, jbyteArray);

/*
 * Class:     com_google_oak_crypto_hpke_Hpke
 * Method:    nativeGenerateRandomNonce
 * Signature: ()[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_google_oak_crypto_hpke_Hpke_nativeGenerateRandomNonce
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
