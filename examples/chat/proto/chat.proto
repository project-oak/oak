//
// Copyright 2019 The Project Oak Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package oak.examples.chat;

import "google/protobuf/empty.proto";

// The chat room is identified by the Oak Label provided as part of gRPC metadata.
message CreateRoomRequest {
  // Bearer token used to administer the room; knowledge of this value allows control over the room
  // (including the ability to destroy the room). The client should create a random bearer token of
  // sufficient entropy to use as the admin token.
  bytes admin_token = 1;
}

// The chat room is identified by the Oak Label provided as part of gRPC metadata.
message DestroyRoomRequest {
  bytes admin_token = 1;
}

// The chat room is identified by the Oak Label provided as part of gRPC metadata.
message SubscribeRequest {
}

message Message {
  // Handle for the user; this is only used for UI purposes (and so does not need to be unique nor
  // persistent).
  string user_handle = 2;
  string text = 1;
}

// The chat room is identified by the Oak Label provided as part of gRPC metadata.
message SendMessageRequest {
  Message message = 1;
}

service Chat {
  rpc CreateRoom(CreateRoomRequest) returns (google.protobuf.Empty);
  rpc DestroyRoom(DestroyRoomRequest) returns (google.protobuf.Empty);

  // Subscribe to a chat room, in order to receive future messages sent to it.
  rpc Subscribe(SubscribeRequest) returns (stream Message);

  // Send a message to a chat room.
  rpc SendMessage(SendMessageRequest) returns (google.protobuf.Empty);
}
