//
// Copyright 2020 The Project Oak Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package oak.examples.aggregator_init;

import "examples/aggregator/proto/aggregator.proto";
import "oak_services/proto/grpc_invocation.proto";
import "oak_services/proto/log.proto";
import "proto/handle.proto";

// Initialization message that should be sent to Router Oak Node.
message RouterInit {
  oak.handle.Sender log_sender = 1 [(oak.handle.message_type) = ".oak.log.LogMessage"];
  // Channel for sending invocations to Handler Oak Node.
  oak.invocation.GrpcInvocationSender handler_invocation_sender = 2;
  // SHA256 sum of the Aggregator Wasm module.
  // TODO(#1731): Split Aggregator into two Wasm modules and hardcode its SHA256 sum in the first
  // module.
  string aggregator_module_hash = 3;
}

// Initialization message that should be sent to Handler Oak Node.
message HandlerInit {
  oak.handle.Sender log_sender = 1 [(oak.handle.message_type) = ".oak.log.LogMessage"];
  // Channel for sending invocations to gRPC client that is connected to an external service, which
  // expects aggregated data from Oak.
  oak.invocation.GrpcInvocationSender grpc_client_invocation_sender = 2;
}
