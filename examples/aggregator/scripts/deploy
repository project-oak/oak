#!/usr/bin/env bash

readonly SCRIPTS_DIR="$(dirname "$(readlink -f "$0")")"
readonly GLOBAL_ROOT_DIR="${SCRIPTS_DIR}/../../.."
readonly GLOBAL_SCRIPTS_DIR="${GLOBAL_ROOT_DIR}/scripts/"
# shellcheck source=scripts/common
source "${GLOBAL_SCRIPTS_DIR}/common"

metrics=0

while getopts "mh" opt; do
  case "${opt}" in
    h)
      echo -e "Usage: ${0} [-m]
Deploy aggregator objects. 
  -m    In addition, deploy the metrics collector.
  -h    Print Help (this message) and exit"
      exit 0;;
    m)
      metrics=1;;
    *)
      echo "Invalid argument: ${OPTARG}"
      exit 1;;
  esac
done

if [[ $metrics == 0 ]]
then 
  "${SCRIPTS_DIR}/undeploy" || true
else
  "${SCRIPTS_DIR}/undeploy" -m || true

  # Deleting the service does not immediately delete the node ports, so `deploy` fails 
  # if it is run immediately after `undeploy`.
  # Ref: https://github.com/kubernetes/kubernetes/issues/32987#issuecomment-344514151
  echo "Waiting for 5 mins for k8s to remove all the old resources..."
  sleep 5m
fi

gcloud container clusters get-credentials aggregator --zone=europe-west2-a
kubectl create secret generic tls-private-key \
  --from-file="${GLOBAL_ROOT_DIR}/examples/certs/gcp/gcp.key" \
  --from-file="${GLOBAL_ROOT_DIR}/examples/certs/gcp/gcp.pem" \
  --from-file="${GLOBAL_ROOT_DIR}/examples/certs/gcp/ca.pem"
kubectl apply --filename="${GLOBAL_ROOT_DIR}/examples/aggregator/gcp/deployment.yaml"

if [[ $metrics == 1 ]]
then 
  kubectl apply --filename="${GLOBAL_ROOT_DIR}/examples/aggregator/gcp/metrics-sidecar.yaml"
fi
