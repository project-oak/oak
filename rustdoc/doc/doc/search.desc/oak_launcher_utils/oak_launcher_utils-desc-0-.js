searchState.loadedDescShard("oak_launcher_utils", 0, "Singleton responsible for sending requests, and receiving …\nImplementation of an <code>micro_rpc::AsyncTransport</code> that …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSpawn an instance of the <code>Connector</code> in a seperate task, and …\nDefines the interface of a launched guest instance. …\nRepresents an a guest instance launched in virtualized …\nRepresents parameters used for launching VM instances.\nPath to the Oak Functions application binary to be loaded …\nPath to the BIOS image to use.\nCreates a channel to communicate with the guest instance.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nPort to use for debugging with gdb\nUse the V1 format for initial data loading (binary + …\nPath to the initrd image to use.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPath to the enclave binary to load into the VM.\nKill the guest instance.\nLaunches a new guest instance in given mode.\nHow much memory to give to the enclave binary, e.g., 256M …\nPass the specified host PCI device through to the virtual …\nStarts virtualized instance with given parameters and …\nPath to the VMM binary to execute.\nWait for the guest instance process to finish.")