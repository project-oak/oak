var searchIndex = new Map(JSON.parse('[["echo",{"t":"H","n":["main"],"q":[[0,"echo"]],"i":"`","f":"{{}b}","D":"b","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAEA"}],["invalid_module",{"t":"","n":[],"q":[],"i":"","f":"","D":"`","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],["key_value_lookup",{"t":"H","n":["main"],"q":[[0,"key_value_lookup"]],"i":"`","f":"{{}b}","D":"b","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAEA"}],["lookup_data_generator",{"t":"CH","n":["data","generate_and_serialize_random_entries"],"q":[[0,"lookup_data_generator"],[1,"lookup_data_generator::data"],[2,"bytes::bytes_mut"],[3,"anyhow"],[4,"rand::rng"]],"i":"``","f":"`{{{d{bc}}fff}{{j{h}}}l}","D":"b","p":[[0,"mut"],[1,"reference"],[1,"usize"],[5,"BytesMut",2],[8,"Result",3],[10,"Rng",4]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA="}],["micro_rpc",{"t":"PPKPPPEPRRPPPPEPPPPFPFGFGKPPPPFNNNNNNNNNNNNNNNNNHONNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNN","n":["Aborted","AlreadyExists","AsyncTransport","Cancelled","DataLoss","DeadlineExceeded","Err","","Error","","FailedPrecondition","Internal","InvalidArgument","NotFound","Ok","","","OutOfRange","PermissionDenied","RequestWrapper","ResourceExhausted","ResponseWrapper","Result","Status","StatusCode","Transport","Unauthenticated","Unavailable","Unimplemented","Unknown","Vec","advance_mut","allocator","and","and_then","append","as_deref","as_deref_mut","as_mut","","","as_mut_ptr","as_mut_slice","as_ptr","as_ref","","","as_slice","async_client_invoke","body","borrow","","","","","","","borrow_mut","","","","","","","branch","capacity","chunk_mut","clear","","","","client_invoke","clone","","","","clone_from","","clone_into","","","","clone_to_uninit","","","","cloned","","cmp","","code","copied","","dedup","dedup_by","dedup_by_key","default","","","deref","deref_mut","drain","drop","encoded_len","","","eq","","","","","","","","","","","","","err","expect","expect_err","extend","","extend_from_slice","extend_from_within","extend_one","","extend_reserve","","extract_if","flatten","flush","fmt","","","","","","","format","from","","","","","","","","","","","","","","","","","","","","","","","","","from_iter","","from_output","from_raw_parts","from_raw_parts_in","from_residual","","hash","","index","index_mut","insert","inspect","inspect_err","into","","","","","","into_boxed_slice","into_err","into_flattened","into_iter","","","","","","into_ok","into_raw_parts","into_raw_parts_with_alloc","invoke","","is_empty","is_err","is_err_and","is_ok","is_ok_and","is_write_vectored","iter","iter_mut","leak","len","map","map_err","map_or","map_or_else","message","method_id","ne","","","","","","new","","new_in","new_with_message","ok","or","or_else","partial_cmp","","","","pop","pop_if","product","push","push_within_capacity","put","put_bytes","put_slice","remaining_mut","remove","report","reserve","reserve_exact","resize","resize_with","response","response_wrapper","retain","retain_mut","set_len","shrink_to","shrink_to_fit","spare_capacity_mut","splice","split_at_spare_mut","split_off","sum","swap_remove","to_owned","","","","to_string","transpose","truncate","try_from","","","","","","try_into","","","","","","try_reserve","try_reserve_exact","try_with_capacity","try_with_capacity_in","type_id","","","","","","unwrap","unwrap_err","unwrap_err_unchecked","unwrap_or","unwrap_or_default","unwrap_or_else","unwrap_unchecked","with_capacity","with_capacity_in","write","write_all","write_vectored","Body","Error","Response","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id"],"q":[[0,"micro_rpc"],[302,"micro_rpc::response_wrapper"],[321,"alloc::vec"],[322,"core::alloc"],[323,"core::result"],[324,"core::ops::function"],[325,"core::ops::deref"],[326,"micro_rpc::status"],[327,"prost::message"],[328,"core::default"],[329,"core::ops::control_flow"],[330,"bytes::buf::uninit_slice"],[331,"micro_rpc::proto"],[332,"core::clone"],[333,"core::cmp"],[334,"core::marker"],[335,"alloc::vec::drain"],[336,"core::ops::range"],[337,"bytes::bytes_mut"],[338,"bytes::bytes"],[339,"core::option"],[340,"core::fmt"],[341,"core::iter::traits::collect"],[342,"alloc::vec::extract_if"],[343,"std::io::error"],[344,"alloc::collections::binary_heap"],[345,"alloc::collections::vec_deque"],[346,"alloc::ffi::c_str"],[347,"alloc::string"],[348,"alloc::borrow"],[349,"alloc::boxed"],[350,"miniz_oxide"],[351,"core::ops::try_trait"],[352,"core::convert"],[353,"core::hash"],[354,"core::slice::index"],[355,"core::future::future"],[356,"core::pin"],[357,"core::iter::traits::iterator"],[358,"core::iter::traits::accum"],[359,"bytes::buf::buf_impl"],[360,"std::process"],[361,"core::mem::maybe_uninit"],[362,"alloc::vec::splice"],[363,"alloc::collections"],[364,"core::any"],[365,"std::io"],[366,"micro_rpc::proto::response_wrapper"],[367,"bytes::buf::buf_mut"],[368,"prost::encoding"],[369,"prost::error"],[370,"core::result::Result"],[371,"alloc"]],"i":"Db0`000`A`BnB`3333`3233`3`````3333`f0330330030000030`Bj0BlAn733621073366332133`21363621362136663606633321333332132107333333336666333333333632100736`211077333333333333333666636633663633366210736363333666633543666636633666602333333033066633363363333333633331`3333333336321360632107362107363333210736666666633333Jf0`0000000000000000","f":"```````````````````````````````{{{h{b{f{d}}}}j}l}{{{h{{f{ce}}}}}{{h{e}}}{}n}{{{A`{ce}}{A`{ge}}}{{A`{ge}}}{}{}{}}{{{A`{ce}}i}{{A`{ge}}}{}{}{}{{Ad{c}{{Ab{{A`{ge}}}}}}}}{{{h{b{f{ce}}}}{h{b{f{ce}}}}}l{}n}{{{h{{A`{ce}}}}}{{A`{h{h{e}}}}}Af{}}{{{h{b{A`{ce}}}}}{{A`{{h{b}}{h{be}}}}}Ah{}}{{{h{b{f{ce}}}}}{{h{b{f{ce}}}}}{}n}{{{h{b{f{ce}}}}}{{h{b{Aj{c}}}}}{}n}{{{h{b{A`{ce}}}}}{{A`{{h{bc}}{h{be}}}}}{}{}}{{{h{b{f{ce}}}}}{}{}n}2{{{h{{f{ce}}}}}{}{}n}{{{h{{f{ce}}}}}{{h{{Aj{c}}}}}{}n}{{{h{{f{ce}}}}}{{h{{f{ce}}}}}{}n}{{{h{{A`{ce}}}}}{{A`{{h{c}}{h{e}}}}}{}{}}2{{{h{bc}}Al{h{e}}}{{A`{{A`{gAn}}}}}B`Bb{BbBd}}`{h{{h{c}}}{}}000040{{{h{b}}}{{h{bc}}}{}}000090{{{A`{ce}}}Bf{}{}}{{{h{{f{ce}}}}}j{}n}{{{h{b{f{d}}}}}{{h{bBh}}}}{{{h{bBj}}}l}{{{h{bBl}}}l}{{{h{b{f{d}}}}}l}{{{h{b{f{ce}}}}}l{}n}{{{h{bc}}Al{h{e}}}{{A`{{A`{gAn}}}}}BnBb{BbBd}}{{{h{Bj}}}Bj}{{{h{Bl}}}Bl}{{{h{{f{ce}}}}}{{f{ce}}}C`{nC`}}{{{h{{A`{ce}}}}}{{A`{ce}}}C`C`}{{{h{b{f{ce}}}}{h{{f{ce}}}}}lC`{nC`}}{{{h{b{A`{ce}}}}{h{{A`{ce}}}}}lC`C`}{{h{h{bc}}}l{}}000{hl}000{{{A`{{h{bc}}e}}}{{A`{ce}}}C`{}}{{{A`{{h{c}}e}}}{{A`{ce}}}C`{}}{{{h{{f{ce}}}}{h{{f{ce}}}}}CbCdn}{{{h{{A`{ce}}}}{h{{A`{ce}}}}}CbCdCd}`{{{A`{{h{bc}}e}}}{{A`{ce}}}Cf{}}{{{A`{{h{c}}e}}}{{A`{ce}}}Cf{}}{{{h{b{f{ce}}}}}lChn}{{{h{b{f{ce}}}}g}l{}n{{Cl{{h{bc}}{h{bc}}}{{Ab{Cj}}}}}}{{{h{b{f{ce}}}}i}l{}nCh{{Cl{{h{bc}}}{{Ab{g}}}}}}{{}Bj}{{}Bl}{{}{{f{c}}}{}}{{{h{{f{ce}}}}}{{h{{Aj{c}}}}}{}n}{{{h{b{f{ce}}}}}{{h{b{Aj{c}}}}}{}n}{{{h{b{f{ce}}}}g}{{Cn{ce}}}{}n{{D`{j}}}}{{{h{b{f{ce}}}}}l{}n}{{{h{Bj}}}j}{{{h{Bl}}}j}{{{h{{f{d}}}}}j}{{{h{Bj}}{h{Bj}}}Cj}{{{h{Bl}}{h{Bl}}}Cj}{{{h{An}}{h{An}}}Cj}{{{h{Db}}{h{Db}}}Cj}{{{h{{f{eg}}}}{h{{f{ci}}}}}Cj{}{{Ch{c}}}nn}{{{h{{f{d}}}}{h{Dd}}}Cj}{{{h{{f{eg}}}}{h{{h{{Df{c}}}}}}}Cj{}{{Ch{c}}}n}{{{h{{f{eg}}}}{h{{Df{c}}}}}Cj{}{{Ch{c}}}n}{{{h{{f{eg}}}}{h{{Aj{c}}}}}Cj{}{{Ch{c}}}n}{{{h{{f{d}}}}{h{Dh}}}Cj}{{{h{{f{eg}}}}{h{{h{b{Aj{c}}}}}}}Cj{}{{Ch{c}}}n}{{{h{{f{eg}}}}{h{{h{{Aj{c}}}}}}}Cj{}{{Ch{c}}}n}{{{h{{A`{ce}}}}{h{{A`{ce}}}}}CjChCh}{{{A`{ce}}}{{Dj{e}}}{}{}}{{{A`{ce}}{h{Dl}}}c{}Dn}{{{A`{ce}}{h{Dl}}}eDn{}}{{{h{b{f{ce}}}}g}lCfn{{Eb{}{{E`{{h{c}}}}}}}}{{{h{b{f{ce}}}}g}l{}n{{Eb{}{{E`{c}}}}}}{{{h{b{f{ce}}}}{h{{Aj{c}}}}}lC`n}{{{h{b{f{ce}}}}g}lC`n{{D`{j}}}}{{{h{b{f{ce}}}}c}l{}n}{{{h{b{f{ce}}}}{h{c}}}lCfn}{{{h{b{f{ce}}}}j}l{}n}{{{h{b{f{ce}}}}j}lCfn}{{{h{b{f{ce}}}}g}{{Ed{cge}}}{}n{{Cl{{h{bc}}}{{Ab{Cj}}}}}}{{{A`{{A`{ce}}e}}}{{A`{ce}}}{}{}}{{{h{b{f{dc}}}}}{{A`{lEf}}}n}{{{h{Bj}}{h{bEh}}}Ej}{{{h{Bl}}{h{bEh}}}Ej}{{{h{An}}{h{bEh}}}Ej}0{{{h{Db}}{h{bEh}}}Ej}{{{h{{f{ce}}}}{h{bEh}}}{{A`{lEl}}}Dnn}{{{h{{A`{ce}}}}{h{bEh}}}{{A`{lEl}}}DnDn}`{cc{}}0{{{A`{{f{d}}An}}}Bl}1{AlDb}2{Dh{{f{d}}}}3{{{En{ce}}}{{f{ce}}}{}n}{{{F`{ce}}}{{f{ce}}}{}n}{Fb{{f{d}}}}{Fd{{f{d}}}}{{{h{{Aj{c}}}}}{{f{c}}}C`}{{{h{b{Aj{c}}}}}{{f{c}}}C`}{{{h{{Df{c}}}}}{{f{c}}}C`}{{{h{b{Df{c}}}}}{{f{c}}}C`}{{{Df{c}}}{{f{c}}}{}}{{{Ff{{Aj{c}}}}}{{f{c}}}{}}{{{Fh{{Aj{c}}e}}}{{f{ce}}}{}n}{{{h{Dl}}}{{f{d}}}}{Dd{{f{d}}}}{Fj{{A`{FlFn}}}}{cc{}}{{{h{Fj}}}{{A`{FlFn}}}}{Bl{{A`{{f{d}}An}}}}{e{{f{c}}}{}{{Eb{}{{E`{c}}}}}}{g{{A`{ie}}}{}{}{{Eb{}{{E`{{A`{ce}}}}}}}{{G`{c}}}}{{}{{A`{ce}}}{}{}}{{jj}{{f{c}}}{}}{{jjc}{{f{ec}}}n{}}{{{Gb{c}}}{{A`{eg}}}{}{}{{Gd{c}}}}{{{A`{Gfc}}}{{A`{eg}}}{}{}{{Gd{c}}}}{{{h{{f{ce}}}}{h{bg}}}lGhnGj}{{{h{{A`{ce}}}}{h{bg}}}lGhGhGj}{{{h{{f{ce}}}}g}h{}n{{Gl{{Aj{c}}}}}}{{{h{b{f{ce}}}}g}{{h{b}}}{}n{{Gl{{Aj{c}}}}}}{{{h{b{f{ce}}}}jc}l{}n}{{{A`{ce}}g}{{A`{ce}}}{}{}{{Ad{{h{c}}}}}}{{{A`{ce}}g}{{A`{ce}}}{}{}{{Ad{{h{e}}}}}}{{}c{}}00000{{{f{ce}}}{{Fh{{Aj{c}}e}}}{}n}{{{A`{ce}}}e{{H`{Gn}}}{}}{{{f{{Df{c}}e}}}{{f{ce}}}{}n}{{{h{b{f{ce}}}}}{}{}n}{{{h{{f{ce}}}}}{}{}n}{{{f{ce}}}{}{}n}{{{h{{A`{ce}}}}}{{Hb{c}}}{}{}}{{{h{b{A`{ce}}}}}{{Hd{c}}}{}{}}{{{A`{ce}}}{{Hf{c}}}{}{}}{{{A`{ce}}}c{}{{H`{Gn}}}}{{{f{ce}}}{{Hh{jj}}}{}n}{{{f{ce}}}{{Hh{jje}}}{}n}{{{h{bBn}}{h{{Aj{d}}}}}{{A`{{f{d}}c}}}{}}{{{h{bB`}}{h{{Aj{d}}}}}{{Hl{{Fh{Hj}}}}}}{{{h{{f{ce}}}}}Cj{}n}{{{h{{A`{ce}}}}}Cj{}{}}{{{A`{ce}}g}Cj{}{}{{Ad{e}{{Ab{Cj}}}}}}1{{{A`{ce}}g}Cj{}{}{{Ad{c}{{Ab{Cj}}}}}}{{{h{{f{dc}}}}}Cjn}<;{{{f{ce}}}{{h{b{Aj{c}}}}}{}n}{{{h{{f{ce}}}}}j{}n}{{{A`{ce}}i}{{A`{ge}}}{}{}{}{{Ad{c}{{Ab{g}}}}}}{{{A`{ce}}i}{{A`{cg}}}{}{}{}{{Ad{e}{{Ab{g}}}}}}{{{A`{ce}}gi}g{}{}{}{{Ad{c}{{Ab{g}}}}}}{{{A`{ce}}ik}g{}{}{}{{Ad{e}{{Ab{g}}}}}{{Ad{c}{{Ab{g}}}}}}``{{{h{{f{eg}}}}{h{{h{b{Aj{c}}}}}}}Cj{}{{Ch{c}}}n}{{{h{{f{eg}}}}{h{{Df{c}}}}}Cj{}{{Ch{c}}}n}{{{h{{f{eg}}}}{h{{f{ci}}}}}Cj{}{{Ch{c}}}nn}{{{h{{f{eg}}}}{h{{Aj{c}}}}}Cj{}{{Ch{c}}}n}{{{h{{f{eg}}}}{h{{h{{Df{c}}}}}}}Cj{}{{Ch{c}}}n}{{{h{{f{eg}}}}{h{{h{{Aj{c}}}}}}}Cj{}{{Ch{c}}}n}{DbAn}{{}{{f{c}}}{}}{c{{f{ec}}}n{}}{{Dbc}An{{H`{Fd}}}}{{{A`{ce}}}{{Dj{c}}}{}{}}{{{A`{ce}}{A`{cg}}}{{A`{cg}}}{}{}{}}{{{A`{ce}}i}{{A`{cg}}}{}{}{}{{Ad{e}{{Ab{{A`{cg}}}}}}}}{{{h{{f{ce}}}}{h{{f{cg}}}}}{{Dj{Cb}}}Hnnn}{{{h{{f{d}}}}{h{Dd}}}{{Dj{Cb}}}}{{{h{{f{d}}}}{h{Dh}}}{{Dj{Cb}}}}{{{h{{A`{ce}}}}{h{{A`{ce}}}}}{{Dj{Cb}}}HnHn}{{{h{b{f{ce}}}}}{{Dj{c}}}{}n}{{{h{b{f{ce}}}}g}{{Dj{c}}}{}n{{Ad{{h{bc}}}{{Ab{Cj}}}}}}{g{{A`{ie}}}{}{}{{I`{}{{E`{{A`{ce}}}}}}}{{Ib{c}}}}{{{h{b{f{ce}}}}c}l{}n}{{{h{b{f{ce}}}}c}{{A`{lc}}}{}n}{{{h{b{f{d}}}}c}lId}{{{h{b{f{d}}}}dj}l}{{{h{b{f{d}}}}{h{{Aj{d}}}}}l}{{{h{{f{d}}}}}j}{{{h{b{f{ce}}}}j}c{}n}{{{A`{ce}}}IfIhDn}{{{h{b{f{ce}}}}j}l{}n}0{{{h{b{f{ce}}}}jc}lC`n}{{{h{b{f{ce}}}}jg}l{}n{{Cl{}{{Ab{c}}}}}}``{{{h{b{f{ce}}}}g}l{}n{{Cl{{h{c}}}{{Ab{Cj}}}}}}{{{h{b{f{ce}}}}g}l{}n{{Cl{{h{bc}}}{{Ab{Cj}}}}}}44{{{h{b{f{ce}}}}}l{}n}{{{h{b{f{ce}}}}}{{h{b{Aj{{Ij{c}}}}}}}{}n}{{{h{b{f{ce}}}}gi}{{Il{e}}}{}n{{D`{j}}}{{Eb{}{{E`{c}}}}}}{{{h{b{f{ce}}}}}{{Hh{{h{b{Aj{c}}}}{h{b{Aj{{Ij{c}}}}}}}}}{}n}{{{h{b{f{ce}}}}j}{{f{ce}}}{}{C`n}}{g{{A`{ie}}}{}{}{{I`{}{{E`{{A`{ce}}}}}}}{{In{c}}}}<{hc{}}000{hFd}{{{A`{{Dj{c}}e}}}{{Dj{{A`{ce}}}}}{}{}}={c{{A`{e}}}{}{}}00000{{}{{A`{c}}}{}}00000{{{h{b{f{ce}}}}j}{{A`{lJ`}}}{}n}0{j{{A`{{f{c}}J`}}}{}}{{jc}{{A`{{f{ec}}J`}}}n{}}{hJb}00000{{{A`{ce}}}c{}Dn}{{{A`{ce}}}eDn{}}{{{A`{ce}}}e{}{}}{{{A`{ce}}c}c{}{}}{{{A`{ce}}}cBd{}}{{{A`{ce}}g}c{}{}{{Ad{e}{{Ab{c}}}}}}{{{A`{ce}}}c{}{}}{j{{f{c}}}{}}{{jc}{{f{ec}}}n{}}{{{h{b{f{dc}}}}{h{{Aj{d}}}}}{{A`{jEf}}}n}{{{h{b{f{dc}}}}{h{{Aj{d}}}}}{{A`{lEf}}}n}{{{h{b{f{dc}}}}{h{{Aj{Jd}}}}}{{A`{jEf}}}n}```{h{{h{c}}}{}}{{{h{b}}}{{h{bc}}}{}}{{{h{Jf}}}Jf}{{h{h{bc}}}l{}}{hl}{{{h{Jf}}{h{bc}}}lJh}{{{h{Jf}}}j}{{{h{Jf}}{h{Jf}}}Cj}{{{h{Jf}}{h{bEh}}}Ej}{cc{}}{{}c{}}{{{h{b{Dj{Jf}}}}AlJj{h{bc}}Jl}{{A`{lJn}}}Id}{hc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hJb}","D":"ADl","p":[[0,"mut"],[1,"u8"],[5,"Vec",0,321],[1,"reference"],[1,"usize"],[1,"unit"],[10,"Allocator",322],[6,"Result",0,323],[17,"Output"],[10,"FnOnce",324],[10,"Deref",325],[10,"DerefMut",325],[1,"slice"],[1,"u32"],[5,"Status",0,326],[10,"AsyncTransport",0],[10,"Message",327],[10,"Default",328],[6,"ControlFlow",329],[5,"UninitSlice",330],[5,"RequestWrapper",0,331],[5,"ResponseWrapper",0,331],[10,"Transport",0],[10,"Clone",332],[6,"Ordering",333],[10,"Ord",333],[10,"Copy",334],[10,"PartialEq",333],[1,"bool"],[10,"FnMut",324],[5,"Drain",335],[10,"RangeBounds",336],[6,"StatusCode",0,326],[5,"BytesMut",337],[1,"array"],[5,"Bytes",338],[6,"Option",339],[1,"str"],[10,"Debug",340],[17,"Item"],[10,"IntoIterator",341],[5,"ExtractIf",342],[5,"Error",343],[5,"Formatter",340],[8,"Result",340],[5,"Error",340],[5,"BinaryHeap",344],[5,"VecDeque",345],[5,"CString",346],[5,"String",347],[6,"Cow",348],[5,"Box",349],[5,"StreamResult",350],[6,"MZStatus",350],[6,"MZError",350],[10,"FromIterator",341],[5,"Yeet",351],[10,"From",352],[6,"Infallible",352],[10,"Hash",353],[10,"Hasher",353],[10,"SliceIndex",354],[1,"never"],[10,"Into",352],[5,"Iter",323],[5,"IterMut",323],[5,"IntoIter",323],[1,"tuple"],[10,"Future",355],[5,"Pin",356],[10,"PartialOrd",333],[10,"Iterator",357],[10,"Product",358],[10,"Buf",359],[5,"ExitCode",360],[10,"Termination",360],[20,"MaybeUninit",361],[5,"Splice",362],[10,"Sum",358],[5,"TryReserveError",363],[5,"TypeId",364],[5,"IoSlice",365],[6,"Response",302,366],[10,"BufMut",367],[6,"WireType",368],[5,"DecodeContext",368],[5,"DecodeError",369]],"r":[[6,370],[14,370],[19,331],[21,331],[22,323],[23,326],[24,326],[30,321],[140,371],[249,331],[304,366]],"b":[[38,"impl-AsMut%3CVec%3CT,+A%3E%3E-for-Vec%3CT,+A%3E"],[39,"impl-AsMut%3C%5BT%5D%3E-for-Vec%3CT,+A%3E"],[44,"impl-AsRef%3C%5BT%5D%3E-for-Vec%3CT,+A%3E"],[45,"impl-AsRef%3CVec%3CT,+A%3E%3E-for-Vec%3CT,+A%3E"],[69,"impl-Message-for-Vec%3Cu8%3E"],[70,"impl-Vec%3CT,+A%3E"],[86,"impl-Result%3C%26mut+T,+E%3E"],[87,"impl-Result%3C%26T,+E%3E"],[91,"impl-Result%3C%26mut+T,+E%3E"],[92,"impl-Result%3C%26T,+E%3E"],[110,"impl-PartialEq%3CVec%3CU,+A2%3E%3E-for-Vec%3CT,+A1%3E"],[111,"impl-PartialEq%3CBytesMut%3E-for-Vec%3Cu8%3E"],[112,"impl-PartialEq%3C%26%5BU;+N%5D%3E-for-Vec%3CT,+A%3E"],[113,"impl-PartialEq%3C%5BU;+N%5D%3E-for-Vec%3CT,+A%3E"],[114,"impl-PartialEq%3C%5BU%5D%3E-for-Vec%3CT,+A%3E"],[115,"impl-PartialEq%3CBytes%3E-for-Vec%3Cu8%3E"],[116,"impl-PartialEq%3C%26mut+%5BU%5D%3E-for-Vec%3CT,+A%3E"],[117,"impl-PartialEq%3C%26%5BU%5D%3E-for-Vec%3CT,+A%3E"],[122,"impl-Extend%3C%26T%3E-for-Vec%3CT,+A%3E"],[123,"impl-Extend%3CT%3E-for-Vec%3CT,+A%3E"],[126,"impl-Extend%3CT%3E-for-Vec%3CT,+A%3E"],[127,"impl-Extend%3C%26T%3E-for-Vec%3CT,+A%3E"],[128,"impl-Extend%3CT%3E-for-Vec%3CT,+A%3E"],[129,"impl-Extend%3C%26T%3E-for-Vec%3CT,+A%3E"],[135,"impl-Display-for-Status"],[136,"impl-Debug-for-Status"],[147,"impl-From%3CBytes%3E-for-Vec%3Cu8%3E"],[149,"impl-From%3CBinaryHeap%3CT,+A%3E%3E-for-Vec%3CT,+A%3E"],[150,"impl-From%3CVecDeque%3CT,+A%3E%3E-for-Vec%3CT,+A%3E"],[151,"impl-From%3CCString%3E-for-Vec%3Cu8%3E"],[152,"impl-From%3CString%3E-for-Vec%3Cu8%3E"],[153,"impl-From%3C%26%5BT%5D%3E-for-Vec%3CT%3E"],[154,"impl-From%3C%26mut+%5BT%5D%3E-for-Vec%3CT%3E"],[155,"impl-From%3C%26%5BT;+N%5D%3E-for-Vec%3CT%3E"],[156,"impl-From%3C%26mut+%5BT;+N%5D%3E-for-Vec%3CT%3E"],[157,"impl-From%3C%5BT;+N%5D%3E-for-Vec%3CT%3E"],[158,"impl-From%3CCow%3C\'a,+%5BT%5D%3E%3E-for-Vec%3CT%3E"],[159,"impl-From%3CBox%3C%5BT%5D,+A%3E%3E-for-Vec%3CT,+A%3E"],[160,"impl-From%3C%26str%3E-for-Vec%3Cu8%3E"],[161,"impl-From%3CBytesMut%3E-for-Vec%3Cu8%3E"],[162,"impl-From%3CStreamResult%3E-for-Result%3CMZStatus,+MZError%3E"],[164,"impl-From%3C%26StreamResult%3E-for-Result%3CMZStatus,+MZError%3E"],[165,"impl-From%3CResponseWrapper%3E-for-Result%3CVec%3Cu8%3E,+Status%3E"],[171,"impl-FromResidual%3CYeet%3CE%3E%3E-for-Result%3CT,+F%3E"],[172,"impl-FromResidual%3CResult%3CInfallible,+E%3E%3E-for-Result%3CT,+F%3E"],[189,"impl-IntoIterator-for-%26mut+Vec%3CT,+A%3E"],[190,"impl-IntoIterator-for-%26Vec%3CT,+A%3E"],[191,"impl-IntoIterator-for-Vec%3CT,+A%3E"],[192,"impl-IntoIterator-for-%26Result%3CT,+E%3E"],[193,"impl-IntoIterator-for-%26mut+Result%3CT,+E%3E"],[194,"impl-IntoIterator-for-Result%3CT,+E%3E"],[216,"impl-PartialEq%3C%26mut+%5BU%5D%3E-for-Vec%3CT,+A%3E"],[217,"impl-PartialEq%3C%5BU;+N%5D%3E-for-Vec%3CT,+A%3E"],[218,"impl-PartialEq%3CVec%3CU,+A2%3E%3E-for-Vec%3CT,+A1%3E"],[219,"impl-PartialEq%3C%5BU%5D%3E-for-Vec%3CT,+A%3E"],[220,"impl-PartialEq%3C%26%5BU;+N%5D%3E-for-Vec%3CT,+A%3E"],[221,"impl-PartialEq%3C%26%5BU%5D%3E-for-Vec%3CT,+A%3E"],[229,"impl-PartialOrd%3CVec%3CT,+A2%3E%3E-for-Vec%3CT,+A1%3E"],[230,"impl-PartialOrd%3CBytesMut%3E-for-Vec%3Cu8%3E"],[231,"impl-PartialOrd%3CBytes%3E-for-Vec%3Cu8%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJsAKgAAAAAABwAAAA8AAAAYAAAAIAAAACcAAQAtAAEAMwAOAEMAAwBJAAMATgAIAFkAAgBhAAEAZAABAGcAEAB7AAEAfwADAIUABwCQAAAAkgAAAJQAAACiAAEApQACAKkAAACsAAUAvgABAMEAAQDHAAAAzgAAANkABgDiAAAA5gADAO8AAwD0AAAA+QAAAAYBBAANAQsAHQEFACwBAgAxAQUAOQEBAD4BAwA="}],["micro_rpc_build",{"t":"FFFGPPFNNNNNNNNNNONNNNNNNNNHNNNOONNNNNNNNNNHOONNNNNOOONOONNNNNNNNNNNNNNNNNN","n":["CompileOptions","ExternPath","Method","ReceiverType","RefMutSelf","RefSelf","Service","borrow","","","","","borrow_mut","","","","","bytes","clone","","","clone_into","","","clone_to_uninit","","","compile","default","","","enable_type_names","extern_paths","fmt","","","from","","","","","","","generate_file","id","input_type","into","","","","","methods","name","","new","output_type","receiver_type","to_owned","","","try_from","","","","","try_into","","","","","type_id","","","",""],"q":[[0,"micro_rpc_build"],[75,"std::path"],[76,"core::convert"],[77,"core::fmt"],[78,"prost_build::ast"],[79,"alloc::string"],[80,"core::result"],[81,"core::any"],[82,"micro_rpc_build::prost"]],"i":"````h0`f1jAhAj342102342342342`342224103421100`0034210110302342342103421034210","f":"```````{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000`{{{b{f}}}f}{{{b{h}}}h}{{{b{j}}}j}{{b{b{dc}}}l{}}00{bl}00{{{b{{n{c}}}}{b{{n{e}}}}j}l{{Ab{A`}}}{{Ab{A`}}}}{{}f}{{}h}{{}j}``{{{b{h}}{b{dAd}}}Af}{{{b{Ah}}{b{dAd}}}Af}{{{b{Aj}}{b{dAd}}}Af}{cc{}}000{{{b{Al}}}Ah}{{{b{An}}}Aj}2{{{b{Ah}}h{b{dB`}}}l}``{{}c{}}0000```{{{b{Bb}}{b{Bb}}}f}``{bc{}}00{c{{Bd{e}}}{}{}}0000{{}{{Bd{c}}}{}}0000{bBf}0000","D":"Bd","p":[[1,"reference"],[0,"mut"],[5,"ExternPath",0],[6,"ReceiverType",0],[5,"CompileOptions",0],[1,"unit"],[1,"slice"],[5,"Path",75],[10,"AsRef",76],[5,"Formatter",77],[8,"Result",77],[5,"Service",0],[5,"Method",0],[5,"Service",78],[5,"Method",78],[5,"String",79],[1,"str"],[6,"Result",80],[5,"TypeId",81]],"r":[[27,82]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADkACQAAAAQACAAJABMACAAdAAIAIgACACkAAQAsAAIANAAEADoAEQA="}],["oak_attestation",{"t":"CFFKNNONNNNNOHHNNNNNMNNHNNNNNNN","n":["dice","DiceAttester","LayerData","MeasureDigest","add_application_keys","add_layer","additional_claims","borrow","","borrow_mut","","deserialize","encoded_event","evidence_and_event_log_to_proto","evidence_to_proto","extend","from","","into","","measure_digest","quote","serialize","stage0_dice_data_and_event_log_to_proto","try_from","","","try_into","","type_id",""],"q":[[0,"oak_attestation"],[1,"oak_attestation::dice"],[31,"p256::ecdsa"],[32,"core::option"],[33,"oak_proto_rust::oak::attestation::v1"],[34,"anyhow"],[35,"oak_dice::evidence"],[36,"oak_proto_rust::oak"],[37,"alloc::vec"],[38,"core::result"],[39,"core::any"]],"i":"````b0d010110``10101Aj22`1221212","f":"````{{bd{j{{h{f}}}}{j{l}}{n{{j{{h{f}}}}}}{n{{j{l}}}}}{{Ab{A`}}}}{{{j{Adb}}d}{{Ab{Af}}}}`{j{{j{c}}}{}}0{{{j{Ad}}}{{j{Adc}}}{}}0{{{j{{h{f}}}}}{{Ab{b}}}}`{{Ah{n{{j{{h{f}}}}}}}{{Ab{A`}}}}{Ah{{Ab{A`}}}}{{{j{Adb}}{j{{h{f}}}}}{{Ab{Af}}}}{cc{}}0{{}c{}}0{{{j{Aj}}}Al}{{{j{b}}}{{Ab{A`}}}}{b{{An{f}}}}{{B`Bb}{{Ab{Bd}}}}{c{{Bf{e}}}{}{}}0{Bd{{Ab{b}}}}{{}{{Bf{c}}}{}}0{jBh}0","D":"Ad","p":[[5,"DiceAttester",1],[5,"LayerData",1],[1,"u8"],[1,"slice"],[1,"reference"],[8,"VerifyingKey",31],[6,"Option",32],[5,"Evidence",33],[8,"Result",34],[0,"mut"],[1,"unit"],[5,"Evidence",35],[10,"MeasureDigest",1],[5,"RawDigest",36],[5,"Vec",37],[5,"Stage0DiceData",35],[5,"EventLog",33],[5,"DiceData",33],[6,"Result",38],[5,"TypeId",39]],"r":[],"b":[],"c":"OjAAAAEAAAAAAAAAEAAAAA8A","e":"OzAAAAEAABUABQAAAAEABAAAAAgABAAOAAIAFQAKAA=="}],["oak_attestation_explain",{"t":"KKMM","n":["HumanReadableExplanation","HumanReadableTitle","description","title"],"q":[[0,"oak_attestation_explain"],[4,"alloc::string"],[5,"anyhow"]],"i":"``bl","f":"``{{{d{b}}}{{j{fh}}}}{{{d{l}}}{{j{fh}}}}","D":"f","p":[[10,"HumanReadableExplanation",0],[1,"reference"],[5,"String",4],[5,"Error",5],[8,"Result",5],[10,"HumanReadableTitle",0]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA="}],["oak_attestation_explain_wasm",{"t":"H","n":["explain"],"q":[[0,"oak_attestation_explain_wasm"],[1,"alloc::string"]],"i":"`","f":"{{{f{{d{b}}}}}h}","D":"`","p":[[1,"u8"],[1,"slice"],[1,"reference"],[5,"String",1]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA="}],["oak_attestation_types",{"t":"CCCKMMKMKMM","n":["attester","endorser","util","Attester","extend","quote","Endorser","endorse","Serializable","deserialize","serialize"],"q":[[0,"oak_attestation_types"],[3,"oak_attestation_types::attester"],[6,"oak_attestation_types::endorser"],[8,"oak_attestation_types::util"],[11,"anyhow"],[12,"oak_proto_rust::oak::attestation::v1"],[13,"core::option"],[14,"alloc::vec"]],"i":"````d0`Ab`Ah0","f":"````{{{f{bd}}{f{{j{h}}}}}{{n{l}}}}{{{f{d}}}{{n{A`}}}}`{{{f{Ab}}{Ad{{f{A`}}}}}{{n{Af}}}}`{{{f{{j{h}}}}}{{n{Ah}}}}{Ah{{Aj{h}}}}","D":"l","p":[[0,"mut"],[10,"Attester",3],[1,"reference"],[1,"u8"],[1,"slice"],[1,"unit"],[8,"Result",11],[5,"Evidence",12],[10,"Endorser",6],[6,"Option",13],[5,"Endorsements",12],[10,"Serializable",8],[5,"Vec",14]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAUAAgAAAAMACgABAA=="}],["oak_attestation_verification",{"t":"KHCCHCHHMCHHHCCCCFNNNNNNNNNNFNNNNNNNNNNFNNNNNNNNNNFNNNNNNNNNNFNNNNNHNNNHNHHHN","n":["UnixTimestampMillis","convert_pem_to_raw","expect","extract","hex_to_raw_digest","policy","raw_to_hex_digest","reference_values_from_evidence","unix_timestamp_millis","verifier","verify_endorsement","get_expected_values","extract_evidence","application","binary","kernel","system","ApplicationPolicy","borrow","borrow_mut","from","into","new","try_from","try_into","type_id","verify","vzip","BinaryPolicy","borrow","borrow_mut","from","into","new","try_from","try_into","type_id","verify","vzip","KernelPolicy","borrow","borrow_mut","from","into","new","try_from","try_into","type_id","verify","vzip","SystemPolicy","borrow","borrow_mut","from","into","new","try_from","try_into","type_id","verify","vzip","AmdSevSnpDiceAttestationVerifier","borrow","borrow_mut","from","into","new","to_attestation_results","try_from","try_into","type_id","verify","","verify_dice_chain","verify_dice_chain_and_extract_evidence","verify_with_expected_values","vzip"],"q":[[0,"oak_attestation_verification"],[11,"oak_attestation_verification::expect"],[12,"oak_attestation_verification::extract"],[13,"oak_attestation_verification::policy"],[17,"oak_attestation_verification::policy::application"],[28,"oak_attestation_verification::policy::binary"],[39,"oak_attestation_verification::policy::kernel"],[50,"oak_attestation_verification::policy::system"],[61,"oak_attestation_verification::verifier"],[77,"alloc::vec"],[78,"anyhow"],[79,"oak_proto_rust::oak"],[80,"oak_proto_rust::oak::attestation::v1"],[81,"oak_attestation_verification::util"],[82,"core::result"],[83,"core::any"],[84,"oak_attestation_verification_types::policy"],[85,"alloc::boxed"],[86,"oak_attestation_verification_types::util"],[87,"p256::ecdsa"]],"i":"````````Ad`````````Bh000000000`Cd000000000`Ch000000000`Cl000000000`Dd0000`000`0```0","f":"`{{{d{b}}}{{j{{h{f}}}}}}``{{{d{l}}}{{j{n}}}}`{{{d{n}}}l}{A`Ab}{{{d{Ad}}}Af}`{{Af{d{Ah}}{d{Aj}}}{{j{Al}}}}{{Af{d{An}}{d{Ab}}}{{j{B`}}}}{{{d{Bb}}}{{j{A`}}}}`````{d{{d{c}}}{}}{{{d{Bd}}}{{d{Bdc}}}{}}{cc{}}{{}c{}}{{{d{Bf}}}Bh}{c{{Bj{e}}}{}{}}{{}{{Bj{c}}}{}}{dBl}{{{d{Bh}}{d{{Bn{f}}}}{d{{Bn{f}}}}Af}{{j{C`}}}}5`8765{{{d{Cb}}}Cd}432{{{d{Cd}}{d{{Bn{f}}}}{d{{Bn{f}}}}Af}{{j{C`}}}}7`:987{{{d{Cf}}}Ch}654{{{d{Ch}}{d{{Bn{f}}}}{d{{Bn{f}}}}Af}{{j{C`}}}}9`<;:9{{{d{Cj}}}Cl}876{{{d{Cl}}{d{{Bn{f}}}}{d{{Bn{f}}}}Af}{{j{C`}}}};`>=<;{{{h{{D`{Cn}}}}{D`{Db}}}Dd}{{{d{{j{A`}}}}}Df};:9{{Af{d{Bb}}{d{An}}{d{Ab}}}{{j{A`}}}}{{{d{Dd}}{d{Bb}}{d{An}}}{{j{Df}}}}{{{d{Bb}}}{{j{Dh}}}}{{{d{Bb}}}{{j{A`}}}}{{Af{d{Bb}}{d{An}}{d{B`}}}{{j{A`}}}}{{}c{}}","D":"Bj","p":[[1,"str"],[1,"reference"],[1,"u8"],[5,"Vec",77],[8,"Result",78],[5,"HexDigest",79],[5,"RawDigest",79],[5,"ExtractedEvidence",80],[5,"ReferenceValues",80],[10,"UnixTimestampMillis",0,81],[1,"i64"],[5,"SignedEndorsement",80],[5,"EndorsementReferenceValue",80],[5,"EndorsementDetails",80],[5,"Endorsements",80],[5,"ExpectedValues",80],[5,"Evidence",80],[0,"mut"],[5,"ApplicationLayerReferenceValues",80],[5,"ApplicationPolicy",17],[6,"Result",82],[5,"TypeId",83],[1,"slice"],[5,"EventAttestationResults",80],[5,"EventReferenceValues",80],[5,"BinaryPolicy",28],[5,"KernelLayerReferenceValues",80],[5,"KernelPolicy",39],[5,"SystemLayerReferenceValues",80],[5,"SystemPolicy",50],[25,"EventPolicy",84],[5,"Box",85],[10,"Clock",86],[5,"AmdSevSnpDiceAttestationVerifier",61],[5,"AttestationResults",80],[8,"VerifyingKey",87]],"r":[[0,81],[1,81],[4,81],[6,81],[7,81]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADgADQAAAAAAAwABAAYAAAAIAAEADAAAAA4ABgAXAAgAIgAIAC0ACAA4AAgAQwAEAEkAAABNAAAA"}],["oak_attestation_verification_types",{"t":"CCCZKMKMKM","n":["policy","util","verifier","EventPolicy","Policy","verify","Clock","get_milliseconds_since_epoch","AttestationVerifier","verify"],"q":[[0,"oak_attestation_verification_types"],[3,"oak_attestation_verification_types::policy"],[6,"oak_attestation_verification_types::util"],[8,"oak_attestation_verification_types::verifier"],[10,"oak_proto_rust::oak::attestation::v1"],[11,"anyhow"],[12,"core::marker"]],"i":"`````b`n`A`","f":"`````{{{d{b}}{d{c}}{d{e}}f}{{j{h}}}ll}`{{{d{n}}}f}`{{{d{A`}}{d{Ab}}{d{Ad}}}{{j{Af}}}}","D":"j","p":[[10,"Policy",3],[1,"reference"],[1,"i64"],[5,"EventAttestationResults",10],[8,"Result",11],[10,"Sized",12],[10,"Clock",6],[10,"AttestationVerifier",8],[5,"Evidence",10],[5,"Endorsements",10],[5,"AttestationResults",10]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAUAAwAAAAMABgAAAAoAAAA="}],["oak_channel",{"t":"KKKCCMCMCMHHFFNNNNNNNNNNNNNNNNNNNSSSISSIKFFOONNNNNNNNNNMNNMNNNNNNNNNNOOMNNNNNNNNNNFNNNNNNNNNN","n":["Channel","Read","Write","basic_framed","client","flush","message","read_exact","server","write_all","receive_raw","send_raw","ClientChannelHandle","RequestEncoder","borrow","","borrow_mut","","default","encode_request","from","","into","","new","read_response","try_from","","try_into","","type_id","","write_request","BODY_OFFSET","INVOCATION_ID_OFFSET","INVOCATION_ID_SIZE","InvocationId","LENGTH_OFFSET","LENGTH_SIZE","Length","Message","RequestMessage","ResponseMessage","body","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","decode","","","encode","","","eq","","fmt","","from","","into","","invocation_id","","len","","","to_owned","","try_from","","try_into","","type_id","","ServerChannelHandle","borrow","borrow_mut","from","into","new","read_request","try_from","try_into","type_id","write_response"],"q":[[0,"oak_channel"],[10,"oak_channel::basic_framed"],[12,"oak_channel::client"],[33,"oak_channel::message"],[82,"oak_channel::server"],[93,"anyhow"],[94,"alloc::vec"],[95,"core::marker"],[96,"alloc::boxed"],[97,"oak_core::timer"],[98,"core::result"],[99,"core::any"],[100,"core::fmt"]],"i":"`````d`l`1````AnAh10001010111010101``````````AjB`1010101010Bj21021212121212102121212121`Cd000000000","f":"`````{{{f{bd}}}{{j{h}}}}`{{{f{bl}}{f{b{A`{n}}}}}{{j{h}}}}`{{{f{bd}}{f{{A`{n}}}}}{{j{h}}}}{{{f{bc}}}{{j{{Ab{n}}}}}{AdAf}}{{{f{bc}}{f{{A`{n}}}}}{{j{h}}}{AdAf}}``{f{{f{c}}}{}}0{{{f{b}}}{{f{bc}}}{}}0{{}Ah}{{{f{bAh}}{f{{A`{n}}}}}Aj}{cc{}}0{{}c{}}0{{{Al{Ad}}}An}{{{f{bAn}}}{{j{{Bd{B`Bb}}}}}}{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{fBh}0{{{f{bAn}}Aj}{{j{h}}}}````````````;;::{{{f{Aj}}}Aj}{{{f{B`}}}B`}{{f{f{bc}}}h{}}0{fh}0{{{f{{A`{n}}}}}Bj}{{{f{{A`{n}}}}}Aj}{{{f{{A`{n}}}}}B`}{Bj{{Ab{n}}}}{Aj{{Ab{n}}}}{B`{{Ab{n}}}}{{{f{Aj}}{f{Aj}}}Bl}{{{f{B`}}{f{B`}}}Bl}{{{f{Aj}}{f{bBn}}}C`}{{{f{B`}}{f{bBn}}}C`}{cc{}}0{{}c{}}0``{{{f{Bj}}}Cb}{{{f{Aj}}}Cb}{{{f{B`}}}Cb}{fc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{fBh}0`{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}:9{{{Al{Ad}}}Cd}{{{f{bCd}}}{{j{{Bd{AjBb}}}}}}654{{{f{bCd}}B`}{{j{h}}}}","D":"B`","p":[[0,"mut"],[10,"Write",0],[1,"reference"],[1,"unit"],[8,"Result",93],[10,"Read",0],[1,"u8"],[1,"slice"],[5,"Vec",94],[10,"Channel",0],[10,"Sized",95],[5,"RequestEncoder",12],[5,"RequestMessage",33],[5,"Box",96],[5,"ClientChannelHandle",12],[5,"ResponseMessage",33],[5,"Timer",97],[1,"tuple"],[6,"Result",98],[5,"TypeId",99],[10,"Message",33],[1,"bool"],[5,"Formatter",100],[8,"Result",100],[1,"usize"],[5,"ServerChannelHandle",82]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAE0ABwAAAAEABQABAAgADAAZABAALAAVAEYADwBYAAUA"}],["oak_client",{"t":"CCCFNNNNNNNNNNKKMMKFNNHNNNNNMNN","n":["client","transport","verifier","OakClient","borrow","borrow_mut","create","from","into","invoke","try_from","try_into","type_id","vzip","EvidenceProvider","Transport","get_endorsed_evidence","invoke","AttestationVerifier","InsecureAttestationVerifier","borrow","borrow_mut","extract_encryption_public_key","from","into","try_from","try_into","type_id","verify","","vzip"],"q":[[0,"oak_client"],[3,"oak_client::client"],[14,"oak_client::transport"],[18,"oak_client::verifier"],[31,"anyhow"],[32,"alloc::vec"],[33,"core::result"],[34,"core::any"],[35,"core::future::future"],[36,"alloc::boxed"],[37,"core::pin"],[38,"oak_proto_rust::oak::crypto::v1"],[39,"oak_proto_rust::oak::attestation::v1"]],"i":"````h000000000``nl``Bh0`00000f11","f":"````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{c{b{f}}}{{j{{h{c}}}}}{ln}}{cc{}}{{}c{}}{{{b{d{h{c}}}}{b{{Ab{A`}}}}}{{j{{Ad{A`}}}}}{ln}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAh}4``{{{b{dn}}}{{An{{Al{Aj}}}}}}{{{b{dl}}{b{B`}}}{{An{{Al{Aj}}}}}}``:9{{{b{Bb}}}{{j{{Ad{A`}}}}}}87543{{{b{f}}{b{Bb}}{b{Bd}}}{{j{Bf}}}}{{{b{Bh}}{b{Bb}}{b{Bd}}}{{j{Bf}}}}9","D":"l","p":[[1,"reference"],[0,"mut"],[10,"AttestationVerifier",18],[5,"OakClient",3],[8,"Result",31],[10,"Transport",14],[10,"EvidenceProvider",14],[1,"u8"],[1,"slice"],[5,"Vec",32],[6,"Result",33],[5,"TypeId",34],[10,"Future",35],[5,"Box",36],[5,"Pin",37],[5,"EncryptedRequest",38],[5,"Evidence",39],[5,"Endorsements",39],[5,"ExtractedEvidence",39],[5,"InsecureAttestationVerifier",18]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABkABQAAAAMABQACAAoACQAVAAIAGgAFAA=="}],["oak_client_tonic",{"t":"CFNNNNNNNNNNNN","n":["transport","GrpcStreamingTransport","borrow","borrow_mut","from","get_endorsed_evidence","into","into_request","invoke","new","try_from","try_into","type_id","vzip"],"q":[[0,"oak_client_tonic"],[1,"oak_client_tonic::transport"],[14,"core::future::future"],[15,"alloc::boxed"],[16,"core::pin"],[17,"tonic::request"],[18,"oak_proto_rust::oak::crypto::v1"],[19,"anyhow"],[20,"oak_proto_rust::oak::session::v1"],[21,"tonic::codec::decode"],[22,"tonic::response"],[23,"tonic"],[24,"futures_channel::mpsc"],[25,"core::ops::function"],[26,"core::result"],[27,"core::any"]],"i":"``f00000000000","f":"``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{cc{}}{{{b{df}}}{{l{{j{h}}}}}}{{}c{}}{{}{{n{c}}}{}}{{{b{df}}{b{A`}}}{{l{{j{h}}}}}}{e{{Ab{f}}}{{h{}{{Ad{{Al{{Aj{{Ah{Af}}}}}}}}}}}{{Bb{{B`{An}}}{{Ad{c}}}}}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{bBf}6","D":"h","p":[[1,"reference"],[0,"mut"],[5,"GrpcStreamingTransport",1],[10,"Future",14],[5,"Box",15],[5,"Pin",16],[5,"Request",17],[5,"EncryptedRequest",18],[8,"Result",19],[17,"Output"],[5,"ResponseWrapper",20],[5,"Streaming",21],[5,"Response",22],[8,"Result",23],[5,"RequestWrapper",20],[5,"Receiver",24],[10,"FnOnce",25],[6,"Result",26],[5,"TypeId",27]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAoABQAAAAEAAwABAAYAAAAIAAEACwADAA=="}],["oak_containers_agent",{"t":"CHPPPPPPPPPGFFFFPPPPNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNONNOONNNNONNNNNNNNNNNNNNNNNNNNNN","n":["metrics","set_error_handler","F64Counter","F64Histogram","F64ObservableCounter","F64ObservableGauge","F64ObservableUpDownCounter","F64UpDownCounter","I64ObservableGauge","I64ObservableUpDownCounter","I64UpDownCounter","MeterInstrument","MetricsConfig","MonitoringLayer","MonitoringService","OakObserver","U64Counter","U64Histogram","U64ObservableCounter","U64ObservableGauge","borrow","","","","","borrow_mut","","","","","call","","clone","","clone_into","","clone_to_uninit","","create_monitoring_layer","excluded_metrics","from","","","","","","","","","","","","","","","","","","from_ref","","init_metrics","into","","","","","into_make_service","into_request","","","","","launcher_addr","layer","make_service","meter","metric_registry","poll_ready","","","register_metric","scope","to_owned","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","",""],"q":[[0,"oak_containers_agent"],[2,"oak_containers_agent::metrics"],[104,"opentelemetry::global::error_handler"],[105,"core::result"],[106,"core::ops::function"],[107,"core::marker"],[108,"http::request"],[109,"tower_service"],[110,"core::clone"],[111,"opentelemetry::metrics::instruments::up_down_counter"],[112,"opentelemetry::metrics::instruments::gauge"],[113,"opentelemetry::metrics::instruments::counter"],[114,"opentelemetry::metrics::instruments::histogram"],[115,"axum::routing::into_make_service"],[116,"tonic::request"],[117,"core::task::wake"],[118,"core::task::poll"],[119,"core::convert"],[120,"core::any"]],"i":"``Bb00000000`````00000AlCbAjAb43210001010103244444444444444321010`4321004321021033000321043210432104321043210","f":"`{c{{f{bd}}}{{h{d}}jl}}``````````````````{n{{n{c}}}{}}0000{{{n{A`}}}{{n{A`c}}}{}}0000{{{n{A`{Ab{e}}}}{Ad{c}}}gj{{Af{{Ad{c}}}}Ahj}{}}{{{n{A`}}{Ad{c}}}{}{}}{{{n{Aj}}}Aj}{{{n{{Ab{c}}}}}{{Ab{c}}}Ah}{{n{n{A`c}}}b{}}0{nb}0{{{n{Al}}}Aj}`{{{B`{An}}}Bb}{{{Bd{An}}}Bb}{{{Bh{Bf}}}Bb}{{{Bj{Bf}}}Bb}{{{Bj{Bl}}}Bb}{{{Bn{Bl}}}Bb}{{{Bn{Bf}}}Bb}{{{C`{Bl}}}Bb}{cc{}}{{{C`{Bf}}}Bb}{{{B`{Bf}}}Bb}{{{Bd{Bl}}}Bb}{{{Bd{Bf}}}Bb}{{{Bh{An}}}Bb}5555{{{n{c}}}c{}}0{CbAl}{{}c{}}0000{{}{{Cd{c}}}{}}{{}{{Cf{c}}}{}}0000`{{{n{Aj}}c}e{}{}}{{{n{A`}}c}{}{}}``{{{n{A`}}{n{A`Ch}}}{{Cj{{f{b}}}}}}0{{{n{A`{Ab{e}}}}{n{A`Ch}}}{{Cj{{f{bg}}}}}j{{Af{{Ad{c}}}}Ahj}{}}{{{n{A`Al}}c}b{{Cl{Bb}}}}`{nc{}}0{c{{f{e}}}{}{}}0000{{}{{f{c}}}{}}0000{nCn}0000;;;;;","D":"Af","p":[[1,"unit"],[6,"Error",104],[6,"Result",105],[10,"Fn",106],[10,"Send",107],[10,"Sync",107],[1,"reference"],[0,"mut"],[5,"MonitoringService",2],[5,"Request",108],[10,"Service",109],[10,"Clone",110],[5,"MonitoringLayer",2],[5,"OakObserver",2],[1,"i64"],[5,"ObservableUpDownCounter",111],[6,"MeterInstrument",2],[5,"ObservableGauge",112],[1,"f64"],[5,"UpDownCounter",111],[5,"Counter",113],[1,"u64"],[5,"Histogram",114],[5,"ObservableCounter",113],[5,"MetricsConfig",2],[5,"IntoMakeService",115],[5,"Request",116],[5,"Context",117],[6,"Poll",118],[10,"Into",119],[5,"TypeId",120]],"r":[[1,104]],"b":[[40,"impl-From%3CObservableUpDownCounter%3Ci64%3E%3E-for-MeterInstrument"],[41,"impl-From%3CObservableGauge%3Ci64%3E%3E-for-MeterInstrument"],[42,"impl-From%3CUpDownCounter%3Cf64%3E%3E-for-MeterInstrument"],[43,"impl-From%3CCounter%3Cf64%3E%3E-for-MeterInstrument"],[44,"impl-From%3CCounter%3Cu64%3E%3E-for-MeterInstrument"],[45,"impl-From%3CHistogram%3Cu64%3E%3E-for-MeterInstrument"],[46,"impl-From%3CHistogram%3Cf64%3E%3E-for-MeterInstrument"],[47,"impl-From%3CObservableCounter%3Cu64%3E%3E-for-MeterInstrument"],[49,"impl-From%3CObservableCounter%3Cf64%3E%3E-for-MeterInstrument"],[50,"impl-From%3CObservableUpDownCounter%3Cf64%3E%3E-for-MeterInstrument"],[51,"impl-From%3CObservableGauge%3Cu64%3E%3E-for-MeterInstrument"],[52,"impl-From%3CObservableGauge%3Cf64%3E%3E-for-MeterInstrument"],[53,"impl-From%3CUpDownCounter%3Ci64%3E%3E-for-MeterInstrument"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAF0ABQAAAAEAAwAtADIABAA7AAIAQwAlAA=="}],["oak_containers_attestation",{"t":"FFFFNNNNNNNNNOOOONNNNNHNNNNHNOONNNNNNNNNNNNNNNN","n":["GroupKeys","GroupPublicKeys","InstanceKeys","InstancePublicKeys","borrow","","","","borrow_mut","","","","encrypted_group_encryption_key","encryption_key","","encryption_public_key","","from","","","","generate_group_keys","generate_instance_keys","into","","","","measure_container_and_config","provide_group_keys","signing_key","signing_public_key","try_from","","","","try_into","","","","type_id","","","","vzip","","",""],"q":[[0,"oak_containers_attestation"],[47,"oak_proto_rust::oak::crypto::v1"],[48,"anyhow"],[49,"oak_attestation::dice"],[50,"oak_proto_rust::oak::key_provisioning::v1"],[51,"core::result"],[52,"core::any"]],"i":"````A`AffAb32101312032103`3210`3323210321032103210","f":"````{b{{b{c}}}{}}000{{{b{d}}}{{b{dc}}}{}}000{{{b{f}}{b{{j{h}}}}}{{n{l}}}}````{cc{}}000{{{b{A`}}}{{Ad{fAb}}}}{{}{{Ad{A`Af}}}}{{}c{}}000{{{b{{j{h}}}}{b{{j{h}}}}}Ah}{{{b{A`}}Aj}{{n{f}}}}``{c{{Al{e}}}{}{}}000{{}{{Al{c}}}{}}000{bAn}0005555","D":"Ad","p":[[1,"reference"],[0,"mut"],[5,"GroupKeys",0],[1,"u8"],[1,"slice"],[5,"EncryptedRequest",47],[8,"Result",48],[5,"InstanceKeys",0],[5,"GroupPublicKeys",0],[1,"tuple"],[5,"InstancePublicKeys",0],[5,"LayerData",49],[5,"GroupKeys",50],[6,"Result",51],[5,"TypeId",52]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACUABAAAAAwADgADABYAAQAdABIA"}],["oak_containers_channel",{"t":"H","n":["create_channel"],"q":[[0,"oak_containers_channel"],[1,"http::uri"],[2,"tonic::transport::channel"],[3,"anyhow"]],"i":"`","f":"{b{{f{d}}}}","D":"`","p":[[5,"Uri",1],[5,"Channel",2],[8,"Result",3]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA="}],["oak_containers_hello_world_web_client",{"t":"FFNNNNNNNHNNNNNNNNNNNNNN","n":["DemoRestBasedTransport","GreeterClient","borrow","","borrow_mut","","from","","get_endorsed_evidence","greet","","into","","invoke","new","","try_from","","try_into","","type_id","","vzip",""],"q":[[0,"oak_containers_hello_world_web_client"],[24,"core::future::future"],[25,"alloc::boxed"],[26,"core::pin"],[27,"alloc::string"],[28,"wasm_bindgen"],[29,"core::result"],[30,"anyhow"],[31,"oak_proto_rust::oak::crypto::v1"],[32,"core::any"]],"i":"``fAf10101`01011010101010","f":"``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{cc{}}0{{{b{df}}}{{l{{j{h}}}}}}{{nA`}{{Ad{A`Ab}}}}{{{b{dAf}}{b{Ah}}}{{Aj{A`}}}}{{}c{}}0{{{b{df}}{b{Al}}}{{l{{j{h}}}}}}{nf}{n{{Aj{Af}}}}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{bAn}066","D":"j","p":[[1,"reference"],[0,"mut"],[5,"DemoRestBasedTransport",0],[10,"Future",24],[5,"Box",25],[5,"Pin",26],[1,"u16"],[5,"String",27],[5,"JsValue",28],[6,"Result",29],[5,"GreeterClient",0],[1,"str"],[8,"Result",30],[5,"EncryptedRequest",31],[5,"TypeId",32]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABMABAAAAAAAAgAEAAkAAgAOAAoA"}],["oak_containers_launcher",{"t":"FGGPFPPPFGPPPPGPPPONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNONOOHOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNOOO","n":["Args","Channel","ChannelType","Default","Launcher","Network","","","QemuParams","QemuVmType","Sev","SevEs","SevSnp","Tdx","TrustedApplicationAddress","VirtioVsock","","","application_config","augment_args","","augment_args_for_update","","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","command","","command_for_update","","communication_channel","container_bundle","create","default","","eq","","","equivalent","","","","fmt","","","","","from","","","","","","","from_arg_matches","","from_arg_matches_mut","","from_ref","","","","get_endorsed_evidence","get_group_keys","get_trusted_app_address","group_id","","initrd","into","","","","","","","into_request","","","","","","","kernel","kill","memory_size","num_cpus","path_exists","pci_passthrough","qemu_params","ramdrive_size","stage0_binary","system_image","telnet_console","to_owned","","","","to_possible_value","","to_string","try_from","","","","","","","","try_into","","","","","","","type_id","","","","","","","update_from_arg_matches","","update_from_arg_matches_mut","","value_variants","","virtio_guest_cid","vm_type","vmm_binary","vzip","","","","","","","wait","host_proxy_port","trusted_app_address",""],"q":[[0,"oak_containers_launcher"],[162,"oak_containers_launcher::Channel"],[165,"clap_builder::builder::command"],[166,"anyhow"],[167,"core::result"],[168,"core::fmt"],[169,"clap_builder::parser::matches::arg_matches"],[170,"clap_builder"],[171,"oak_proto_rust::oak::session::v1"],[172,"oak_proto_rust::oak::key_provisioning::v1"],[173,"clap_builder::util::id"],[174,"core::option"],[175,"tonic::request"],[176,"std::path"],[177,"alloc::string"],[178,"clap_builder::builder::possible_value"],[179,"core::any"]],"i":"```h`Alln``3333`210Abj1014Ad614235061423614361436143121222064614444456142506142312126143000121506142350614231011`1211216143645550614235061423506142312126411150614230D`0Db","f":"```````````````````{bb}000{d{{d{c}}}{}}000000{{{d{f}}}{{d{fc}}}{}}000000{{{d{h}}}h}{{{d{j}}}j}{{{d{l}}}l}{{{d{n}}}n}{{d{d{fc}}}A`{}}000{dA`}000{{}b}000``{Ab{{Ah{AdAf}}}}{{}h}{{}l}{{{d{h}}{d{h}}}Aj}{{{d{j}}{d{j}}}Aj}{{{d{l}}{d{l}}}Aj}{{d{d{c}}}Aj{}}000{{{d{Al}}{d{fAn}}}B`}{{{d{h}}{d{fAn}}}B`}{{{d{j}}{d{fAn}}}B`}{{{d{l}}{d{fAn}}}B`}{{{d{Ab}}{d{fAn}}}B`}{cc{}}000000{{{d{Bb}}}{{Ah{jBd}}}}{{{d{Bb}}}{{Ah{AbBd}}}}{{{d{fBb}}}{{Ah{jBd}}}}{{{d{fBb}}}{{Ah{AbBd}}}}{{{d{c}}}c{}}000{{{d{fAd}}}{{Bh{Bf}}}}{{{d{fAd}}Bj}{{Bh{Bl}}}}{{{d{fAd}}}{{Ah{AlAf}}}}{{}{{C`{Bn}}}}0`{{}c{}}000000{{}{{Cb{c}}}{}}000000`{{{d{fAd}}}A`}``{{{d{Cd}}}{{Ah{CfCh}}}}``````{dc{}}000{{{d{h}}}{{C`{Cj}}}}{{{d{l}}}{{C`{Cj}}}}{dCh}{n{{Ah{Alc}}}{}}{c{{Ah{e}}}{}{}}000000{{}{{Ah{c}}}{}}000000{dCl}000000{{{d{fj}}{d{Bb}}}{{Ah{A`Bd}}}}{{{d{fAb}}{d{Bb}}}{{Ah{A`Bd}}}}{{{d{fj}}{d{fBb}}}{{Ah{A`Bd}}}}{{{d{fAb}}{d{fBb}}}{{Ah{A`Bd}}}}{{}{{d{{Cn{h}}}}}}{{}{{d{{Cn{l}}}}}}```{{}c{}}000000{{{d{fAd}}}{{Ah{A`Af}}}}```","D":"Cn","p":[[5,"Command",165],[1,"reference"],[0,"mut"],[6,"QemuVmType",0],[5,"QemuParams",0],[6,"ChannelType",0],[6,"Channel",0],[1,"unit"],[5,"Args",0],[5,"Launcher",0],[5,"Error",166],[6,"Result",167],[1,"bool"],[6,"TrustedApplicationAddress",0],[5,"Formatter",168],[8,"Result",168],[5,"ArgMatches",169],[8,"Error",170],[5,"EndorsedEvidence",171],[8,"Result",166],[5,"GetGroupKeysRequest",172],[5,"GetGroupKeysResponse",172],[5,"Id",173],[6,"Option",174],[5,"Request",175],[1,"str"],[5,"PathBuf",176],[5,"String",177],[5,"PossibleValue",178],[5,"TypeId",179],[1,"slice"],[15,"Network",162],[15,"VirtioVsock",162]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIYADgAAAAYACAAAAAsAAwAQADYATgAHAFcAAABZAAEAYwAGAGsAAABuAAAAcAAAAHMAAAB1ACIAmwAKAA=="}],["oak_containers_orchestrator",{"t":"CCCCCCHHFFNNNNHNNNNNNNNNNNHNNNNNNNNNHFNNNNNNNNNNNNNNNNNNH","n":["container_runtime","dice","ipc_server","key_provisioning","launcher_client","logging","run","load_stage1_dice_data","CryptoService","ServiceImplementation","borrow","","borrow_mut","","create_services","derive_session_keys","from","","get_application_config","get_endorsed_evidence","into","","into_request","","new","notify_app_ready","server","sign","try_from","","try_into","","type_id","","vzip","","create","LauncherClient","borrow","borrow_mut","create","from","get_application_config","get_container_bundle","get_endorsements","get_group_keys","get_key_provisioning_role","into","into_request","notify_app_ready","openmetrics_builder","send_attestation_evidence","try_from","try_into","type_id","vzip","setup"],"q":[[0,"oak_containers_orchestrator"],[6,"oak_containers_orchestrator::container_runtime"],[7,"oak_containers_orchestrator::dice"],[8,"oak_containers_orchestrator::ipc_server"],[36,"oak_containers_orchestrator::key_provisioning"],[37,"oak_containers_orchestrator::launcher_client"],[56,"oak_containers_orchestrator::logging"],[57,"std::path"],[58,"nix::unistd"],[59,"tokio_util::sync::cancellation_token"],[60,"anyhow"],[61,"core::result"],[62,"oak_attestation::dice"],[63,"oak_proto_rust::oak::attestation::v1"],[64,"oak_containers_attestation"],[65,"alloc::sync"],[66,"alloc::vec"],[67,"oak_grpc::oak::containers::orchestrator_server"],[68,"oak_grpc::oak::containers::v1::orchestrator_crypto_server"],[69,"oak_proto_rust::oak::containers::v1"],[70,"tonic::request"],[71,"core::future::future"],[72,"alloc::boxed"],[73,"core::pin"],[74,"core::convert"],[75,"core::clone"],[76,"core::any"],[77,"http::uri"],[78,"core::error"],[79,"oak_proto_rust::oak::key_provisioning::v1"],[80,"opentelemetry_otlp::exporter::tonic"]],"i":"``````````BnBj10`11000101010`110101010``Bh00000000000000000`","f":"``````{{{f{{d{b}}}}{f{h}}jl{f{h}}n}{{Ad{A`Ab}}}}{{}{{Ah{Af}}}}``{f{{f{c}}}{}}0{{{f{Aj}}}{{f{Ajc}}}{}}0{{AlAnB`{Bd{Bb}}{Bf{b}}{Bd{Bh}}}{{Cb{{Bl{Bj}}{C`{Bn}}}}}}{{{f{Bn}}{Cf{Cd}}}{{Cl{{Cj{Ch}}}}}}{cc{}}0{{{f{Bj}}{Cf{A`}}}{{Cl{{Cj{Ch}}}}}}0{{}c{}}0{{}{{Cf{c}}}{}}0{{B`{Bd{Bb}}}Bn}3{{c{Bl{Bj}}{C`{Bn}}n}{{Ad{A`Ab}}}{{Cn{h}}D`}}{{{f{Bn}}{Cf{Db}}}{{Cl{{Cj{Ch}}}}}}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{fDd}077{{{f{Df}}{Bd{Bb}}n}{{Ad{A`Ab}}}}`>={Dh{{Ad{Bh{Cj{Dj}}}}}};{{{f{Bh}}}{{Ad{{Bf{b}}{Cj{Dj}}}}}}0{{{f{Bh}}}{{Ad{An{Cj{Dj}}}}}}{{{f{Bh}}}{{Ah{Dl}}}}{{{f{Bh}}}{{Ah{Dn}}}}=<{{{f{Bh}}}{{Ad{A`{Cj{Dj}}}}}}{{{f{Bh}}}E`}{{{f{Bh}}Al}{{Ad{A`{Cj{Dj}}}}}};:9{{}c{}}{{}{{Ah{A`}}}}","D":"Ab","p":[[1,"u8"],[1,"slice"],[1,"reference"],[5,"Path",57],[5,"Uid",58],[5,"Gid",58],[5,"CancellationToken",59],[1,"unit"],[5,"Error",60],[6,"Result",61],[5,"DiceAttester",62],[8,"Result",60],[0,"mut"],[5,"Evidence",63],[5,"Endorsements",63],[5,"InstanceKeys",64],[5,"GroupKeys",64],[5,"Arc",65],[5,"Vec",66],[5,"LauncherClient",37],[5,"ServiceImplementation",8],[5,"OrchestratorServer",67],[5,"CryptoService",8],[5,"OrchestratorCryptoServer",68],[1,"tuple"],[5,"DeriveSessionKeysRequest",69],[5,"Request",70],[10,"Future",71],[5,"Box",72],[5,"Pin",73],[10,"AsRef",74],[10,"Clone",75],[5,"SignRequest",69],[5,"TypeId",76],[1,"str"],[5,"Uri",77],[10,"Error",78],[5,"GroupKeys",79],[6,"KeyProvisioningRole",69],[5,"TonicExporterBuilder",80]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADAABwAAAAcACQAHABMAAQAXAA4AJwACACsABAAxAAcA"}],["oak_containers_sdk",{"t":"EEEEEEECCCCCCCFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKNNNNNNNNNNNNNMNNNNNNNNNFNNNNNNNNNNNKFNNNNMNNNNNNNFKNNNNNNNNMNNMNNNNMNNNNNNNFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNIH","n":["ApplicationHandler","InstanceAttester","InstanceEncryptionKeyHandle","InstanceEndorser","OakSessionContext","OrchestratorClient","OrchestratorInterface","attestation","crypto","handler","oak_session_context","orchestrator_client","standalone","tonic","InstanceAttester","InstanceEndorser","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","create","","endorse","extend","from","","from_ref","","into","","into_request","","quote","to_owned","","try_from","","try_into","","type_id","","vzip","","InstanceEncryptionKeyHandle","InstanceSigner","Signer","borrow","","borrow_mut","","create","","from","","generate_recipient_context","into","","into_request","","sign","","try_from","","try_into","","type_id","","vzip","","AsyncEncryptionHandler","borrow","borrow_mut","create","from","into","into_request","invoke","try_from","try_into","type_id","vzip","ApplicationHandler","OakSessionContext","borrow","borrow_mut","endorsed_evidence","from","handle","into","into_request","new","try_from","try_into","type_id","vzip","OrchestratorClient","OrchestratorInterface","borrow","borrow_mut","clone","clone_into","clone_to_uninit","create","from","from_ref","get_application_config","","","get_endorsed_evidence","","","into","into_request","notify_app_ready","","","to_owned","try_from","try_into","type_id","vzip","KeyPair","StandaloneInstanceEncryptionKeyHandle","StandaloneInstanceSigner","StandaloneOrchestrator","StandaloneOrchestratorBuilder","application_config","application_image","borrow","","","","","borrow_mut","","","","","build","builder","create","default","encryption_key_pair","from","","","","","generate_recipient_context","get_application_config","get_endorsed_evidence","","get_instance_encryption_key_handle","get_instance_signer","into","","","","","into_request","","","","","notify_app_ready","private","public","sign","signing_key_pair","stage0_measurements","stage1_system_image","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","OakSessionStream","oak_session"],"q":[[0,"oak_containers_sdk"],[14,"oak_containers_sdk::attestation"],[49,"oak_containers_sdk::crypto"],[75,"oak_containers_sdk::handler"],[87,"oak_containers_sdk::oak_session_context"],[101,"oak_containers_sdk::orchestrator_client"],[127,"oak_containers_sdk::standalone"],[197,"oak_containers_sdk::tonic"],[199,"anyhow"],[200,"oak_proto_rust::oak::attestation::v1"],[201,"core::option"],[202,"tonic::request"],[203,"core::result"],[204,"core::any"],[205,"core::future::future"],[206,"alloc::boxed"],[207,"core::pin"],[208,"oak_crypto::encryption_key"],[209,"alloc::sync"],[210,"alloc::vec"],[211,"core::ops::function"],[212,"oak_proto_rust::oak::crypto::v1"],[213,"oak_proto_rust::oak::session::v1"],[214,"p256::ecdsa"],[215,"tonic::codec::decode"],[216,"tonic::response"],[217,"tonic::status"]],"i":"````````````````fh1010101010011010101011010101010```AnB`10101011010Bh121212121`Bn0000000000``Cj000Cn1111111``D`0000000Db110111101111111`````Dd0DfF`2EbEd3241043334324101333333241032410322044432410324103241032410``","f":"````````````````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{f}}}f}{{{b{h}}}h}{{b{b{dc}}}j{}}0{bj}0{{}{{l{f}}}}{{}{{l{h}}}}{{{b{h}}{A`{{b{n}}}}}{{l{Ab}}}}{{{b{df}}{b{{Af{Ad}}}}}{{l{j}}}}{cc{}}0{{{b{c}}}c{}}0{{}c{}}0{{}{{Ah{c}}}{}}0{{{b{f}}}{{l{n}}}}{bc{}}0{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{bAl}066```{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{}{{l{An}}}}{{}{{l{B`}}}}<<{{{b{An}}{b{{Af{Ad}}}}}{{Bf{{Bd{Bb}}}}}};;::{{{b{Bh}}{b{{Af{Ad}}}}}{{Bf{{Bd{Bb}}}}}}{{{b{B`}}{b{{Af{Ad}}}}}{{Bf{{Bd{Bb}}}}}}998877==`65{{{Bl{Bj}}e}{{Bn{ec}}}{{Bb{}{{C`{{Cb{Ad}}}}}}}{{Cd{{Cb{Ad}}}{{C`{c}}}}}}{cc{}}?>{{{Bn{ec}}{b{Cf}}}{{l{Ch}}}{{Bb{}{{C`{{Cb{Ad}}}}}}}{{Cd{{Cb{Ad}}}{{C`{c}}}}}}<;:{{}c{}}``:9{{{b{Cj}}}{{b{Cl}}}}3{{{b{Cn}}{b{{Af{Ad}}}}}{{Bf{{Bd{Bb}}}}}}2{{}{{Ah{c}}}{}}{{{Bd{Bj}}Cl{Bd{Cn}}}Cj}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bAl}7``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{D`}}}D`}{{b{b{dc}}}j{}}{bj}{{}{{l{D`}}}}?{{{b{c}}}c{}}{{{b{dDb}}}{{Bf{{Bd{Bb}}}}}}{{{b{dD`}}}{{Bf{{Bd{Bb}}}}}}{{{b{dD`}}}{{l{{Cb{Ad}}}}}}21{{{b{dD`}}}{{l{Cl}}}}{{}c{}}{{}{{Ah{c}}}{}}5{{{b{dD`}}}{{l{j}}}}5{bc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bAl}6`````{{Dd{Cb{Ad}}}Dd}{{Dd{b{{Af{Ad}}}}}Dd}{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000{Dd{{l{Df}}}}{{}Dd}{{Dh{b{{Af{Ad}}}}{b{{Af{Ad}}}}{Cb{Ad}}{Dl{Dj{Cb{Ad}}}}{Dl{DnE`}}}{{l{Df}}}}{{}Df}{{Dd{A`{{Dl{Dj{Cb{Ad}}}}}}}Dd}{cc{}}0000{{{b{Eb}}{b{{Af{Ad}}}}}{{Bf{{Bd{Bb}}}}}}{{{b{dDf}}}{{Bf{{Bd{Bb}}}}}}{{{b{Df}}}Cl}1{{{b{Df}}}Eb}{{{b{Df}}}Ed}{{}c{}}0000{{}{{Ah{c}}}{}}00005``{{{b{Ed}}{b{{Af{Ad}}}}}{{Bf{{Bd{Bb}}}}}}{{Dd{A`{{Dl{DnE`}}}}}Dd}{{DdDh}Dd}{{Dd{b{{Af{Ad}}}}}Dd}{c{{Aj{e}}}{}{}}0000{{}{{Aj{c}}}{}}0000{bAl}000088888`{{{Bl{Cj}}{Ah{{Eh{Ef}}}}}{{Aj{{El{Ej}}En}}}}","D":"Dj","p":[[1,"reference"],[0,"mut"],[5,"InstanceAttester",14],[5,"InstanceEndorser",14],[1,"unit"],[8,"Result",199],[5,"Evidence",200],[6,"Option",201],[5,"Endorsements",200],[1,"u8"],[1,"slice"],[5,"Request",202],[6,"Result",203],[5,"TypeId",204],[5,"InstanceEncryptionKeyHandle",49],[5,"InstanceSigner",49],[10,"Future",205],[5,"Box",206],[5,"Pin",207],[10,"Signer",49],[10,"AsyncEncryptionKeyHandle",208],[5,"Arc",209],[5,"AsyncEncryptionHandler",75],[17,"Output"],[5,"Vec",210],[10,"FnOnce",211],[5,"EncryptedRequest",212],[5,"EncryptedResponse",212],[5,"OakSessionContext",87],[5,"EndorsedEvidence",213],[10,"ApplicationHandler",87],[5,"OrchestratorClient",101],[10,"OrchestratorInterface",101],[5,"StandaloneOrchestratorBuilder",127],[5,"StandaloneOrchestrator",127],[5,"Stage0Measurements",200],[5,"EncryptionKey",208],[1,"tuple"],[8,"SigningKey",214],[8,"VerifyingKey",214],[5,"StandaloneInstanceEncryptionKeyHandle",127],[5,"StandaloneInstanceSigner",127],[5,"RequestWrapper",213],[5,"Streaming",215],[8,"OakSessionStream",197],[5,"Response",216],[5,"Status",217],[5,"KeyPair",127]],"r":[[0,87],[1,14],[2,49],[3,14],[4,87],[5,101],[6,101]],"b":[[112,"impl-OrchestratorInterface-for-OrchestratorClient"],[113,"impl-OrchestratorClient"],[115,"impl-OrchestratorInterface-for-OrchestratorClient"],[116,"impl-OrchestratorClient"],[120,"impl-OrchestratorClient"],[121,"impl-OrchestratorInterface-for-OrchestratorClient"],[156,"impl-StandaloneOrchestrator"],[157,"impl-OrchestratorInterface-for-StandaloneOrchestrator"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKIAFwAAAAwADgAOAB4AAAAhAAEAJQABACgAEgA9AAAAQAALAE0AAgBSAAUAWgACAF4AAABgAAUAaAAFAG8AAABxAAEAdAABAHcAAAB5AAkAhAARAJsABQCmAB8AxwAAAA=="}],["oak_containers_stage1_dice",{"t":"HH","n":["get_layer_data","stage0_dice_data_into_dice_attester"],"q":[[0,"oak_containers_stage1_dice"],[2,"oak_attestation::dice"],[3,"oak_dice::evidence"],[4,"oak_proto_rust::oak::attestation::v1"],[5,"anyhow"]],"i":"``","f":"{{{f{{d{b}}}}}h}{{jl}{{A`{n}}}}","D":"`","p":[[1,"u8"],[1,"slice"],[1,"reference"],[5,"LayerData",2],[5,"Stage0DiceData",3],[5,"EventLog",4],[5,"DiceAttester",2],[8,"Result",5]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAIAEAAAAAAAAQACAA=="}],["oak_containers_syslogd",{"t":"FNNNNNNNNNNNNNOCHHCNNNNNNHTTTFFTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNCONNNNNNNNNNNOONNNNNFHHHHHHNNNN","n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","into_request","launcher_addr","log_relay","main","signal_handler","systemd_journal","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","run","ALL_NAMESPACES","CURRENT_USER","INCLUDE_DEFAULT_NAMESPACE","Journal","JournalOpenFlags","LOCAL_ONLY","OS_ROOT","RUNTIME_ONLY","SYSTEM","TAKE_DIRECTORY_FD","all","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","borrow_mut","","complement","contains","difference","drop","empty","extend","fmt","","","","from","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","insert","intersection","intersects","into","","into_iter","","into_request","","is_all","is_empty","iter","iter_names","journal","new","next","","next_data","not","remove","seek_head","set","sub","sub_assign","symmetric_difference","systemd_sys","terminate","toggle","try_from","","try_into","","type_id","","union","vzip","","wait","_data","_marker","borrow","borrow_mut","from","into","into_request","sd_journal","sd_journal_close","sd_journal_enumerate_data","sd_journal_next","sd_journal_open","sd_journal_seek_head","sd_journal_wait","try_from","try_into","type_id","vzip"],"q":[[0,"oak_containers_syslogd"],[25,"oak_containers_syslogd::log_relay"],[26,"oak_containers_syslogd::systemd_journal"],[105,"oak_containers_syslogd::systemd_journal::systemd_sys"],[123,"clap_builder::builder::command"],[124,"core::fmt"],[125,"clap_builder::parser::matches::arg_matches"],[126,"clap_builder"],[127,"core::result"],[128,"clap_builder::util::id"],[129,"core::option"],[130,"tonic::request"],[131,"core::error"],[132,"alloc::boxed"],[133,"signal_hook_tokio"],[134,"tokio::sync::once_cell"],[135,"alloc::sync"],[136,"core::any"],[137,"oak_containers_orchestrator::launcher_client"],[138,"anyhow"],[139,"core::ffi"],[140,"core::iter::traits::collect"],[141,"bitflags::iter"],[142,"nix::errno::consts"],[143,"alloc::string"],[144,"std::collections::hash::map"]],"i":"`h0000000000000````000000`Bl00``00000000000000Cb1011110111111011111111110101011111000001101111`010101011010Dh000000```````0000","f":"`{bb}0{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{}b}0{{{d{h}}{d{fj}}}l}{cc{}}{{{d{n}}}{{Ab{hA`}}}}{{{d{fn}}}{{Ab{hA`}}}}{{}{{Af{Ad}}}}{{}c{}}{{}{{Ah{c}}}{}}``{{}{{Ab{Aj{An{Al}}}}}}{{B`{Bd{{Bb{Aj}}}}}Aj}`{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{dBf}{{{d{fh}}{d{n}}}{{Ab{AjA`}}}}{{{d{fh}}{d{fn}}}{{Ab{AjA`}}}}8{{Bh{Bd{{Bb{Aj}}}}}{{Bj{Aj}}}}``````````{{}Bl}{{BlBl}Bl}{{{d{fBl}}Bl}Aj}10{{{d{Bl}}}Bn}021{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{BlBl}{{{d{Bl}}Bl}C`}6{{{d{fCb}}}Aj}8{{{d{fBl}}c}Aj{{Cf{}{{Cd{Bl}}}}}}{{{d{Bl}}{d{fj}}}l}000{cc{}}0{Bn{{Af{Bl}}}}{BnBl}00{cBl{{Cf{}{{Cd{Bl}}}}}}{{{d{Ch}}}{{Af{Bl}}}}=>8{{}c{}}00{Blc{}}{{}{{Ah{c}}}{}}0{{{d{Bl}}}C`}0{{{d{Bl}}}{{Cj{Bl}}}}{{{d{Bl}}}{{Cl{Bl}}}}`{{Bl{Bd{{Bb{Aj}}}}}{{Ab{CbCn}}}}{{{d{fCb}}}{{Ab{{Af{{Db{D`D`}}}}Cn}}}}{{{d{fCb}}}{{Af{c}}}{}}{{{d{fCb}}}{{Ab{{Af{{d{{Df{Dd}}}}}}Cn}}}}{BlBl}{{{d{fBl}}Bl}Aj}{{{d{fCb}}}{{Ab{AjCn}}}}{{{d{fBl}}BlC`}Aj}{{BlBl}Bl}30``3{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{dBf}03{{}c{}}0{{{d{fCb}}}{{Ab{C`Cn}}}}``{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{cc{}}4{{}{{Ah{c}}}{}}```````8765","D":"El","p":[[5,"Command",123],[1,"reference"],[0,"mut"],[5,"Args",0],[5,"Formatter",124],[8,"Result",124],[5,"ArgMatches",125],[8,"Error",126],[6,"Result",127],[5,"Id",128],[6,"Option",129],[5,"Request",130],[1,"unit"],[10,"Error",131],[5,"Box",132],[8,"Signals",133],[5,"OnceCell",134],[5,"Arc",135],[5,"TypeId",136],[5,"LauncherClient",137],[8,"Result",138],[5,"JournalOpenFlags",26],[8,"c_int",139],[1,"bool"],[5,"Journal",26],[17,"Item"],[10,"IntoIterator",140],[1,"str"],[5,"Iter",141],[5,"IterNames",141],[6,"Errno",142],[5,"String",143],[5,"HashMap",144],[1,"u8"],[1,"slice"],[5,"sd_journal",105]],"r":[],"b":[[41,"impl-JournalOpenFlags"],[42,"impl-Flags-for-JournalOpenFlags"],[55,"impl-UpperHex-for-JournalOpenFlags"],[56,"impl-LowerHex-for-JournalOpenFlags"],[57,"impl-Octal-for-JournalOpenFlags"],[58,"impl-Binary-for-JournalOpenFlags"],[62,"impl-Flags-for-JournalOpenFlags"],[63,"impl-JournalOpenFlags"],[82,"impl-Journal"],[83,"impl-Iterator-for-Journal"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAE0AEgAAAAgACgACAA4ADwAfAAUAKwAAAC4AAwA1AAAAOAADAD8AAABJAAMAUQABAFQAAQBdAAEAYAAFAGcAAQBqAAMAcAAAAHIACQA="}],["oak_core",{"t":"CCCKFNNNNNNNMNMNNNNFNNNNNNNNNNNNFNNNNNNNNHNNNN","n":["samplestore","sync","timer","SampleStore","StaticSampleStore","borrow","borrow_mut","eq","fmt","from","into","new","percentile","","record","","try_from","try_into","type_id","OnceCell","borrow","borrow_mut","default","deinit","from","get","into","new","set","try_from","try_into","type_id","Timer","borrow","borrow_mut","elapsed","fmt","from","into","new","new_rdtsc","rdtsc","timed","try_from","try_into","type_id"],"q":[[0,"oak_core"],[3,"oak_core::samplestore"],[19,"oak_core::sync"],[32,"oak_core::timer"],[46,"core::fmt"],[47,"core::option"],[48,"core::result"],[49,"core::any"],[50,"core::ops::function"]],"i":"`````f000000A`101111`Al00000000000`An0000000`0000","f":"`````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}{b{f}}}h}{{{b{f}}{b{dj}}}l}{cc{}}{{}c{}}{{}{{n{f}}}}{{{b{A`}}Ab}{{n{Ad}}}}{{{b{f}}Ab}{{n{Ad}}}}{{{b{dA`}}Ad}Af}{{{b{df}}Ad}Af}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{bAj}`=<{{}{{Al{c}}}{}}{{{b{{Al{c}}}}}{{n{c}}}{}};{{{b{{Al{c}}}}}{{n{{b{c}}}}}{}};2{{{b{{Al{c}}}}c}{{Ah{Afc}}}{}}654`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{An}}}Ad}{{{b{An}}{b{dj}}}l}{cc{}}{{}c{}}{AdAn}{{}An}{{}Ad}{cAdB`}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{bAj}","D":"Bj","p":[[1,"reference"],[0,"mut"],[5,"StaticSampleStore",3],[1,"bool"],[5,"Formatter",46],[8,"Result",46],[6,"Option",47],[10,"SampleStore",3],[1,"f64"],[1,"u64"],[1,"unit"],[6,"Result",48],[5,"TypeId",49],[5,"OnceCell",19],[5,"Timer",32],[10,"FnOnce",50]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABkADQAAAAAABAAAAAYAAwAMAAAADgAAABAAAwAVAAIAHAAAAB4AAgAiAAEAJQAAACgAAAAsAAIA"}],["oak_crypto",{"t":"SCCCCCCCKFKNNNNNNNNHMMNNNNNNNNNNFKFFONNNNNNNMNNNMNNNNNNNNNNNNONONNNNNNNNNNNNKIRIIFFKNNNNNNNMNNNNMNNNNNNNNFKNNMNNNMNNNNNNFESFFFFSFSSFHHNNNNNNNNNNOCONNHNNONNNNNNNOHNNNNNNNOHHHHHOHHNNNNNNNNNNNNNNNNNNNNNNFFSFSSSSHHNNNNNNNNNHNNNNNNHNNNNNNHNNHHHNNNNNNNNNNNNNNNKMKM","n":["EMPTY_ASSOCIATED_DATA","encryption_key","encryptor","hpke","identity_key","noise_handshake","signer","verifier","AsyncEncryptionKeyHandle","EncryptionKey","EncryptionKeyHandle","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deserialize","encrypted_private_key","from","generate_encryption_key_pair","generate_recipient_context","","","","into","new","serialize","to_owned","try_from","try_into","type_id","vzip","ClientEncryptor","Encryptor","Payload","ServerEncryptor","aad","borrow","","","borrow_mut","","","create","decrypt","","","decrypt_async","encrypt","","","from","","","","","","","into","","","message","new","nonce","try_from","","","try_into","","","type_id","","","vzip","","","Deserializable","Kem","OutputSize","PrivateKey","PublicKey","RecipientContext","SenderContext","Serializable","borrow","","borrow_mut","","deserialize","from","","from_bytes","into","","serialize","size","to_bytes","try_from","","try_into","","type_id","","vzip","","IdentityKey","IdentityKeyHandle","borrow","borrow_mut","derive_dh_secret","","from","generate","get_public_key","","into","try_from","try_into","type_id","vzip","EcdsaKeyPair","IdentityKeyHandle","NONCE_LEN","NoiseMessage","Nonce","OrderedCrypter","P256Scalar","P256_X962_LEN","Response","SHA256_OUTPUT_LEN","SYMMETRIC_KEY_LEN","UnorderedCrypter","aes_256_gcm_open_in_place","aes_256_gcm_seal_in_place","borrow","","","","","borrow_mut","","","","","ciphertext","client","crypter","decrypt","","ecdsa_verify","encrypt","","ephemeral_public_key","from","","","","","","get_nonce_value","handshake_hash","hkdf_sha256","into","","","","","new","next_nonce","nonce","p256_scalar_mult","rand_bytes","respond_kk","respond_nk","respond_nn","response","sha256","sha256_two_part","try_from","","","","","","","try_into","","","","","type_id","","","","","vzip","","","","","EcdsaKeyPair","HandshakeInitiator","NONCE_LEN","P256Scalar","P256_SCALAR_LEN","P256_X962_LEN","SHA256_OUTPUT_LEN","SYMMETRIC_KEY_LEN","aes_256_gcm_open_in_place","aes_256_gcm_seal_in_place","borrow","","","borrow_mut","","","build_initial_message","bytes","compute_public_key","ecdsa_verify","from","","","from_pkcs8","generate","generate_pkcs8","hkdf_sha256","into","","","new_kk","new_nk","new_nn","p256_scalar_mult","process_response","public_key","rand_bytes","sha256","sha256_two_part","sign","try_from","","","","","try_into","","","type_id","","","vzip","","","Signer","sign","Verifier","verify"],"q":[[0,"oak_crypto"],[8,"oak_crypto::encryption_key"],[32,"oak_crypto::encryptor"],[76,"oak_crypto::hpke"],[105,"oak_crypto::identity_key"],[120,"oak_crypto::noise_handshake"],[200,"oak_crypto::noise_handshake::client"],[254,"oak_crypto::signer"],[256,"oak_crypto::verifier"],[258,"anyhow"],[259,"oak_proto_rust::oak::crypto::v1"],[260,"alloc::vec"],[261,"core::future::future"],[262,"alloc::boxed"],[263,"core::pin"],[264,"core::result"],[265,"core::any"],[266,"core::marker"],[267,"oak_proto_rust::oak::session::v1"],[268,"hpke"],[269,"generic_array"],[270,"oak_crypto::noise_handshake::crypto_wrapper"],[271,"core::convert"]],"i":"```````````f0000000`AfAj2222222222````Bl0BhC`2101Bj2110213333321321313321321321321``Db`````FjAh10010Cj2113321212121``Dj0Dh1110111111``````````````EjEfDnE`En432103`021`21343321040`43210144`````0``4322110432104321043210``````````F`ElFb210211`210010`210222`20```021110210210210`Ff`Fh","f":"```````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}f}{{b{b{dc}}}h{}}{bh}{{{b{d{l{j}}}}}{{n{f}}}}{{{b{f}}{b{{l{j}}}}}{{n{A`}}}}{cc{}}{{}{{Ad{f{Ab{j}}}}}}{{{b{Af}}{b{{l{j}}}}}{{n{Ah}}}}{{{b{Aj}}{b{{l{j}}}}}{{B`{{An{Al}}}}}}{{{b{f}}{b{{l{j}}}}}{{B`{{An{Al}}}}}}{{{b{f}}{b{{l{j}}}}}{{n{Ah}}}}{{}c{}}{Bbf}{f{{Ab{j}}}}{bc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{bBf}6`````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{{l{j}}}}}{{n{Bh}}}}{{{b{dBj}}{b{Bl}}}{{n{Bl}}}}{{{b{Bh}}{b{Bn}}}{{n{{Ad{{Ab{j}}{Ab{j}}}}}}}}{{{b{A`}}{b{c}}}{{n{{Ad{C`{Ab{j}}{Ab{j}}}}}}}{AfCb}}{{{b{A`}}{b{c}}}{{n{{Ad{C`{Ab{j}}{Ab{j}}}}}}}{AjCb}}3{{{b{dBh}}{b{{l{j}}}}{b{{l{j}}}}}{{n{A`}}}}{{C`{b{{l{j}}}}{b{{l{j}}}}}{{n{Bn}}}}{cc{}}{{{Ab{j}}}Bl}{{{Ad{{Ab{j}}{Ab{j}}}}}Bl}{CdBl}{CfBl}44{{}c{}}00`{AhC`}`{c{{Bd{e}}}{}{}}00{{}{{Bd{c}}}{}}00{bBf}00444````````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{Ch{{n{Ah}}}}<<{{{b{{l{j}}}}}{{Bd{CjCl}}}}88{Ah{{n{Ch}}}}{{}Cn}{{{b{{Db{}{{D`{c}}}}}}}{{Dd{jc}}}{{Df{j}}}}998877;;``65{{{b{Dh}}{b{{l{j}}}}}{{n{{Ab{j}}}}}}{{{b{Dj}}{b{{l{j}}}}}{{n{{Ab{j}}}}}}{cc{}}{{}Dj}{{{b{Dh}}}{{n{{Ab{j}}}}}}{{{b{Dj}}}{{n{{Ab{j}}}}}}{{}c{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{bBf}3````````````{{{b{{Dl{j}}}}{b{{Dl{j}}}}{b{{l{j}}}}{Ab{j}}}{{Bd{{Ab{j}}h}}}}{{{b{{Dl{j}}}}{b{{Dl{j}}}}{b{{l{j}}}}{b{d{Ab{j}}}}}h}{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000```{{{b{dDn}}{b{{l{j}}}}}{{Bd{{Ab{j}}`}}}}{{{b{dE`}}{b{{Dl{j}}}}{b{{l{j}}}}}{{Bd{{Ab{j}}`}}}}{{{b{{l{j}}}}{b{{l{j}}}}{b{{l{j}}}}}Eb}2{{{b{dE`}}{b{{l{j}}}}}{{Bd{{Ad{{Ab{j}}{Ab{j}}}}`}}}}`??{{{b{Ed}}}Ef}{cc{}}00{{{b{{Dl{j}}}}}{{Bd{Eh`}}}}`{{{b{{l{j}}}}{b{{l{j}}}}{b{{l{j}}}}{b{d{l{j}}}}}{{Bd{hh}}}}?????{{{b{{Dl{j}}}}{b{{Dl{j}}}}Eh}E`}{{{b{dEj}}}{{Bd{{Dl{j}}`}}}}`{{{b{El}}{b{{Dl{j}}}}}{{Bd{{Dl{j}}h}}}}{{{b{d{l{j}}}}}h}{{{b{Dh}}{b{{l{j}}}}{b{Ef}}}{{Bd{En`}}}}{{{b{Dh}}{b{Ef}}}{{Bd{En`}}}}{{{b{Ef}}}{{Bd{En`}}}}`{{{b{{l{j}}}}}{{Dl{j}}}}{{{b{{l{j}}}}{b{{l{j}}}}}{{Dl{j}}}}{c{{Bd{e}}}{}{}}00{Ch{{Bd{Dnc}}}{}}1{{{Ad{ChEh}}}{{Bd{E`c}}}{}}2{{}{{Bd{c}}}{}}0000{bBf}0000{{}c{}}0000````````{{{b{{Dl{j}}}}{b{{Dl{j}}}}{b{{l{j}}}}{Ab{j}}}{{Bd{{Ab{j}}h}}}}{{{b{{Dl{j}}}}{b{{Dl{j}}}}{b{{l{j}}}}{b{d{Ab{j}}}}}h}{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{dF`}}}{{Bd{Ef`}}}}{{{b{El}}}{{Dl{j}}}}0{{{b{{l{j}}}}{b{{l{j}}}}{b{{l{j}}}}}Eb}{cc{}}00{{{b{{l{j}}}}}{{Bd{Fbh}}}}{{}El}{{}{{Bd{{`{{Fd{{l{j}}}}}}h}}}}{{{b{{l{j}}}}{b{{l{j}}}}{b{{l{j}}}}{b{d{l{j}}}}}{{Bd{hh}}}}<<<{{{Dl{j}}{An{Dh}}}F`}{{{b{{Dl{j}}}}}F`}{{}F`}{{{b{El}}{b{{Dl{j}}}}}{{Bd{{Dl{j}}h}}}}{{{b{dF`}}{b{Ef}}}{{Bd{{Ad{{Dl{j}}Dn}}`}}}}{{{b{Fb}}}{{`{{Fd{{l{j}}}}}}}}{{{b{d{l{j}}}}}h}{{{b{{l{j}}}}}{{Dl{j}}}}{{{b{{l{j}}}}{b{{l{j}}}}}{{Dl{j}}}}{{{b{Fb}}{b{{l{j}}}}}{{Bd{{`{{Fd{{l{j}}}}}}h}}}}{c{{Bd{e}}}{}{}}0{{{b{{Dl{j}}}}}{{Bd{Elh}}}}{{{b{{l{j}}}}}{{Bd{Elh}}}}2{{}{{Bd{c}}}{}}00{bBf}00{{}c{}}00`{{{b{Ff}}{b{{l{j}}}}}{{Ab{j}}}}`{{{b{Fh}}{b{{l{j}}}}{b{{l{j}}}}}{{n{h}}}}","D":"Gb","p":[[1,"reference"],[0,"mut"],[5,"EncryptionKey",8],[1,"unit"],[1,"u8"],[1,"slice"],[8,"Result",258],[5,"EncryptedRequest",259],[5,"Vec",260],[1,"tuple"],[10,"EncryptionKeyHandle",8],[5,"RecipientContext",76],[10,"AsyncEncryptionKeyHandle",8],[10,"Future",261],[5,"Box",262],[5,"Pin",263],[8,"PrivateKey",76],[6,"Result",264],[5,"TypeId",265],[5,"ClientEncryptor",32],[10,"Encryptor",32],[5,"Payload",32],[5,"EncryptedResponse",259],[5,"ServerEncryptor",32],[10,"Sized",266],[5,"PlaintextMessage",267],[5,"EncryptedMessage",267],[5,"SessionKeys",259],[10,"Deserializable",76,268],[6,"HpkeError",268],[1,"usize"],[17,"OutputSize"],[10,"Serializable",76,268],[5,"GenericArray",269],[10,"ArrayLength",269],[10,"IdentityKeyHandle",105],[5,"IdentityKey",105],[1,"array"],[5,"OrderedCrypter",120],[5,"UnorderedCrypter",120],[1,"bool"],[5,"NoiseHandshakeMessage",267],[5,"NoiseMessage",120],[1,"u32"],[5,"Nonce",120],[5,"P256Scalar",200,270],[5,"Response",120],[5,"HandshakeInitiator",200],[5,"EcdsaKeyPair",200,270],[10,"AsRef",271],[10,"Signer",254],[10,"Verifier",256],[5,"SenderContext",76]],"r":[[76,268],[83,268],[120,270],[121,105],[122,270],[126,270],[127,270],[129,270],[130,270],[132,270],[133,270],[149,270],[161,270],[170,270],[171,270],[176,270],[177,270],[200,270],[202,270],[203,270],[204,270],[205,270],[206,270],[207,270],[208,270],[209,270],[219,270],[226,270],[233,270],[236,270],[237,270],[238,270]],"b":[[22,"impl-AsyncEncryptionKeyHandle-for-EncryptionKey"],[23,"impl-EncryptionKeyHandle-for-EncryptionKey"],[52,"impl-From%3CVec%3Cu8%3E%3E-for-Payload"],[53,"impl-From%3C(Vec%3Cu8%3E,+Vec%3Cu8%3E)%3E-for-Payload"],[54,"impl-From%3CPlaintextMessage%3E-for-Payload"],[55,"impl-From%3CEncryptedMessage%3E-for-Payload"],[242,"impl-TryFrom%3C%26%5Bu8;+P256_SCALAR_LEN%5D%3E-for-P256Scalar"],[243,"impl-TryFrom%3C%26%5Bu8%5D%3E-for-P256Scalar"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMkAHAAAAAIABAAAAAcAAwAMAAUAFQADABoABgAiAAEAJQAGAC0AAAAxAAAANQADAD4ADgBOAAUAVQADAFwAAABhAA4AcQACAHUACgCBAAIAhQAUAJwAAACgAAEAqAAJALMAGQDPAA0A4AACAOcABwDwABIA"}],["oak_debug_service",{"t":"FNNNNNNNNNNN","n":["Service","borrow","borrow_mut","cpu_profile","from","into","into_request","new_server","try_from","try_into","type_id","vzip"],"q":[[0,"oak_debug_service"],[12,"oak_proto_rust::oak::debug"],[13,"tonic::request"],[14,"core::future::future"],[15,"alloc::boxed"],[16,"core::pin"],[17,"oak_grpc::oak::debug::debug_service_server"],[18,"core::result"],[19,"core::any"]],"i":"`f0000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}{j{h}}}{{A`{{n{l}}}}}}{cc{}}{{}c{}}{{}{{j{c}}}{}}{{}{{Ab{f}}}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}5","D":"d","p":[[1,"reference"],[0,"mut"],[5,"Service",0],[5,"CpuProfileRequest",12],[5,"Request",13],[10,"Future",14],[5,"Box",15],[5,"Pin",16],[5,"DebugServiceServer",17],[6,"Result",18],[5,"TypeId",19]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAoAAgAAAAQABwAFAA=="}],["oak_dice",{"t":"CCCSSSTTTTTTSSSSSSSSTTTSSFSSSSSSSNNNNNNNNNNNNNNNNHHHHNNNNNNNNNNNNNNNHHHHHHNNNNNNNNNNNNNNNNNNNNNHPFFSSFFSSSFPFPSSSSFFSSFGPSOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOONNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNH","n":["cert","evidence","utils","ACPI_MEASUREMENT_ID","APPLICATION_KEY_ID","CONTAINER_IMAGE_LAYER_ID","CONTENT_COMMITMENT","CRL_SIGN","DATA_ENCIPHERMENT","DECIPHER_ONLY","DIGITAL_SIGNATURE","ENCIPHER_ONLY","ENCLAVE_APPLICATION_LAYER_ID","EVENT_ID","FINAL_LAYER_CONFIG_MEASUREMENT_ID","INITRD_MEASUREMENT_ID","KERNEL_COMMANDLINE_ID","KERNEL_COMMANDLINE_MEASUREMENT_ID","KERNEL_LAYER_ID","KERNEL_MEASUREMENT_ID","KEY_AGREEMENT","KEY_CERT_SIGN","KEY_ENCIPHERMENT","KEY_ID_LENGTH","KEY_USAGE_ID","KeyUsage","LAYER_2_CODE_MEASUREMENT_ID","LAYER_3_CODE_MEASUREMENT_ID","MEMORY_MAP_MEASUREMENT_ID","SETUP_DATA_MEASUREMENT_ID","SHA2_256_ID","SUBJECT_PUBLIC_KEY_ID","SYSTEM_IMAGE_LAYER_ID","all","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","clone_to_uninit","complement","contains","cose_key_to_hpke_public_key","cose_key_to_verifying_key","derive_kem_public_key_id","derive_verifying_key_id","difference","empty","extend","fmt","","","","","from","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","generate_ecdsa_key_pair","generate_kem_certificate","generate_signing_certificate","get_claims_set_from_certificate_bytes","get_public_key_from_claims_set","hpke_public_key_to_cose_key","insert","intersection","intersects","into","into_iter","is_all","is_empty","iter","iter_names","not","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","verifying_key_to_cose_key","AmdSevSnp","ApplicationKeys","ApplicationPrivateKeys","CDI_SIZE","CERTIFICATE_SIZE","CertificateAuthority","CompoundDeviceIdentifier","DICE_DATA_CMDLINE_PARAM","DICE_DATA_LENGTH_CMDLINE_PARAM","EVENTLOG_CMDLINE_PARAM","Evidence","IntelTdx","LayerEvidence","None","P256_PRIVATE_KEY_SIZE","PRIVATE_KEY_SIZE","PUBLIC_KEY_SIZE","REPORT_SIZE","RestrictedKernelDiceData","RootLayerEvidence","STAGE0_DICE_PROTO_MAGIC","STAGE0_MAGIC","Stage0DiceData","TeePlatform","Unspecified","X25519_PRIVATE_KEY_SIZE","application_keys","application_private_keys","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","cdi","claims","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","drop","","","eca_certificate","eca_private_key","eca_public_key","encryption_private_key","encryption_public_key_certificate","eq","evidence","fmt","","from","","","","","","","","","","from_repr","get_eca_public_key","get_remote_attestation_report","get_tee_platform","into","","","","","","","","","","layer_1_cdi","layer_1_certificate_authority","layer_1_evidence","magic","remote_attestation_report","restricted_kernel_evidence","root_layer_evidence","","set_eca_public_key","set_remote_attestation_report","signing_private_key","signing_public_key_certificate","tee_platform","to_owned","","","","","to_string","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","zeroize","","","cbor_encoded_bytes_to_vec"],"q":[[0,"oak_dice"],[3,"oak_dice::cert"],[96,"oak_dice::evidence"],[250,"oak_dice::utils"],[251,"coset::key"],[252,"alloc::vec"],[253,"core::result"],[254,"p256::ecdsa"],[255,"core::iter::traits::collect"],[256,"core::fmt"],[257,"core::option"],[258,"alloc::string"],[259,"coset::cwt"],[260,"ciborium::value"],[261,"coset::sign"],[262,"coset::common"],[263,"bitflags::iter"],[264,"core::any"]],"i":"``````b00000````````000``````````0000000000000000````000000000000000``````000000000000000000000`Db``````````0`0``````````0`DfEb2DdCnDhDjEdD`Dl8796543210873519651896518965184305460197999654321087966696543210872222682866016965189965432108796543210879654321087430`","f":"`````````````````````````````````{{}b}{{bb}b}{{{f{db}}b}h}10{{{f{b}}}j}021{f{{f{c}}}{}}{{{f{d}}}{{f{dc}}}{}}{{{f{b}}}b}{{f{f{dc}}}h{}}{fh}{bb}{{{f{b}}b}l}{{{f{n}}}{{Af{{Ab{A`}}{f{Ad}}}}}}{{{f{n}}}{{Af{Ah{f{Ad}}}}}}{{{f{{Aj{A`}}}}}{{Al{A`}}}}{{{f{Ah}}}{{Al{A`}}}}=>{{{f{db}}c}h{{B`{}{{An{b}}}}}}{{{f{b}}{f{dBb}}}Bd}0000{cc{}}{j{{Bf{b}}}}{jb}00{cb{{B`{}{{An{b}}}}}}{{{f{Ad}}}{{Bf{b}}}}{{}{{Bj{BhAh}}}}{{{f{Bh}}Bl{f{{Aj{A`}}}}{Ab{{Bj{BnC`}}}}}{{Af{CbCd}}}}{{{f{Bh}}Bl{f{Ah}}{Ab{{Bj{BnC`}}}}}{{Af{CbCd}}}}{{{f{{Aj{A`}}}}}{{Af{CfCd}}}}{{{f{Cf}}}{{Af{n{f{Ad}}}}}}{{{f{{Aj{A`}}}}}n}{{{f{db}}b}h}{{bb}b}{{{f{b}}b}l}{{}c{}}{bc{}}{{{f{b}}}l}0{{{f{b}}}{{Ch{b}}}}{{{f{b}}}{{Cj{b}}}}{bb}8{{{f{db}}bl}h}898{fc{}}:{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{fCl}<{{{f{Ah}}}n}````````````````````````````{f{{f{c}}}{}}000000000{{{f{d}}}{{f{dc}}}{}}000000000`{{{f{Cn}}}{{Af{CfBl}}}}{{{f{D`}}}{{Af{CfBl}}}}{{{f{Db}}}Db}{{{f{Dd}}}Dd}{{{f{Cn}}}Cn}{{{f{D`}}}D`}{{{f{Df}}}Df}{{f{f{dc}}}h{}}0000{fh}0000{{{f{dDh}}}h}{{{f{dDj}}}h}{{{f{dDl}}}h}`````{{{f{Db}}{f{Db}}}l}`{{{f{Db}}{f{dBb}}}{{Af{hDn}}}}{{{f{Db}}{f{dBb}}}Bd}{cc{}}000000000{E`{{Bf{Db}}}}{{{f{Dd}}}{{Af{{Ab{A`}}Bl}}}}{{{f{Dd}}}{{Af{{f{{Aj{A`}}}}{f{Ad}}}}}}{{{f{Dd}}}{{Af{Db{f{Ad}}}}}}{{}c{}}000000000````````{{{f{dDd}}{f{{Aj{A`}}}}}{{Af{h{f{Ad}}}}}}0```{fc{}}0000{fBl}{c{{Af{e}}}{}{}}000000000{{}{{Af{c}}}{}}000000000{fCl}000000000{{{f{dDh}}}h}{{{f{dDj}}}h}{{{f{dDl}}}h}{{{f{{Aj{A`}}}}}{{Af{{Ab{A`}}Bl}}}}","D":"AA`","p":[[5,"KeyUsage",3],[0,"mut"],[1,"reference"],[1,"unit"],[1,"u16"],[1,"bool"],[5,"CoseKey",251],[1,"u8"],[5,"Vec",252],[1,"str"],[6,"Result",253],[8,"VerifyingKey",254],[1,"slice"],[1,"array"],[17,"Item"],[10,"IntoIterator",255],[5,"Formatter",256],[8,"Result",256],[6,"Option",257],[8,"SigningKey",254],[1,"tuple"],[5,"String",258],[8,"ClaimName",259],[6,"Value",260],[5,"CoseSign1",261],[6,"CoseError",262],[5,"ClaimsSet",259],[5,"Iter",263],[5,"IterNames",263],[5,"TypeId",264],[5,"LayerEvidence",96],[5,"ApplicationKeys",96],[6,"TeePlatform",96],[5,"RootLayerEvidence",96],[5,"Evidence",96],[5,"CertificateAuthority",96],[5,"CompoundDeviceIdentifier",96],[5,"ApplicationPrivateKeys",96],[5,"Error",256],[1,"u64"],[5,"RestrictedKernelDiceData",96],[5,"Stage0DiceData",96]],"r":[],"b":[[38,"impl-KeyUsage"],[39,"impl-Flags-for-KeyUsage"],[56,"impl-Binary-for-KeyUsage"],[57,"impl-Octal-for-KeyUsage"],[58,"impl-LowerHex-for-KeyUsage"],[59,"impl-UpperHex-for-KeyUsage"],[60,"impl-Debug-for-KeyUsage"],[63,"impl-Flags-for-KeyUsage"],[64,"impl-KeyUsage"],[172,"impl-Display-for-TeePlatform"],[173,"impl-Debug-for-TeePlatform"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHMAEAAHAAUAFQACACgAAAArAAQAOQAEAEAAAABPAAAAWgAAAFwAAgBnAAAAfAAUAJIAEwCrAAMAugACAM8AAQDUACYA"}],["oak_echo_service",{"t":"FONNNNNNNCNNNNCCCCFONNNNNNNNNONNNOONNNNNKFFFFFFOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNONNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["EchoService","attester","borrow","borrow_mut","default","echo","from","get_evidence","into","proto","try_from","try_into","type_id","vzip","oak","attestation","echo","v1","Evidence","application_keys","borrow","borrow_mut","clear","clone","clone_into","clone_to_uninit","default","encoded_len","eq","event_log","fmt","from","into","layers","root_layer","to_owned","try_from","try_into","type_id","vzip","Echo","EchoAsyncClient","EchoClient","EchoRequest","EchoResponse","EchoServer","GetEvidenceResponse","body","","borrow","","","","","","borrow_mut","","","","","","clear","","","clone","","","","clone_into","","","","clone_to_uninit","","","","default","","","echo","","","encoded_len","","","eq","","","evidence","fmt","","","from","","","","","","get_evidence","","","into","","","","","","invoke","new","","","to_owned","","","","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","",""],"q":[[0,"oak_echo_service"],[14,"oak_echo_service::proto"],[15,"oak_echo_service::proto::oak"],[17,"oak_echo_service::proto::oak::attestation"],[18,"oak_echo_service::proto::oak::attestation::v1"],[40,"oak_echo_service::proto::oak::echo"],[139,"core::default"],[140,"oak_attestation_types::attester"],[141,"micro_rpc::status"],[142,"core::result"],[143,"core::any"],[144,"oak_proto_rust::oak::attestation::v1"],[145,"core::fmt"],[146,"core::clone"],[147,"micro_rpc"],[148,"alloc::vec"]],"i":"`f0000000`0000`````Aj00000000000000000000```````lnBjBn32AfBd325410541541054105410541Bh43652652265243652104343652114316521436521436521436521436521","f":"``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{}{{f{c}}}{hj}}{{{b{d{f{c}}}}l}{{Ab{nA`}}}j}{cc{}}{{{b{d{f{c}}}}Ad}{{Ab{AfA`}}}j}{{}c{}}`{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bAh}3``````98{{{b{dAj}}}Ad}{{{b{Aj}}}Aj}{{b{b{dc}}}Ad{}}{bAd}{{}Aj}{{{b{Aj}}}Al}{{{b{Aj}}{b{Aj}}}An}`{{{b{Aj}}{b{dB`}}}{{Ab{AdBb}}}}=;``{bc{}};:9<`````````{b{{b{c}}}{}}00000{{{b{d}}}{{b{dc}}}{}}00000{{{b{dl}}}Ad}{{{b{dn}}}Ad}{{{b{dAf}}}Ad}{{{b{l}}}l}{{{b{n}}}n}{{{b{Af}}}Af}{{{b{{Bd{c}}}}}{{Bd{c}}}Bf}????>>>>{{}l}{{}n}{{}Af}{{{b{dBh}}l}{{Ab{nA`}}}}{{{b{d{Bj{c}}}}{b{l}}}{{Ab{{Ab{nA`}}}}}Bl}{{{b{d{Bn{c}}}}{b{l}}}{{Ab{{Ab{nA`}}}}}C`}{{{b{l}}}Al}{{{b{n}}}Al}{{{b{Af}}}Al}{{{b{l}}{b{l}}}An}{{{b{n}}{b{n}}}An}{{{b{Af}}{b{Af}}}An}`{{{b{l}}{b{dB`}}}Cb}{{{b{n}}{b{dB`}}}Cb}{{{b{Af}}{b{dB`}}}Cb}{cc{}}00000{{{b{dBh}}Ad}{{Ab{AfA`}}}}{{{b{d{Bj{c}}}}{b{Ad}}}{{Ab{{Ab{AfA`}}}}}Bl}{{{b{d{Bn{c}}}}{b{Ad}}}{{Ab{{Ab{AfA`}}}}}C`}{{}c{}}00000{{{b{d{Bd{c}}}}{b{{Cf{Cd}}}}}{{Ab{{Ch{Cd}}Cj}}}Bh}{c{{Bj{c}}}Bl}{c{{Bn{c}}}C`}{c{{Bd{c}}}Bh}{bc{}}000{c{{Ab{e}}}{}{}}00000{{}{{Ab{c}}}{}}00000{bAh}00000888888","D":"Bh","p":[[1,"reference"],[0,"mut"],[5,"EchoService",0],[10,"Default",139],[10,"Attester",140],[5,"EchoRequest",40],[5,"EchoResponse",40],[5,"Status",141],[6,"Result",142],[1,"unit"],[5,"GetEvidenceResponse",40],[5,"TypeId",143],[5,"Evidence",18,144],[1,"usize"],[1,"bool"],[5,"Formatter",145],[5,"Error",145],[5,"EchoServer",40],[10,"Clone",146],[10,"Echo",40],[5,"EchoClient",40],[10,"Transport",147],[5,"EchoAsyncClient",40],[10,"AsyncTransport",147],[8,"Result",145],[1,"u8"],[1,"slice"],[5,"Vec",148],[1,"never"]],"r":[[18,144]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHcABwAAAAYACAAAAAoACAAVAAoAJAA4AGMAAgBsAB8A"}],["oak_enclave_runtime_support",{"t":"CHFFNNNNNNNNNNNNNNNNNNNNN","n":["heap","init","GrowableHeap","LockedGrowableHeap","alloc","allocate","borrow","","borrow_mut","","dealloc","deallocate","deref","empty","","from","","into","","try_from","","try_into","","type_id",""],"q":[[0,"oak_enclave_runtime_support"],[2,"oak_enclave_runtime_support::heap"],[25,"core::alloc::layout"],[26,"core::ptr::non_null"],[27,"core::result"],[28,"spinning_top::spinlock"],[29,"core::any"]],"i":"````dn0101101010101010101","f":"`{{}b}``{{{f{d}}h}j}{{{f{ln}}h}{{Ab{{A`{j}}b}}}}{f{{f{c}}}{}}0{{{f{l}}}{{f{lc}}}{}}0{{{f{d}}jh}b}{{{f{ln}}{A`{j}}Ad}b}{{{f{d}}}{{f{{Af{n}}}}}}{{}n}{{}d}{cc{}}0{{}c{}}0{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{fAh}0","D":"A`","p":[[1,"unit"],[5,"LockedGrowableHeap",2],[1,"reference"],[5,"Layout",25],[1,"u8"],[0,"mut"],[5,"GrowableHeap",2],[5,"NonNull",26],[6,"Result",27],[1,"usize"],[8,"Spinlock",28],[5,"TypeId",29]],"r":[],"b":[],"c":"OjAAAAEAAAAAAAAAEAAAAAIA","e":"OzAAAAEAABEABQAAAAAAAgAAAAUABgANAAIAFAAFAA=="}],["oak_file_utils",{"t":"H","n":["data_path"],"q":[[0,"oak_file_utils"],[1,"std::path"],[2,"core::convert"]],"i":"`","f":"{cb{{f{d}}}}","D":"b","p":[[5,"PathBuf",1],[5,"Path",1],[10,"AsRef",2]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],["oak_functions_abi",{"t":"PPPPSFFGPPNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHONONNNNNNNNNNNNN","n":["BadRequest","InternalServerError","PolicySizeViolation","PolicyTimeViolation","RESPONSE_BODY_OFFSET","Request","Response","StatusCode","Success","Unspecified","body","","","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","create","decode","encode_to_vec","eq","","","fmt","","","","from","","","from_repr","into","","","invoke","length","pad","status","to_owned","","","to_string","try_from","","","try_into","","","type_id","",""],"q":[[0,"oak_functions_abi"],[62,"core::num::error"],[63,"core::result"],[64,"alloc::vec"],[65,"anyhow"],[66,"core::fmt"],[67,"core::option"],[68,"alloc::string"],[69,"core::any"]],"i":"Ab000````00bA`101201201201201211101201220122012`1110122012012012","f":"``````````{{{d{b}}}{{l{{d{{h{f}}}}j}}}}``{d{{d{c}}}{}}00{{{d{n}}}{{d{nc}}}{}}00{{{d{A`}}}A`}{{{d{b}}}b}{{{d{Ab}}}Ab}{{d{d{nc}}}Ad{}}00{dAd}00{{Ab{Af{f}}}b}{{{d{{h{f}}}}}{{Ah{b}}}}{{{d{b}}}{{Af{f}}}}{{{d{A`}}{d{A`}}}Aj}{{{d{b}}{d{b}}}Aj}{{{d{Ab}}{d{Ab}}}Aj}{{{d{A`}}{d{nAl}}}An}{{{d{b}}{d{nAl}}}An}{{{d{Ab}}{d{nAl}}}An}{{{d{Ab}}{d{nAl}}}{{l{AdB`}}}}{cc{}}00{Bb{{Bd{Ab}}}}{{}c{}}00``{{{d{b}}Bf}{{Ah{b}}}}`{dc{}}00{dBh}{c{{l{e}}}{}{}}00{{}{{l{c}}}{}}00{dBj}00","D":"Bb","p":[[5,"Response",0],[1,"reference"],[1,"u8"],[1,"slice"],[5,"TryFromIntError",62],[6,"Result",63],[0,"mut"],[5,"Request",0],[6,"StatusCode",0],[1,"unit"],[5,"Vec",64],[8,"Result",65],[1,"bool"],[5,"Formatter",66],[8,"Result",66],[5,"Error",66],[1,"u32"],[6,"Option",67],[1,"usize"],[5,"String",68],[5,"TypeId",69]],"r":[],"b":[[36,"impl-Debug-for-StatusCode"],[37,"impl-Display-for-StatusCode"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC0ABgABAAQACQABAAwAAAAOAA4AHgAIADEADQA="}],["oak_functions_client",{"t":"FNNNNNNNNNNN","n":["OakFunctionsClient","borrow","borrow_mut","from","into","into_request","invoke","new","try_from","try_into","type_id","vzip"],"q":[[0,"oak_functions_client"],[12,"tonic::request"],[13,"alloc::vec"],[14,"micro_rpc::status"],[15,"core::result"],[16,"oak_client::verifier"],[17,"anyhow"],[18,"core::any"]],"i":"`h0000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{cc{}}{{}c{}}{{}{{f{c}}}{}}{{{b{dh}}{b{{l{j}}}}}{{Ab{{n{j}}A`}}}}{{{b{Ad}}{b{Af}}}{{Ah{h}}}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bAj}6","D":"d","p":[[1,"reference"],[0,"mut"],[5,"Request",12],[5,"OakFunctionsClient",0],[1,"u8"],[1,"slice"],[5,"Vec",13],[5,"Status",14],[6,"Result",15],[1,"str"],[10,"AttestationVerifier",16],[8,"Result",17],[5,"TypeId",18]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAoAAgAAAAMABgAGAA=="}],["oak_functions_enclave_service",{"t":"FNNNNNNNNNNNNNNNNNNNNN","n":["OakFunctionsService","abort_next_lookup_data","as_any","as_any_mut","borrow","borrow_mut","extend_next_lookup_data","finish_next_lookup_data","from","handle_user_request","initialize","into","into_any","into_any_arc","into_any_rc","new","reserve","stream_lookup_data","try_from","try_into","type_id","vzip"],"q":[[0,"oak_functions_enclave_service"],[22,"oak_proto_rust::oak::functions"],[23,"micro_rpc::status"],[24,"core::result"],[25,"oak_crypto::encryption_key"],[26,"oak_attestation_types::attester"],[27,"oak_functions_service"],[28,"core::any"],[29,"alloc::boxed"],[30,"alloc::sync"],[31,"alloc::rc"],[32,"core::option"]],"i":"`b00000000000000000000","f":"`{{{d{{b{ceg}}}}f}{{l{hj}}}nA`Ab}{d{{d{Ad}}}}{{{d{Af}}}{{d{AfAd}}}}{d{{d{c}}}{}}{{{d{Af}}}{{d{Afc}}}{}}{{{d{{b{ceg}}}}Ah}{{l{Ajj}}}nA`Ab}{{{d{{b{ceg}}}}Al}{{l{Anj}}}nA`Ab}{cc{}}{{{d{{b{ceg}}}}B`}{{l{Bbj}}}nA`Ab}{{{d{{b{ceg}}}}Bd}{{l{Bfj}}}nA`Ab}{{}c{}}{{{Bh{c}}}{{Bh{Ad}}}{}}{{{Bj{c}}}{{Bj{Ad}}}{}}{{{Bl{c}}}{{Bl{Ad}}}{}}{{c{Bj{e}}{C`{{Bj{Bn}}}}}{{b{ecg}}}A`nAb}{{{d{{b{ceg}}}}Cb}{{l{Cdj}}}nA`Ab}{{{d{{b{ceg}}}}Cf}{{l{Anj}}}nA`Ab}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{dCh}9","D":"d","p":[[5,"OakFunctionsService",0],[1,"reference"],[5,"Empty",22],[5,"AbortNextLookupDataResponse",22],[5,"Status",23],[6,"Result",24],[10,"EncryptionKeyHandle",25],[10,"Attester",26],[10,"Handler",27],[10,"Any",28],[0,"mut"],[5,"ExtendNextLookupDataRequest",22],[5,"ExtendNextLookupDataResponse",22],[5,"FinishNextLookupDataRequest",22],[5,"FinishNextLookupDataResponse",22],[5,"InvokeRequest",22],[5,"InvokeResponse",22],[5,"InitializeRequest",22],[5,"InitializeResponse",22],[5,"Box",29],[5,"Arc",30],[5,"Rc",31],[10,"Observer",27],[6,"Option",32],[5,"ReserveRequest",22],[5,"ReserveResponse",22],[5,"LookupDataChunk",22],[5,"TypeId",28]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABQAAwAAAAgACgABAA0ACQA="}],["oak_functions_sdk",{"t":"HQHHHHHH","n":["alloc","log","read_request","storage_get_item","storage_get_items","testing","write_log_message","write_response"],"q":[[0,"oak_functions_sdk"],[8,"alloc::vec"],[9,"micro_rpc::status"],[10,"core::result"],[11,"core::option"],[12,"core::iter::traits::collect"],[13,"core::convert"]],"i":"````````","f":"{bd}`{{}{{j{{f{d}}h}}}}{{{n{{l{d}}}}}{{j{{A`{{f{d}}}}h}}}}{c{{j{{f{{A`{{f{d}}}}}}h}}}Ab}{{{n{{l{d}}}}Ad}{{j{{f{d}}h}}}}{c{{j{Afh}}}{{Aj{Ah}}}}{{{n{{l{d}}}}}{{j{Afh}}}}","D":"A`","p":[[1,"u32"],[1,"u8"],[5,"Vec",8],[5,"Status",9],[6,"Result",10],[1,"slice"],[1,"reference"],[6,"Option",11],[10,"IntoIterator",12],[1,"bool"],[1,"unit"],[1,"str"],[10,"AsRef",13]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAEA"}],["oak_functions_sdk_abi_test_get_storage_item",{"t":"H","n":["main"],"q":[[0,"oak_functions_sdk_abi_test_get_storage_item"]],"i":"`","f":"{{}b}","D":"b","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAEA"}],["oak_functions_sdk_abi_test_invoke_testing",{"t":"H","n":["main"],"q":[[0,"oak_functions_sdk_abi_test_invoke_testing"]],"i":"`","f":"{{}b}","D":"b","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAEA"}],["oak_functions_service",{"t":"KRRKMCCCCMCMMFNNNNNNNNNNNNNNNNNNNPPPGKFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNHNNNNNNNNNNNFFNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNSIISSFKKFFCNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNMNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNN","n":["Handler","HandlerConfig","HandlerType","Observer","handle_invoke","instance","logger","lookup","lookup_htbl","new_handler","wasm","wasm_initialization","wasm_invocation","OakFunctionsInstance","abort_next_lookup_data","as_any","as_any_mut","borrow","borrow_mut","extend_lookup_data_chunk","extend_next_lookup_data","finish_next_lookup_data","from","handle_user_request","into","into_any","into_any_arc","into_any_rc","new","reserve","try_from","try_into","type_id","Debug","Error","Info","Level","OakLogger","StandaloneLogger","Trace","Warn","as_any","","as_any_mut","","as_str","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","cmp","eq","","equivalent","fmt","","from","","from_str","hash","into","","into_any","","into_any_arc","","into_any_rc","","iter","log_public","","log_sensitive","","max","partial_cmp","","to_level_filter","to_owned","to_string","try_from","","try_into","","type_id","","LookupData","LookupDataManager","abort_next_lookup_data","as_any","","as_any_mut","","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","create_lookup_data","extend_next_lookup_data","finish_next_lookup_data","for_test","format_bytes","from","","get","insert","into","","into_any","","into_any_arc","","into_any_rc","","is_empty","len","limit","log_debug","log_error","new_empty","reserve","to_owned","try_from","","try_into","","type_id","","LookupHtbl","LookupHtblIter","as_any","","as_any_mut","","borrow","","borrow_mut","","contains_key","default","extend","from","","get","hash","insert","into","","into_any","","into_any_arc","","into_any_rc","","into_iter","","is_empty","iter","len","next","reserve","try_from","","try_into","","type_id","","ALLOC_FUNCTION_NAME","AbiPointer","AbiPointerOffset","MAIN_FUNCTION_NAME","MEMORY_NAME","UserState","WasmApi","WasmApiFactory","WasmConfig","WasmHandler","api","as_any","","","as_any_mut","","","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","create","create_wasm_api","default","from","","","handle_invoke","into","","","into_any","","","into_any_arc","","into_any_rc","","","new_handler","to_owned","transport","try_from","","","try_into","","","type_id","","","StdWasmApiFactory","StdWasmApiImpl","as_any","","as_any_mut","","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","create_wasm_api","from","","into","","into_any","","into_any_arc","into_any_rc","","log","lookup_data","lookup_data_manager","lookup_data_multi","read_request","test","to_owned","transport","try_from","","try_into","","type_id","","write_response"],"q":[[0,"oak_functions_service"],[13,"oak_functions_service::instance"],[33,"oak_functions_service::logger"],[88,"oak_functions_service::lookup"],[133,"oak_functions_service::lookup_htbl"],[172,"oak_functions_service::wasm"],[228,"oak_functions_service::wasm::api"],[266,"oak_functions_abi"],[267,"micro_rpc::status"],[268,"core::result"],[269,"core::default"],[270,"core::marker"],[271,"core::clone"],[272,"alloc::sync"],[273,"core::option"],[274,"anyhow"],[275,"core::time"],[276,"oak_proto_rust::oak::functions"],[277,"core::any"],[278,"alloc::vec"],[279,"alloc::boxed"],[280,"alloc::rc"],[281,"log"],[282,"core::cmp"],[283,"core::fmt"],[284,"core::hash"],[285,"core::iter::traits::iterator"],[286,"alloc::string"],[287,"core::iter::traits::collect"],[288,"core::cell"],[289,"micro_rpc"],[290,"oak_proto_rust::oak::functions::wasm::v1"]],"i":"`f0`0````0`Bb0`Bl000000000000000000Dn00```00Fd101101011111111110111010101011Fb101222222121212``An0Fh1010100001111`10011010101000`00110101010``GdGb101010000100`0101010101000010101010```````````InGjGf2102102100001Gh132123213212132121Gn432432432``HdHb1010100001101010110001000001010100","f":"````{{{h{{f{}{{b{c}}{d{e}}}}}}j}{{A`{ln}}}f{AbAdAfAh}}````{{c{h{{Al{Aj}}}}{B`{An}}{Bd{{B`{Bb}}}}}{{Bf{e}}}{}{}}`{{{h{Bb}}Bh}Bj}0`{{{h{{Bl{c}}}}Bn}{{A`{C`n}}}f}{h{{h{Cb}}}}{{{h{Cd}}}{{h{CdCb}}}}{h{{h{c}}}{}}{{{h{Cd}}}{{h{Cdc}}}{}}{{{h{{Bl{c}}}}Cf}{{A`{Bjn}}}f}{{{h{{Bl{c}}}}Ch}{{A`{Cjn}}}f}{{{h{{Bl{c}}}}Cl}{{A`{Cnn}}}f}{cc{}}{{{h{{Bl{c}}}}{D`{Aj}}}{{A`{{D`{Aj}}n}}}f}{{}c{}}{{{Db{c}}}{{Db{Cb}}}{}}{{{B`{c}}}{{B`{Cb}}}{}}{{{Dd{c}}}{{Dd{Cb}}}{}}{{{h{Df}}{Bd{{B`{Bb}}}}}{{A`{{Bl{c}}n}}}f}{{{h{{Bl{c}}}}Dh}{{A`{Djn}}}f}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hDl}````````{h{{h{Cb}}}}0{{{h{Cd}}}{{h{CdCb}}}}0{{{h{Dn}}}{{h{E`}}}}{h{{h{c}}}{}}0{{{h{Cd}}}{{h{Cdc}}}{}}0{{{h{Dn}}}Dn}{{h{h{Cdc}}}Bj{}}{hBj}{{{h{Dn}}{h{Dn}}}Eb}{{{h{Dn}}{h{Dn}}}Ed}{{{h{Dn}}{h{Ef}}}Ed}{{h{h{c}}}Ed{}}{{{h{Dn}}{h{CdEh}}}{{A`{BjEj}}}}0{cc{}}0{{{h{E`}}}{{A`{Dn}}}}{{{h{Dn}}{h{Cdc}}}BjEl}{{}c{}}0{{{Db{c}}}{{Db{Cb}}}{}}0{{{B`{c}}}{{B`{Cb}}}{}}0{{{Dd{c}}}{{Dd{Cb}}}{}}0{{}{{`{{F`{}{{En{Dn}}}}}}}}{{{h{Fb}}Dn{h{E`}}}Bj}{{{h{Fd}}Dn{h{E`}}}Bj}10{{}Dn}{{{h{Dn}}{h{Dn}}}{{Bd{Eb}}}}{{{h{Dn}}{h{Ef}}}{{Bd{Eb}}}}{{{h{Dn}}}Ef}{hc{}}{hFf}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hDl}0``{{{h{An}}}Bj}{h{{h{Cb}}}}0{{{h{Cd}}}{{h{CdCb}}}}0{h{{h{c}}}{}}0{{{h{Cd}}}{{h{Cdc}}}{}}0{{{h{Fh}}}Fh}{{h{h{Cdc}}}Bj{}}{hBj}{{{h{An}}}Fh}{{{h{An}}c}Bj{{Fl{}{{En{{Fj{{h{{Al{Aj}}}}{h{{Al{Aj}}}}}}}}}}}}9{{{D`{{Fj{{D`{Aj}}{D`{Aj}}}}}}{B`{Fb}}}An}{{{h{{Al{Aj}}}}}Ff}{cc{}}0{{{h{Fh}}{h{{Al{Aj}}}}}{{Bd{{h{{Al{Aj}}}}}}}}{{{h{An}}{h{{Al{Aj}}}}{h{{Al{Aj}}}}}Bj}{{}c{}}0{{{Db{c}}}{{Db{Cb}}}{}}0{{{B`{c}}}{{B`{Cb}}}{}}0{{{Dd{c}}}{{Dd{Cb}}}{}}0{{{h{Fh}}}Ed}{{{h{Fh}}}Fn}{{{h{{Al{c}}}}Fn}{{h{{Al{c}}}}}{}}{{{h{Fh}}{h{E`}}}Bj}0{{{B`{Fb}}}An}{{{h{An}}G`}{{Bf{Bj}}}}{hc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hDl}0``{h{{h{Cb}}}}0{{{h{Cd}}}{{h{CdCb}}}}0{h{{h{c}}}{}}0{{{h{Cd}}}{{h{Cdc}}}{}}0{{{h{Gb}}{h{{Al{Aj}}}}}Ed}{{}Gb}{{{h{CdGb}}c}Bj{{Fl{}{{En{{Fj{{h{{Al{Aj}}}}{h{{Al{Aj}}}}}}}}}}}}{cc{}}0{{{h{Gb}}{h{{Al{Aj}}}}}{{Bd{{h{{Al{Aj}}}}}}}}{{{h{{Al{Aj}}}}G`}G`}{{{h{CdGb}}{h{{Al{Aj}}}}{h{{Al{Aj}}}}}{{Bd{{h{{Al{Aj}}}}}}}}{{}c{}}0{{{Db{c}}}{{Db{Cb}}}{}}0{{{B`{c}}}{{B`{Cb}}}{}}0{{{Dd{c}}}{{Dd{Cb}}}{}}03{{{h{Gb}}}c{}}{{{h{Gb}}}Ed}{{{h{Gb}}}Gd}{{{h{Gb}}}Fn}{{{h{CdGd}}}{{Bd{c}}}{}}{{{h{CdGb}}Fn}Bj}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hDl}0```````````{h{{h{Cb}}}}00{{{h{Cd}}}{{h{CdCb}}}}00{h{{h{c}}}{}}00{{{h{Cd}}}{{h{Cdc}}}{}}00{{{h{Gf}}}Gf}{{h{h{Cdc}}}Bj{}}{hBj}{{{h{{Al{Aj}}}}{B`{Gh}}{B`{Fb}}{Bd{{B`{Bb}}}}}{{Bf{Gj}}}}{{{h{Gh}}{D`{Aj}}{Dd{{Gl{{D`{Aj}}}}}}}{{Db{Gn}}}}{{}Gf}{cc{}}00{{{h{Gj}}j}{{A`{ln}}}}{{}c{}}00{{{Db{c}}}{{Db{Cb}}}{}}00{{{B`{c}}}{{B`{Cb}}}{}}0{{{Dd{c}}}{{Dd{Cb}}}{}}00{{Gf{h{{Al{Aj}}}}{B`{An}}{Bd{{B`{Bb}}}}}{{Bf{Gj}}}}{hc{}}{{{h{CdGn}}}{{Db{H`}}}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hDl}00``{h{{h{Cb}}}}0{{{h{Cd}}}{{h{CdCb}}}}0{h{{h{c}}}{}}0{{{h{Cd}}}{{h{Cdc}}}{}}0{{{h{Hb}}}Hb}{{h{h{Cdc}}}Bj{}}{hBj}{{{h{Hd}}{D`{Aj}}{Dd{{Gl{{D`{Aj}}}}}}}{{Db{Gn}}}}{cc{}}0{{}c{}}0{{{Db{c}}}{{Db{Cb}}}{}}0{{{B`{c}}}{{B`{Cb}}}{}}{{{Dd{c}}}{{Dd{Cb}}}{}}0{{{h{CdHb}}Hf}{{A`{Hhn}}}}{{{h{CdHb}}Hj}{{A`{Hln}}}}`{{{h{CdHb}}Hn}{{A`{I`n}}}}{{{h{CdHb}}Ib}{{A`{Idn}}}}{{{h{CdHb}}If}{{A`{Ihn}}}}{hc{}}{{{h{CdHb}}}{{Db{H`}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hDl}0{{{h{CdHb}}Ij}{{A`{Iln}}}}","D":"If","p":[[17,"HandlerType"],[17,"HandlerConfig"],[10,"Handler",0],[1,"reference"],[5,"Request",266],[5,"Response",266],[5,"Status",267],[6,"Result",268],[10,"Default",269],[10,"Send",270],[10,"Sync",270],[10,"Clone",271],[1,"u8"],[1,"slice"],[5,"LookupDataManager",88],[5,"Arc",272],[10,"Observer",0],[6,"Option",273],[8,"Result",274],[5,"Duration",275],[1,"unit"],[5,"OakFunctionsInstance",13],[5,"Empty",276],[5,"AbortNextLookupDataResponse",276],[10,"Any",277],[0,"mut"],[5,"LookupDataChunk",276],[5,"ExtendNextLookupDataRequest",276],[5,"ExtendNextLookupDataResponse",276],[5,"FinishNextLookupDataRequest",276],[5,"FinishNextLookupDataResponse",276],[5,"Vec",278],[5,"Box",279],[5,"Rc",280],[5,"InitializeRequest",276],[5,"ReserveRequest",276],[5,"ReserveResponse",276],[5,"TypeId",277],[6,"Level",33,281],[1,"str"],[6,"Ordering",282],[1,"bool"],[6,"LevelFilter",281],[5,"Formatter",283],[5,"Error",283],[10,"Hasher",284],[17,"Item"],[10,"Iterator",285],[10,"OakLogger",33],[5,"StandaloneLogger",33],[5,"String",286],[5,"LookupData",88],[1,"tuple"],[10,"IntoIterator",287],[1,"usize"],[1,"u64"],[5,"LookupHtbl",133],[5,"LookupHtblIter",133],[5,"WasmConfig",172],[10,"WasmApiFactory",172],[5,"WasmHandler",172],[5,"Cell",288],[10,"WasmApi",172],[10,"Transport",289],[5,"StdWasmApiImpl",228],[5,"StdWasmApiFactory",228],[5,"LogRequest",290],[5,"LogResponse",290],[5,"LookupDataRequest",290],[5,"LookupDataResponse",290],[5,"LookupDataMultiRequest",290],[5,"LookupDataMultiResponse",290],[5,"ReadRequestRequest",290],[5,"ReadRequestResponse",290],[5,"TestRequest",290],[5,"TestResponse",290],[5,"WriteResponseRequest",290],[5,"WriteResponseResponse",290],[5,"UserState",172]],"r":[[36,281]],"b":[[54,"impl-PartialEq-for-Level"],[55,"impl-PartialEq%3CLevelFilter%3E-for-Level"],[57,"impl-Display-for-Level"],[58,"impl-Debug-for-Level"],[77,"impl-PartialOrd-for-Level"],[78,"impl-PartialOrd%3CLevelFilter%3E-for-Level"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAL8AHwAAAAQABgACAAoAAAAMAAIAEAAEABoAAgAeAAMAJgAAACoAAwAvAAwAPgABAEIABQBKAAAATAAAAE4AAQBRAAcAWwALAGgAAQBvAAAAcgAFAH4AEQCRAAAAlgAAAJoABwClAAAApwAFALUAFADNAAAA0QATAOcACwD3ABMA"}],["oak_functions_test_module",{"t":"H","n":["main"],"q":[[0,"oak_functions_test_module"]],"i":"`","f":"{{}b}","D":"b","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAEA"}],["oak_functions_test_utils",{"t":"FFJJJFHHNNNNNNHHNHNNNNNNNNNNHNHHHHHHHHNNNNNNNNNNNNNHH","n":["Background","BackgroundHandle","MOCK_LOOKUP_DATA_PATH","OAK_RESTRICTED_KERNEL_WRAPPER_BIN","STAGE0","Term","assert_response_body","background","borrow","","","borrow_mut","","","create_client","create_test_lookup_data","drop","free_port","from","","","into","","","into_future","into_request","","","make_request","poll","run_cc_client","run_java_client","run_oak_functions_containers_example_in_background","run_oak_functions_example_in_background","rust_crate_enclave_out_path","rust_crate_wasm_out_path","serialize_entries","skip_test","terminate_and_join","try_from","","","try_into","","","type_id","","","vzip","","","workspace_path","write_to_temp_file"],"q":[[0,"oak_functions_test_utils"],[53,"oak_functions_abi"],[54,"core::future::future"],[55,"core::marker"],[56,"core::ops::function"],[57,"core::time"],[58,"oak_functions_client"],[59,"ubyte::byte_unit"],[60,"alloc::vec"],[61,"std::collections::hash::map"],[62,"tonic::request"],[63,"core::pin"],[64,"core::task::wake"],[65,"core::task::poll"],[66,"std::process"],[67,"std::io::error"],[68,"std::path"],[69,"core::convert"],[70,"std::ffi::os_str"],[71,"alloc::string"],[72,"core::result"],[73,"core::any"],[74,"tempfile::file"]],"i":"````````jA`Bh210``0`2102101210`1````````2210210210210``","f":"``````{{b{f{d}}}h}{ej{ln}{{Ad{A`}{{Ab{c}}}}}}{f{{f{c}}}{}}00{{{f{Af}}}{{f{Afc}}}{}}00{{AhAj}Al}{{AnB`}{{Bf{{Bd{Bb}}{Bd{Bb}}}}}}{{{f{AfBh}}}h}{{}Ah}{cc{}}00{{}c{}}00{{}}{{}{{Bj{c}}}{}}00{{Ah{f{{Bl{Bb}}}}}{{Bd{Bb}}}}{{{Bn{{f{AfA`}}}}{f{AfC`}}}{{Cb{h}}}}{{{f{d}}{f{d}}}{{Cf{Cd}}}}{{{f{d}}}{{Cf{Cd}}}}{{ceg}{{Ch{BhAh}}}{{Cl{Cj}}}{{Cl{Cj}}}{{Cl{Cn}}}}{{{f{d}}{f{d}}}{{Ch{BhAh}}}}{{{f{d}}}D`}0{{{Bf{{Bd{Bb}}{Bd{Bb}}}}}{{Bd{Bb}}}}{{}Db}{{{j{c}}}c{}}{c{{Dd{e}}}{}{}}00{{}{{Dd{c}}}{}}00{fDf}00???{{{f{{Bl{{f{d}}}}}}}Dh}{{{f{{Bl{Bb}}}}}Dj}","D":"Bb","p":[[5,"Response",53],[1,"str"],[1,"reference"],[1,"unit"],[5,"Background",0],[10,"Future",54],[10,"Send",55],[5,"Term",0],[17,"Output"],[10,"FnOnce",56],[0,"mut"],[1,"u16"],[5,"Duration",57],[5,"OakFunctionsClient",58],[5,"ByteUnit",59],[1,"u32"],[1,"u8"],[5,"Vec",60],[5,"HashMap",61],[5,"BackgroundHandle",0],[5,"Request",62],[1,"slice"],[5,"Pin",63],[5,"Context",64],[6,"Poll",65],[5,"Output",66],[8,"Result",67],[1,"tuple"],[5,"Path",68],[10,"AsRef",69],[5,"OsStr",70],[5,"String",71],[1,"bool"],[6,"Result",72],[5,"TypeId",73],[5,"PathBuf",68],[5,"NamedTempFile",74]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACQABwADAAIABwAAAAkABQAQAAIAGQAHACMAAQAoAA0A"}],["oak_grpc",{"t":"CCCCCCCCCCCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRRKFNNNNNNNNNNNNMMMMNNNNNNMNNMNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNKFNNNNNNNNNNNNMMNNNNNNMNNNNNNNNNCCCCFNNNNNNNNNNNNNNNNNNNNNNNNNKFNNNNNNNNNNNNMMNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNKFNNNNNNNNMNNNNNNNNNNNNNMNNNNNNCCFNNNNNNNNNNNNNNNNNNNNNNNNKFNNNNNNNNMNNNNNNNNNNNNNNNNNNNCCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFMNNNNNNNNMMNNNNMMNNNNNNNNMNMNNNNNNCCCFNNNNNNNNNNNNNNNNNNNNNNNNKFNNNNNNNNNNNNMNNNNNNNNNNNNNNNCCCFNNNNNNNNNNNNNNNNNNNNNNNNRKFNNNNNNNNNNNNNNNNNNNNNMNNNNNN","n":["oak","containers","debug","functions","key_provisioning","session","launcher_client","launcher_server","orchestrator_client","orchestrator_server","v1","LauncherClient","accept_compressed","borrow","borrow_mut","clone","clone_into","clone_to_uninit","connect","fmt","from","from_ref","get_application_config","get_container_bundle","get_endorsements","get_oak_system_image","into","into_request","max_decoding_message_size","max_encoding_message_size","new","notify_app_ready","send_attestation_evidence","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","GetContainerBundleStream","GetOakSystemImageStream","Launcher","LauncherServer","accept_compressed","borrow","borrow_mut","call","","clone","clone_into","clone_to_uninit","fmt","from","from_arc","from_ref","get_application_config","get_container_bundle","get_endorsements","get_oak_system_image","into","into_make_service","into_request","max_decoding_message_size","max_encoding_message_size","new","notify_app_ready","poll_ready","","send_attestation_evidence","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","OrchestratorClient","accept_compressed","borrow","borrow_mut","clone","clone_into","clone_to_uninit","connect","fmt","from","from_ref","get_application_config","get_endorsed_evidence","into","into_request","max_decoding_message_size","max_encoding_message_size","new","notify_app_ready","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","Orchestrator","OrchestratorServer","accept_compressed","borrow","borrow_mut","call","","clone","clone_into","clone_to_uninit","fmt","from","from_arc","from_ref","get_application_config","get_endorsed_evidence","into","into_make_service","into_request","max_decoding_message_size","max_encoding_message_size","new","notify_app_ready","poll_ready","","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","hostlib_key_provisioning_client","hostlib_key_provisioning_server","orchestrator_crypto_client","orchestrator_crypto_server","HostlibKeyProvisioningClient","accept_compressed","borrow","borrow_mut","clone","clone_into","clone_to_uninit","connect","fmt","from","from_ref","get_group_keys","get_key_provisioning_role","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","HostlibKeyProvisioning","HostlibKeyProvisioningServer","accept_compressed","borrow","borrow_mut","call","","clone","clone_into","clone_to_uninit","fmt","from","from_arc","from_ref","get_group_keys","get_key_provisioning_role","into","into_make_service","into_request","max_decoding_message_size","max_encoding_message_size","new","poll_ready","","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","OrchestratorCryptoClient","accept_compressed","borrow","borrow_mut","clone","clone_into","clone_to_uninit","connect","derive_session_keys","fmt","from","from_ref","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","sign","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","OrchestratorCrypto","OrchestratorCryptoServer","accept_compressed","borrow","borrow_mut","call","","clone","clone_into","clone_to_uninit","derive_session_keys","fmt","from","from_arc","from_ref","into","into_make_service","into_request","max_decoding_message_size","max_encoding_message_size","new","poll_ready","","send_compressed","sign","to_owned","try_from","try_into","type_id","vzip","with_interceptor","debug_service_client","debug_service_server","DebugServiceClient","accept_compressed","borrow","borrow_mut","clone","clone_into","clone_to_uninit","connect","cpu_profile","fmt","from","from_ref","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","DebugService","DebugServiceServer","accept_compressed","borrow","borrow_mut","call","","clone","clone_into","clone_to_uninit","cpu_profile","fmt","from","from_arc","from_ref","into","into_make_service","into_request","max_decoding_message_size","max_encoding_message_size","new","poll_ready","","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","oak_functions_client","oak_functions_server","OakFunctionsClient","abort_next_lookup_data","accept_compressed","borrow","borrow_mut","clone","clone_into","clone_to_uninit","connect","extend_next_lookup_data","finish_next_lookup_data","fmt","from","from_ref","handle_user_request","initialize","into","into_request","max_decoding_message_size","max_encoding_message_size","new","reserve","send_compressed","stream_lookup_data","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","OakFunctions","OakFunctionsServer","abort_next_lookup_data","accept_compressed","borrow","borrow_mut","call","","clone","clone_into","clone_to_uninit","extend_next_lookup_data","finish_next_lookup_data","fmt","from","from_arc","from_ref","handle_user_request","initialize","into","into_make_service","into_request","max_decoding_message_size","max_encoding_message_size","new","poll_ready","","reserve","send_compressed","stream_lookup_data","to_owned","try_from","try_into","type_id","vzip","with_interceptor","v1","key_provisioning_client","key_provisioning_server","KeyProvisioningClient","accept_compressed","borrow","borrow_mut","clone","clone_into","clone_to_uninit","connect","fmt","from","from_ref","get_group_keys","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","KeyProvisioning","KeyProvisioningServer","accept_compressed","borrow","borrow_mut","call","","clone","clone_into","clone_to_uninit","fmt","from","from_arc","from_ref","get_group_keys","into","into_make_service","into_request","max_decoding_message_size","max_encoding_message_size","new","poll_ready","","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","v1","streaming_session_client","streaming_session_server","StreamingSessionClient","accept_compressed","borrow","borrow_mut","clone","clone_into","clone_to_uninit","connect","fmt","from","from_ref","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","stream","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","StreamStream","StreamingSession","StreamingSessionServer","accept_compressed","borrow","borrow_mut","call","","clone","clone_into","clone_to_uninit","fmt","from","from_arc","from_ref","into","into_make_service","into_request","max_decoding_message_size","max_encoding_message_size","new","poll_ready","","send_compressed","stream","to_owned","try_from","try_into","type_id","vzip","with_interceptor"],"q":[[0,"oak_grpc"],[1,"oak_grpc::oak"],[6,"oak_grpc::oak::containers"],[11,"oak_grpc::oak::containers::launcher_client"],[41,"oak_grpc::oak::containers::launcher_server"],[78,"oak_grpc::oak::containers::orchestrator_client"],[105,"oak_grpc::oak::containers::orchestrator_server"],[137,"oak_grpc::oak::containers::v1"],[141,"oak_grpc::oak::containers::v1::hostlib_key_provisioning_client"],[167,"oak_grpc::oak::containers::v1::hostlib_key_provisioning_server"],[198,"oak_grpc::oak::containers::v1::orchestrator_crypto_client"],[224,"oak_grpc::oak::containers::v1::orchestrator_crypto_server"],[255,"oak_grpc::oak::debug"],[257,"oak_grpc::oak::debug::debug_service_client"],[282,"oak_grpc::oak::debug::debug_service_server"],[312,"oak_grpc::oak::functions"],[314,"oak_grpc::oak::functions::oak_functions_client"],[345,"oak_grpc::oak::functions::oak_functions_server"],[381,"oak_grpc::oak::key_provisioning"],[382,"oak_grpc::oak::key_provisioning::v1"],[384,"oak_grpc::oak::key_provisioning::v1::key_provisioning_client"],[409,"oak_grpc::oak::key_provisioning::v1::key_provisioning_server"],[439,"oak_grpc::oak::session"],[440,"oak_grpc::oak::session::v1"],[442,"oak_grpc::oak::session::v1::streaming_session_client"],[467,"oak_grpc::oak::session::v1::streaming_session_server"],[498,"tonic::codec::compression"],[499,"tonic::body"],[500,"tonic::client::service"],[501,"core::clone"],[502,"tonic::transport::channel"],[503,"tonic::transport::error"],[504,"core::result"],[505,"tonic::transport::channel::endpoint"],[506,"core::convert"],[507,"core::fmt"],[508,"oak_proto_rust::oak::containers"],[509,"tonic::response"],[510,"tonic::status"],[511,"tonic::request"],[512,"tonic::codec::decode"],[513,"oak_proto_rust::oak::attestation::v1"],[514,"core::any"],[515,"tonic::service::interceptor"],[516,"http::request"],[517,"http::response"],[518,"tower_service"],[519,"http::uri"],[520,"http_body"],[521,"core::marker"],[522,"alloc::sync"],[523,"core::future::future"],[524,"alloc::boxed"],[525,"core::pin"],[526,"futures_core::stream"],[527,"axum::routing::into_make_service"],[528,"core::task::wake"],[529,"core::task::poll"],[530,"oak_proto_rust::oak::session::v1"],[531,"oak_proto_rust::oak::containers::v1"],[532,"oak_proto_rust::oak::debug"],[533,"oak_proto_rust::oak::functions"],[534,"oak_proto_rust::oak::key_provisioning::v1"]],"i":"````````````b0000000000000000000000000000Dh0``Df00000000000111100000010010000000`Fd0000000000000000000000000``Fh00000000000Fj01111110111111111`````Fl000000000000000000000000``Gb00000000000Gd0111111111111111`Gf000000000000000000000000``H`0000000Hb11111111111110111111```Hd00000000000000000000000``Hj0000000Hl1111111111111111111```Hn00000000000000000000000000000``JnK`00000001100001100000000101000000````Kb00000000000000000000000``Kh00000000000Kj111111111111111````Kl00000000000000000000000Ld``Lb000000000000000000001000000","f":"````````````{{{b{c}}d}{{b{c}}}{{h{f}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{b{c}}}}}{{b{c}}}n}{{j{j{lc}}}A`{}}{jA`}{c{{Af{{b{Ab}}Ad}}}{{Aj{Ah}}}}{{{j{{b{c}}}}{j{lAl}}}AnB`}{cc{}}{{{j{c}}}c{}}{{{j{l{b{c}}}}e}{{Af{{Bd{Bb}}Bf}}}{{h{f}}}{{Bh{A`}}}}{{{j{l{b{c}}}}e}{{Af{{Bd{{Bl{Bj}}}}Bf}}}{{h{f}}}{{Bh{A`}}}}{{{j{l{b{c}}}}e}{{Af{{Bd{Bn}}Bf}}}{{h{f}}}{{Bh{A`}}}}1{{}c{}}{{}{{C`{c}}}{}}{{{b{c}}Cb}{{b{c}}}{{h{f}}}}0{c{{b{c}}}{{h{f}}}}{{{j{l{b{c}}}}e}{{Af{{Bd{A`}}Bf}}}{{h{f}}}{{Bh{A`}}}}{{{j{l{b{c}}}}e}{{Af{{Bd{A`}}Bf}}}{{h{f}}}{{Bh{Cd}}}}{{{b{c}}d}{{b{c}}}{{h{f}}}}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}:{{ce}{{b{{Ch{ce}}}}}{{D`{{Cj{f}}}{{Cl{Cn}}}}{h{f}}}Db}{{cDd}{{b{c}}}{{h{f}}}}````{{{Df{c}}d}{{Df{c}}}Dh}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{l}}{Cj{c}}}{}{}}{{{j{l{Df{c}}}}{Cj{e}}}gDh{DjDl}{}}{{{j{{Df{c}}}}}{{Df{c}}}Dh}{{j{j{lc}}}A`{}}{jA`}{{{j{{Df{c}}}}{j{lAl}}}An{B`Dh}}{cc{}}{{{Dn{c}}}{{Df{c}}}Dh}{{{j{c}}}c{}}{{{j{{Dh{}{{E`{c}}{Eb{e}}}}}}{C`{A`}}}{{Eh{{Ef{Ed}}}}}{{El{}{{Ej{{Af{BjBf}}}}}}Dl}{{El{}{{Ej{{Af{BjBf}}}}}}Dl}}000{{}c{}}{{}{{En{c}}}{}}{{}{{C`{c}}}{}}{{{Df{c}}Cb}{{Df{c}}}Dh}0{c{{Df{c}}}Dh}5{{{j{l}}{j{lF`}}}{{Fb{{Af{A`}}}}}}{{{j{l{Df{c}}}}{j{lF`}}}{{Fb{{Af{A`e}}}}}Dh{}}{{{j{{Dh{}{{E`{c}}{Eb{e}}}}}}{C`{Cd}}}{{Eh{{Ef{Ed}}}}}{{El{}{{Ej{{Af{BjBf}}}}}}Dl}{{El{}{{Ej{{Af{BjBf}}}}}}Dl}}{{{Df{c}}d}{{Df{c}}}Dh}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}<{{ce}{{Ch{{Df{c}}e}}}DhDb}`{{{Fd{c}}d}{{Fd{c}}}{{h{f}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Fd{c}}}}}{{Fd{c}}}n}{{j{j{lc}}}A`{}}{jA`}{c{{Af{{Fd{Ab}}Ad}}}{{Aj{Ah}}}}{{{j{{Fd{c}}}}{j{lAl}}}AnB`}{cc{}}{{{j{c}}}c{}}{{{j{l{Fd{c}}}}e}{{Af{{Bd{Bb}}Bf}}}{{h{f}}}{{Bh{A`}}}}{{{j{l{Fd{c}}}}e}{{Af{{Bd{Ff}}Bf}}}{{h{f}}}{{Bh{A`}}}}{{}c{}}{{}{{C`{c}}}{}}{{{Fd{c}}Cb}{{Fd{c}}}{{h{f}}}}0{c{{Fd{c}}}{{h{f}}}}{{{j{l{Fd{c}}}}e}{{Af{{Bd{A`}}Bf}}}{{h{f}}}{{Bh{A`}}}}{{{Fd{c}}d}{{Fd{c}}}{{h{f}}}}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}9{{ce}{{Fd{{Ch{ce}}}}}{{D`{{Cj{f}}}{{Cl{Cn}}}}{h{f}}}Db}{{cDd}{{Fd{c}}}{{h{f}}}}``{{{Fh{c}}d}{{Fh{c}}}Fj}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{l{Fh{c}}}}{Cj{e}}}gFj{DjDl}{}}{{{j{l}}{Cj{c}}}{}{}}{{{j{{Fh{c}}}}}{{Fh{c}}}Fj}{{j{j{lc}}}A`{}}{jA`}{{{j{{Fh{c}}}}{j{lAl}}}An{B`Fj}}{cc{}}{{{Dn{c}}}{{Fh{c}}}Fj}{{{j{c}}}c{}}{{{j{Fj}}{C`{A`}}}{{Eh{{Ef{Ed}}}}}}0{{}c{}}{{}{{En{c}}}{}}{{}{{C`{c}}}{}}{{{Fh{c}}Cb}{{Fh{c}}}Fj}0{c{{Fh{c}}}Fj}5{{{j{l{Fh{c}}}}{j{lF`}}}{{Fb{{Af{A`e}}}}}Fj{}}{{{j{l}}{j{lF`}}}{{Fb{{Af{A`}}}}}}{{{Fh{c}}d}{{Fh{c}}}Fj}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf};{{ce}{{Ch{{Fh{c}}e}}}FjDb}`````{{{Fl{c}}d}{{Fl{c}}}{{h{f}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Fl{c}}}}}{{Fl{c}}}n}{{j{j{lc}}}A`{}}{jA`}{c{{Af{{Fl{Ab}}Ad}}}{{Aj{Ah}}}}{{{j{{Fl{c}}}}{j{lAl}}}AnB`}{cc{}}{{{j{c}}}c{}}{{{j{l{Fl{c}}}}e}{{Af{{Bd{Fn}}Bf}}}{{h{f}}}{{Bh{A`}}}}{{{j{l{Fl{c}}}}e}{{Af{{Bd{G`}}Bf}}}{{h{f}}}{{Bh{A`}}}}{{}c{}}{{}{{C`{c}}}{}}{{{Fl{c}}Cb}{{Fl{c}}}{{h{f}}}}0{c{{Fl{c}}}{{h{f}}}}?{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}7{{ce}{{Fl{{Ch{ce}}}}}{{D`{{Cj{f}}}{{Cl{Cn}}}}{h{f}}}Db}{{cDd}{{Fl{c}}}{{h{f}}}}``{{{Gb{c}}d}{{Gb{c}}}Gd}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{l{Gb{c}}}}{Cj{e}}}gGd{DjDl}{}}{{{j{l}}{Cj{c}}}{}{}}{{{j{{Gb{c}}}}}{{Gb{c}}}Gd}{{j{j{lc}}}A`{}}{jA`}{{{j{{Gb{c}}}}{j{lAl}}}An{B`Gd}}{cc{}}{{{Dn{c}}}{{Gb{c}}}Gd}{{{j{c}}}c{}}{{{j{Gd}}{C`{A`}}}{{Eh{{Ef{Ed}}}}}}0{{}c{}}{{}{{En{c}}}{}}{{}{{C`{c}}}{}}{{{Gb{c}}Cb}{{Gb{c}}}Gd}0{c{{Gb{c}}}Gd}{{{j{l}}{j{lF`}}}{{Fb{{Af{A`}}}}}}{{{j{l{Gb{c}}}}{j{lF`}}}{{Fb{{Af{A`e}}}}}Gd{}}{{{Gb{c}}d}{{Gb{c}}}Gd}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf};{{ce}{{Ch{{Gb{c}}e}}}GdDb}`{{{Gf{c}}d}{{Gf{c}}}{{h{f}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Gf{c}}}}}{{Gf{c}}}n}{{j{j{lc}}}A`{}}{jA`}{c{{Af{{Gf{Ab}}Ad}}}{{Aj{Ah}}}}{{{j{l{Gf{c}}}}e}{{Af{{Bd{Gh}}Bf}}}{{h{f}}}{{Bh{Gj}}}}{{{j{{Gf{c}}}}{j{lAl}}}AnB`}{cc{}}{{{j{c}}}c{}}{{}c{}}{{}{{C`{c}}}{}}{{{Gf{c}}Cb}{{Gf{c}}}{{h{f}}}}0{c{{Gf{c}}}{{h{f}}}}>{{{j{l{Gf{c}}}}e}{{Af{{Bd{Gl}}Bf}}}{{h{f}}}{{Bh{Gn}}}}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}8{{ce}{{Gf{{Ch{ce}}}}}{{D`{{Cj{f}}}{{Cl{Cn}}}}{h{f}}}Db}{{cDd}{{Gf{c}}}{{h{f}}}}``{{{H`{c}}d}{{H`{c}}}Hb}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{l{H`{c}}}}{Cj{e}}}gHb{DjDl}{}}{{{j{l}}{Cj{c}}}{}{}}{{{j{{H`{c}}}}}{{H`{c}}}Hb}{{j{j{lc}}}A`{}}{jA`}{{{j{Hb}}{C`{Gj}}}{{Eh{{Ef{Ed}}}}}}{{{j{{H`{c}}}}{j{lAl}}}An{B`Hb}}{cc{}}{{{Dn{c}}}{{H`{c}}}Hb}{{{j{c}}}c{}}{{}c{}}{{}{{En{c}}}{}}{{}{{C`{c}}}{}}{{{H`{c}}Cb}{{H`{c}}}Hb}0{c{{H`{c}}}Hb}{{{j{l}}{j{lF`}}}{{Fb{{Af{A`}}}}}}{{{j{l{H`{c}}}}{j{lF`}}}{{Fb{{Af{A`e}}}}}Hb{}}{{{H`{c}}d}{{H`{c}}}Hb}{{{j{Hb}}{C`{Gn}}}{{Eh{{Ef{Ed}}}}}}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}<{{ce}{{Ch{{H`{c}}e}}}HbDb}```{{{Hd{c}}d}{{Hd{c}}}{{h{f}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Hd{c}}}}}{{Hd{c}}}n}{{j{j{lc}}}A`{}}{jA`}{c{{Af{{Hd{Ab}}Ad}}}{{Aj{Ah}}}}{{{j{l{Hd{c}}}}e}{{Af{{Bd{Hf}}Bf}}}{{h{f}}}{{Bh{Hh}}}}{{{j{{Hd{c}}}}{j{lAl}}}AnB`}{cc{}}{{{j{c}}}c{}}{{}c{}}{{}{{C`{c}}}{}}{{{Hd{c}}Cb}{{Hd{c}}}{{h{f}}}}0{c{{Hd{c}}}{{h{f}}}}>{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}7{{ce}{{Hd{{Ch{ce}}}}}{{D`{{Cj{f}}}{{Cl{Cn}}}}{h{f}}}Db}{{cDd}{{Hd{c}}}{{h{f}}}}``{{{Hj{c}}d}{{Hj{c}}}Hl}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{l{Hj{c}}}}{Cj{e}}}gHl{DjDl}{}}{{{j{l}}{Cj{c}}}{}{}}{{{j{{Hj{c}}}}}{{Hj{c}}}Hl}{{j{j{lc}}}A`{}}{jA`}{{{j{Hl}}{C`{Hh}}}{{Eh{{Ef{Ed}}}}}}{{{j{{Hj{c}}}}{j{lAl}}}An{B`Hl}}{cc{}}{{{Dn{c}}}{{Hj{c}}}Hl}{{{j{c}}}c{}}{{}c{}}{{}{{En{c}}}{}}{{}{{C`{c}}}{}}{{{Hj{c}}Cb}{{Hj{c}}}Hl}0{c{{Hj{c}}}Hl}{{{j{l{Hj{c}}}}{j{lF`}}}{{Fb{{Af{A`e}}}}}Hl{}}{{{j{l}}{j{lF`}}}{{Fb{{Af{A`}}}}}}{{{Hj{c}}d}{{Hj{c}}}Hl}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf};{{ce}{{Ch{{Hj{c}}e}}}HlDb}```{{{j{l{Hn{c}}}}e}{{Af{{Bd{I`}}Bf}}}{{h{f}}}{{Bh{Ib}}}}{{{Hn{c}}d}{{Hn{c}}}{{h{f}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Hn{c}}}}}{{Hn{c}}}n}{{j{j{lc}}}A`{}}{jA`}{c{{Af{{Hn{Ab}}Ad}}}{{Aj{Ah}}}}{{{j{l{Hn{c}}}}e}{{Af{{Bd{Id}}Bf}}}{{h{f}}}{{Bh{If}}}}{{{j{l{Hn{c}}}}e}{{Af{{Bd{Ih}}Bf}}}{{h{f}}}{{Bh{Ij}}}}{{{j{{Hn{c}}}}{j{lAl}}}AnB`}{cc{}}{{{j{c}}}c{}}{{{j{l{Hn{c}}}}e}{{Af{{Bd{Il}}Bf}}}{{h{f}}}{{Bh{In}}}}{{{j{l{Hn{c}}}}e}{{Af{{Bd{J`}}Bf}}}{{h{f}}}{{Bh{Jb}}}}{{}c{}}{{}{{C`{c}}}{}}{{{Hn{c}}Cb}{{Hn{c}}}{{h{f}}}}0{c{{Hn{c}}}{{h{f}}}}{{{j{l{Hn{c}}}}e}{{Af{{Bd{Jd}}Bf}}}{{h{f}}}{{Bh{Jf}}}}{{{Hn{c}}d}{{Hn{c}}}{{h{f}}}}{{{j{l{Hn{c}}}}e}{{Af{{Bd{Ih}}Bf}}}{{h{f}}}{{Jl{}{{Jh{Jj}}}}}}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}:{{ce}{{Hn{{Ch{ce}}}}}{{D`{{Cj{f}}}{{Cl{Cn}}}}{h{f}}}Db}{{cDd}{{Hn{c}}}{{h{f}}}}``{{{j{Jn}}{C`{Ib}}}{{Eh{{Ef{Ed}}}}}}{{{K`{c}}d}{{K`{c}}}Jn}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{l{K`{c}}}}{Cj{e}}}gJn{DjDl}{}}{{{j{l}}{Cj{c}}}{}{}}{{{j{{K`{c}}}}}{{K`{c}}}Jn}{{j{j{lc}}}A`{}}{jA`}{{{j{Jn}}{C`{If}}}{{Eh{{Ef{Ed}}}}}}{{{j{Jn}}{C`{Ij}}}{{Eh{{Ef{Ed}}}}}}{{{j{{K`{c}}}}{j{lAl}}}An{B`Jn}}{cc{}}{{{Dn{c}}}{{K`{c}}}Jn}{{{j{c}}}c{}}{{{j{Jn}}{C`{In}}}{{Eh{{Ef{Ed}}}}}}{{{j{Jn}}{C`{Jb}}}{{Eh{{Ef{Ed}}}}}}{{}c{}}{{}{{En{c}}}{}}{{}{{C`{c}}}{}}{{{K`{c}}Cb}{{K`{c}}}Jn}0{c{{K`{c}}}Jn}{{{j{l}}{j{lF`}}}{{Fb{{Af{A`}}}}}}{{{j{l{K`{c}}}}{j{lF`}}}{{Fb{{Af{A`e}}}}}Jn{}}{{{j{Jn}}{C`{Jf}}}{{Eh{{Ef{Ed}}}}}}{{{K`{c}}d}{{K`{c}}}Jn}{{{j{Jn}}{C`{{Bl{Jj}}}}}{{Eh{{Ef{Ed}}}}}}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}={{ce}{{Ch{{K`{c}}e}}}JnDb}````{{{Kb{c}}d}{{Kb{c}}}{{h{f}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Kb{c}}}}}{{Kb{c}}}n}{{j{j{lc}}}A`{}}{jA`}{c{{Af{{Kb{Ab}}Ad}}}{{Aj{Ah}}}}{{{j{{Kb{c}}}}{j{lAl}}}AnB`}{cc{}}{{{j{c}}}c{}}{{{j{l{Kb{c}}}}e}{{Af{{Bd{Kd}}Bf}}}{{h{f}}}{{Bh{Kf}}}}{{}c{}}{{}{{C`{c}}}{}}{{{Kb{c}}Cb}{{Kb{c}}}{{h{f}}}}0{c{{Kb{c}}}{{h{f}}}}>{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}7{{ce}{{Kb{{Ch{ce}}}}}{{D`{{Cj{f}}}{{Cl{Cn}}}}{h{f}}}Db}{{cDd}{{Kb{c}}}{{h{f}}}}``{{{Kh{c}}d}{{Kh{c}}}Kj}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{l{Kh{c}}}}{Cj{e}}}gKj{DjDl}{}}{{{j{l}}{Cj{c}}}{}{}}{{{j{{Kh{c}}}}}{{Kh{c}}}Kj}{{j{j{lc}}}A`{}}{jA`}{{{j{{Kh{c}}}}{j{lAl}}}An{B`Kj}}{cc{}}{{{Dn{c}}}{{Kh{c}}}Kj}{{{j{c}}}c{}}{{{j{Kj}}{C`{Kf}}}{{Eh{{Ef{Ed}}}}}}{{}c{}}{{}{{En{c}}}{}}{{}{{C`{c}}}{}}{{{Kh{c}}Cb}{{Kh{c}}}Kj}0{c{{Kh{c}}}Kj}{{{j{l}}{j{lF`}}}{{Fb{{Af{A`}}}}}}{{{j{l{Kh{c}}}}{j{lF`}}}{{Fb{{Af{A`e}}}}}Kj{}}{{{Kh{c}}d}{{Kh{c}}}Kj}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf};{{ce}{{Ch{{Kh{c}}e}}}KjDb}````{{{Kl{c}}d}{{Kl{c}}}{{h{f}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Kl{c}}}}}{{Kl{c}}}n}{{j{j{lc}}}A`{}}{jA`}{c{{Af{{Kl{Ab}}Ad}}}{{Aj{Ah}}}}{{{j{{Kl{c}}}}{j{lAl}}}AnB`}{cc{}}{{{j{c}}}c{}}{{}c{}}{{}{{C`{c}}}{}}{{{Kl{c}}Cb}{{Kl{c}}}{{h{f}}}}0{c{{Kl{c}}}{{h{f}}}}={{{j{l{Kl{c}}}}e}{{Af{{Bd{{Bl{Kn}}}}Bf}}}{{h{f}}}{{Jl{}{{Jh{L`}}}}}}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}8{{ce}{{Kl{{Ch{ce}}}}}{{D`{{Cj{f}}}{{Cl{Cn}}}}{h{f}}}Db}{{cDd}{{Kl{c}}}{{h{f}}}}```{{{Lb{c}}d}{{Lb{c}}}Ld}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{l}}{Cj{c}}}{}{}}{{{j{l{Lb{c}}}}{Cj{e}}}gLd{DjDl}{}}{{{j{{Lb{c}}}}}{{Lb{c}}}Ld}{{j{j{lc}}}A`{}}{jA`}{{{j{{Lb{c}}}}{j{lAl}}}An{B`Ld}}{cc{}}{{{Dn{c}}}{{Lb{c}}}Ld}{{{j{c}}}c{}}{{}c{}}{{}{{En{c}}}{}}{{}{{C`{c}}}{}}{{{Lb{c}}Cb}{{Lb{c}}}Ld}0{c{{Lb{c}}}Ld}{{{j{l}}{j{lF`}}}{{Fb{{Af{A`}}}}}}{{{j{l{Lb{c}}}}{j{lF`}}}{{Fb{{Af{A`e}}}}}Ld{}}{{{Lb{c}}d}{{Lb{c}}}Ld}{{{j{{Ld{}{{Lf{c}}}}}}{C`{{Bl{L`}}}}}{{Eh{{Ef{Ed}}}}}{{El{}{{Ej{{Af{KnBf}}}}}}Dl}}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}<{{ce}{{Ch{{Lb{c}}e}}}LdDb}","D":"AGf","p":[[5,"LauncherClient",11],[6,"CompressionEncoding",498],[8,"BoxBody",499],[10,"GrpcService",500],[1,"reference"],[0,"mut"],[10,"Clone",501],[1,"unit"],[5,"Channel",502],[5,"Error",503],[6,"Result",504],[5,"Endpoint",505],[10,"TryInto",506],[5,"Formatter",507],[8,"Result",507],[10,"Debug",507],[5,"GetApplicationConfigResponse",508],[5,"Response",509],[5,"Status",510],[10,"IntoRequest",511],[5,"GetImageResponse",508],[5,"Streaming",512],[5,"Endorsements",513],[5,"Request",511],[1,"usize"],[5,"SendAttestationEvidenceRequest",508],[5,"TypeId",514],[5,"InterceptedService",515],[5,"Request",516],[17,"Response"],[5,"Response",517],[10,"Service",518],[10,"Interceptor",515],[5,"Uri",519],[5,"LauncherServer",41],[10,"Launcher",41],[10,"Body",520],[10,"Send",521],[5,"Arc",522],[17,"GetOakSystemImageStream"],[17,"GetContainerBundleStream"],[10,"Future",523],[5,"Box",524],[5,"Pin",525],[17,"Item"],[10,"Stream",526],[5,"IntoMakeService",527],[5,"Context",528],[6,"Poll",529],[5,"OrchestratorClient",78],[5,"EndorsedEvidence",530],[5,"OrchestratorServer",105],[10,"Orchestrator",105],[5,"HostlibKeyProvisioningClient",141],[5,"GetGroupKeysResponse",531],[5,"GetKeyProvisioningRoleResponse",531],[5,"HostlibKeyProvisioningServer",167],[10,"HostlibKeyProvisioning",167],[5,"OrchestratorCryptoClient",198],[5,"DeriveSessionKeysResponse",531],[5,"DeriveSessionKeysRequest",531],[5,"SignResponse",531],[5,"SignRequest",531],[5,"OrchestratorCryptoServer",224],[10,"OrchestratorCrypto",224],[5,"DebugServiceClient",257],[5,"CpuProfileResponse",532],[5,"CpuProfileRequest",532],[5,"DebugServiceServer",282],[10,"DebugService",282],[5,"OakFunctionsClient",314],[5,"AbortNextLookupDataResponse",533],[5,"Empty",533],[5,"ExtendNextLookupDataResponse",533],[5,"ExtendNextLookupDataRequest",533],[5,"FinishNextLookupDataResponse",533],[5,"FinishNextLookupDataRequest",533],[5,"InvokeResponse",533],[5,"InvokeRequest",533],[5,"InitializeResponse",533],[5,"InitializeRequest",533],[5,"ReserveResponse",533],[5,"ReserveRequest",533],[17,"Message"],[5,"LookupDataChunk",533],[10,"IntoStreamingRequest",511],[10,"OakFunctions",345],[5,"OakFunctionsServer",345],[5,"KeyProvisioningClient",384],[5,"GetGroupKeysResponse",534],[5,"GetGroupKeysRequest",534],[5,"KeyProvisioningServer",409],[10,"KeyProvisioning",409],[5,"StreamingSessionClient",442],[5,"ResponseWrapper",530],[5,"RequestWrapper",530],[5,"StreamingSessionServer",467],[10,"StreamingSession",467],[17,"StreamStream"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADcBYgAAAAYACwAAAA4ABAAUAAAAFgAAABwAAAAfAAAAIwAGAC8ABwA4AAEAPwABAEMAAABFAAEASQAFAFEABABXAAAAWQAAAF0AAABgAAAAYwAGAG0ABwB2AAEAewABAH8AAACBAAEAhAAFAJAABACWAAAAmAAAAJwAAACfAAAAoQAGAKsABwC0AAEAuQABAL0AAgDBAAUAyQAEANAAAADSAAAA1AAAANcAAADaAAYA5AAGAOwAAADuAAEA8QABAPUAAgD6AAUAAgEAAAQBBAAKAQEADQEAAA8BAAASAQAAFAEGABwBAAAeAQgAKAEBACsBAQAvAQIAMwEFADsBAAA+AQQARgEAAEgBAABMAQAATwEAAFMBBgBbAQAAXgEGAGcBAABpAQEAbgEBAHIBAgB4AQYAgwEEAIkBAACLAQAAjgEAAJEBAACTAQYAnQEHAKYBAQCqAQEArgECALIBBgC9AQQAwwEAAMUBAADHAQAAygEAAM0BBgDYAQcA4QEBAOQBAQDoAQIA7QEFAA=="}],["oak_grpc_utils",{"t":"FFNNNNOONNONNHNNNNNNNNN","n":["CodegenOptions","ExternPath","borrow","","borrow_mut","","build_client","build_server","default","","extern_paths","from","","generate_grpc_code","into","","new","try_from","","try_into","","type_id",""],"q":[[0,"oak_grpc_utils"],[23,"std::io::error"],[24,"std::path"],[25,"core::convert"],[26,"core::result"],[27,"core::any"]],"i":"``fh101110110`100101010","f":"``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0``{{}f}{{}h}`{cc{}}0{{{b{{j{c}}}}{b{{j{e}}}}f}{{n{l}}}{{Ab{A`}}}{{Ab{A`}}}}{{}c{}}0{{{b{Ad}}{b{Ad}}}h}{c{{Af{e}}}{}{}}0{{}{{Af{c}}}{}}0{bAh}0","D":"Ab","p":[[1,"reference"],[0,"mut"],[5,"CodegenOptions",0],[5,"ExternPath",0],[1,"slice"],[1,"unit"],[8,"Result",23],[5,"Path",24],[10,"AsRef",25],[1,"str"],[6,"Result",26],[5,"TypeId",27]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA4ABAAAAAAAAgAEAAkAAQARAAYA"}],["oak_launcher_utils",{"t":"CCFFNNNNNNNNNNNNNNNNNNNNKGFFPPONNONNNNNNNNNNNNNNMNNNNNNNNNNNONOONNNOMNHOONNNNNNNNNNNNNNNNOMN","n":["channel","launcher","Connector","ConnectorHandle","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","from","","into","","invoke","spawn","to_owned","try_from","","try_into","","type_id","","GuestInstance","InitialDataVersion","Instance","Params","V0","V1","app_binary","augment_args","augment_args_for_update","bios_binary","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","command","command_for_update","connect","","default","eq","","fmt","","from","","","from_arg_matches","from_arg_matches_mut","gdb","group_id","initial_data_version","initrd","into","","","kernel","kill","","launch","memory_size","pci_passthrough","start","to_owned","","to_possible_value","try_from","","","try_into","","","type_id","","","update_from_arg_matches","update_from_arg_matches_mut","value_variants","vmm_binary","wait",""],"q":[[0,"oak_launcher_utils"],[2,"oak_launcher_utils::channel"],[24,"oak_launcher_utils::launcher"],[92,"core::future::future"],[93,"alloc::boxed"],[94,"core::pin"],[95,"oak_channel"],[96,"core::result"],[97,"core::any"],[98,"clap_builder::builder::command"],[99,"core::fmt"],[100,"clap_builder::parser::matches::arg_matches"],[101,"clap_builder"],[102,"clap_builder::util::id"],[103,"core::option"],[104,"core::error"],[105,"anyhow"],[106,"std::os::unix::net::stream"],[107,"clap_builder::builder::possible_value"]],"i":"````Clf100001010010101010````Al0An000Bb2102121212111B`133232132222222132201`221323132132132223201","f":"````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{f}}}f}{{b{b{dc}}}h{}}{bh}{cc{}}0{{}c{}}0{{{b{df}}{b{{l{j}}}}}{{Ab{{A`{n}}}}}}{{{A`{Ad}}}f}{bc{}}{c{{Af{e}}}{}{}}0{{}{{Af{c}}}{}}0{bAh}0```````{AjAj}0`===<<<{{{b{Al}}}Al}{{{b{An}}}An}<<;;{{}Aj}0{{{b{B`}}}{{Ab{{A`{n}}}}}}{{{b{Bb}}}{{Ab{{A`{n}}}}}}{{}Al}{{{b{Al}}{b{Al}}}Bd}{{{b{An}}{b{An}}}Bd}{{{b{Al}}{b{dBf}}}Bh}{{{b{An}}{b{dBf}}}Bh}{cc{}}00{{{b{Bj}}}{{Af{AnBl}}}}{{{b{dBj}}}{{Af{AnBl}}}}`{{}{{C`{Bn}}}}``{{}c{}}00`{{{A`{B`}}}{{Ab{{A`{n}}}}}}{{{A`{Bb}}}{{Ab{{A`{n}}}}}}{An{{Cf{{Cb{{A`{B`}}f}}{A`{Cd}}}}}}``{{AnCh}{{Cf{Bb}}}}{bc{}}0{{{b{Al}}}{{C`{Cj}}}}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{bAh}00{{{b{dAn}}{b{Bj}}}{{Af{hBl}}}}{{{b{dAn}}{b{dBj}}}{{Af{hBl}}}}{{}{{b{{l{Al}}}}}}`{{{b{dB`}}}{{Ab{{A`{n}}}}}}{{{b{dBb}}}{{Ab{{A`{n}}}}}}","D":"Cl","p":[[1,"reference"],[0,"mut"],[5,"ConnectorHandle",2],[1,"unit"],[1,"u8"],[1,"slice"],[10,"Future",92],[5,"Box",93],[5,"Pin",94],[10,"Channel",95],[6,"Result",96],[5,"TypeId",97],[5,"Command",98],[6,"InitialDataVersion",24],[5,"Params",24],[10,"GuestInstance",24],[5,"Instance",24],[1,"bool"],[5,"Formatter",99],[8,"Result",99],[5,"ArgMatches",100],[8,"Error",101],[5,"Id",102],[6,"Option",103],[1,"tuple"],[10,"Error",104],[8,"Result",105],[5,"UnixStream",106],[5,"PossibleValue",107],[5,"Connector",2]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAD4ADgAAAAIABQAGABAAAAASAAYAGgAAAB0AAQAgAAEAIwANADIABQA7AAEAPgAAAEYAAABLAA4AXAAAAA=="}],["oak_linux_boot_params",{"t":"PFPFFTPFFSPPGPFPFPPFPTTTFPPFPPTPPFPFFGFFPTTTTTFOOOOOOOOOOOOOONONNOONNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNOOOOOONNNNOOOONOOOOOOOOOOOOOONNNNNNNOOOOOOOONNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNONNNNOOOOOOOOOOOOONOOONNNONNOOOOOOOOOOOOOOOOOONONNOOOOOONNOOOOOOOOOONNNNNOOOONOONNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNOOOOOOOOONON","n":["ACPI","APMBiosInfo","AppleProperties","BootE820Entry","BootParams","CAN_USE_HEAP","CCBlob","CCBlobSevInfo","CCSetupData","CC_BLOB_SEV_INFO_MAGIC","DISABLED","DTB","E820EntryType","E820Ext","EDIDInfo","EFI","EFIInfo","IMA","INVALID","ISTInfo","Jailhouse","KASLR_FLAG","KEEP_SEGMENTS","LOADED_HIGH","LoadFlags","NVS","None","OLPCOfwHeader","PCI","PMEM","QUIET_FLAG","RAM","RESERVED","Ramdisk","RngSeed","ScreenInfo","SetupData","SetupDataType","SetupHeader","SysDescTable","UNUSABLE","XLF_CAN_BE_LOADED_ABOVE_4G","XLF_EFI_HANDOVER_32","XLF_EFI_HANDOVER_64","XLF_EFI_KEXEC","XLF_KERNEL_64","XLoadFlags","_eddbuf","_pad2","_pad3","_pad4","_pad5","_pad6","_pad7","_pad8","_pad9","_reserved","","_rsvd1","_rsvd2","acpi_rsdp_addr","addr","","all","","alt_mem_k","apm_bios_info","append_e820_entry","args","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","blue_pos","blue_size","boot_flag","bootsect_kludge","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","capabilities","cc_blob_address","","cif_handler","cl_magic","cl_offset","clone","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","cmd_line_ptr","cmdline_size","code32_start","command","complement","","contains","","cpuid_len","cpuid_phys","cseg","cseg_16","cseg_16_len","cseg_len","default","delete_e820_entry","difference","","dseg","dseg_len","dummy","e820_entries","e820_table","","edd_mbr_sig_buf_entries","edd_mbr_sig_buffer","eddbuf_entries","edid_info","efi_info","efi_loader_signature","efi_memdesc_size","efi_memdesc_version","efi_memmap","efi_memmap_hi","efi_memmap_size","efi_systab","efi_systab_hi","empty","","end","entry_type","eq","","","event","ext_cmd_line_ptr","ext_lfb_base","ext_loader_type","ext_loader_ver","ext_mem_k","ext_ramdisk_image","ext_ramdisk_size","extend","","flags","","fmt","","","","","","","","","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","from_repr","","green_pos","green_size","handover_offset","hardware_subarch","hardware_subarch_data","hd0_info","hd1_info","hdr","header","","heap_end_ptr","init_size","initrd_addr_max","insert","","insert_e820_entry","intersection","","intersects","","into","","","","","","","","","","","","","","","","","","into_iter","","irq_desc_table","is_all","","is_empty","","ist_info","iter","","iter_names","","jump","kbd_status","kernel_alignment","kernel_info_offset","kernel_version","len","length","lfb_base","lfb_depth","lfb_height","lfb_linelength","lfb_size","lfb_width","load_flags","loadflags","magic","min_alignment","new","","","next","not","","offset","ofw_magic","ofw_version","olpc_ofw_header","orig_video_cols","orig_video_ega_bx","orig_video_is_vga","orig_video_lines","orig_video_mode","orig_video_page","orig_video_points","orig_x","orig_y","pages","payload_length","payload_offset","perf_level","pref_address","protocol","ram_size","ramdisk","","ramdisk_image","ramdisk_size","realmode_swtch","red_pos","red_size","relocatable_kernel","remove","","root_dev","root_flags","rsvd_pos","rsvd_size","scratch","screen_info","secrets_len","secrets_phys","secure_boot","sentinel","set","","set_addr","set_size","setup_data","","setup_move_size","setup_sects","signature","size","","start_sys_seg","sub","","sub_assign","","symmetric_difference","","sys_desc_table","syssize","table","tboot_addr","to_owned","","","","","","","","","","","","","","","to_string","","toggle","","try_from","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","type_","type_id","","","","","","","","","","","","","","","","","","type_of_loader","union","","unused2","unused3","version","","","vesa_attributes","vesapm_off","vesapm_seg","vid_mode","x_load_flags","xloadflags","zeroed"],"q":[[0,"oak_linux_boot_params"],[513,"core::ffi::c_str"],[514,"core::option"],[515,"core::iter::traits::collect"],[516,"core::fmt"],[517,"core::result"],[518,"bitflags::iter"],[519,"alloc::string"],[520,"core::any"]],"i":"Ah`Aj``h1```21`1`1`12`1000`21`12022`1`````2j0000`n00000000BbC`002bDl654444656565656655656533B`019768AlAn246BdBfBhBjBlBn=;9AhhjAj;:<>Bb:98765nC`2=192263>=?b3=<;:982174?>B`14>=<;:93285AlAn236BdBfBhBjBlBn;:8884?>?>::55559;?>550;;;;;;;;11111111?>99Ah>:5<=99=<<hj?82211110000Aj0;:<=Bb:98765nC`Dl7654?>B`b5?>=<;:438788778787879655111444An222298598983:987Al1327BdBfBhBjBlBn<;hj41010>1010;>;;;85??????;;=;9:=810744>??????????;;6;>;;>;;;??;10;;??>>==>>10::;;;;6:<;101010>;5>AhAj:;=<Bb:98765nC`4365Dl5764>?B`b5?>=<;:4327986AlAn327BdBfBhBjBlBn<;7:?hjAj:9<;Bb987654nC`?5422?;0222???1","f":"`````````````````````````````````````````````````````````````{{{d{b}}}f}`{{}h}{{}j}``{{{d{ln}}b}A`}{{{d{n}}}{{d{Ab}}}}{{hh}h}{{jj}j}{{{d{lh}}h}A`}{{{d{lj}}j}A`}3210{{{d{h}}}Ad}0{{{d{j}}}Af}05432````{d{{d{c}}}{}}00000000000000000{{{d{l}}}{{d{lc}}}{}}00000000000000000``````{{{d{Ah}}}Ah}{{{d{Aj}}}Aj}{{{d{Al}}}Al}{{{d{An}}}An}{{{d{B`}}}B`}{{{d{b}}}b}{{{d{Bb}}}Bb}{{{d{Bd}}}Bd}{{{d{Bf}}}Bf}{{{d{Bh}}}Bh}{{{d{Bj}}}Bj}{{{d{Bl}}}Bl}{{{d{Bn}}}Bn}{{{d{n}}}n}{{{d{C`}}}C`}{{d{d{lc}}}A`{}}00000000000000{dA`}00000000000000````{hh}{jj}{{{d{h}}h}Cb}{{{d{j}}j}Cb}``````{{}b}{{{d{ln}}Ad}A`}{{hh}h}{{jj}j}````{{{d{n}}}{{d{{Cd{b}}}}}}``````````````{{}h}{{}j}{{{d{b}}}f}{{{d{b}}}{{Cf{Ah}}}}{{{d{Ah}}{d{Ah}}}Cb}{{{d{Aj}}{d{Aj}}}Cb}{{{d{b}}{d{b}}}Cb}````````{{{d{lh}}c}A`{{Cj{}{{Ch{h}}}}}}{{{d{lj}}c}A`{{Cj{}{{Ch{j}}}}}}``{{{d{Ah}}{d{lCl}}}{{D`{A`Cn}}}}{{{d{Ah}}{d{lCl}}}Db}{{{d{h}}{d{lCl}}}Db}000{{{d{j}}{d{lCl}}}Db}000{{{d{Aj}}{d{lCl}}}Db}{{{d{Aj}}{d{lCl}}}{{D`{A`Cn}}}}{{{d{Al}}{d{lCl}}}Db}{{{d{An}}{d{lCl}}}Db}{{{d{B`}}{d{lCl}}}Db}{{{d{b}}{d{lCl}}}Db}{{{d{Bb}}{d{lCl}}}Db}{{{d{Bd}}{d{lCl}}}Db}{{{d{Bf}}{d{lCl}}}Db}{{{d{Bh}}{d{lCl}}}Db}{{{d{Bj}}{d{lCl}}}Db}{{{d{Bl}}{d{lCl}}}Db}{{{d{Bn}}{d{lCl}}}Db}{{{d{n}}{d{lCl}}}Db}{{{d{C`}}{d{lCl}}}Db}{cc{}}00000000000000000{Ad{{Cf{h}}}}{Af{{Cf{j}}}}{Adh}0{Afj}010{ch{{Cj{}{{Ch{h}}}}}}{cj{{Cj{}{{Ch{j}}}}}}{{{d{Dd}}}{{Cf{h}}}}{{{d{Dd}}}{{Cf{j}}}}{Df{{Cf{Ah}}}}{Df{{Cf{Aj}}}}`````````````{{{d{lh}}h}A`}{{{d{lj}}j}A`}{{{d{ln}}bAd}A`}{{hh}h}{{jj}j}{{{d{h}}h}Cb}{{{d{j}}j}Cb}{{}c{}}00000000000000000{hc{}}{jc{}}`{{{d{h}}}Cb}{{{d{j}}}Cb}10`{{{d{h}}}{{Dh{h}}}}{{{d{j}}}{{Dh{j}}}}{{{d{h}}}{{Dj{h}}}}{{{d{j}}}{{Dj{j}}}}`````````````{{{d{B`}}}{{Cf{h}}}}```{C`An}{{ffAh}b}{{}C`}`{hh}{jj}``````````````````{{{d{n}}}{{d{Dd}}}}`{{{d{B`}}}{{Cf{Dl}}}}{{{d{n}}}{{Cf{Dl}}}}``````{{{d{lh}}h}A`}{{{d{lj}}j}A`}``````````{{{d{lh}}hCb}A`}{{{d{lj}}jCb}A`}{{{d{lb}}f}A`}0{{{d{B`}}}Al}````{{{d{b}}}f}``{{hh}h}{{jj}j}8710````{dc{}}00000000000000{dDn}0:9{c{{D`{e}}}{}{}}00000000000000000{{}{{D`{c}}}{}}00000000000000000`{dE`}00000000000000000`65`````````{{{d{B`}}}{{Cf{j}}}}`{{}n}","D":"ADh","p":[[5,"BootE820Entry",0],[1,"reference"],[1,"usize"],[5,"LoadFlags",0],[5,"XLoadFlags",0],[0,"mut"],[5,"BootParams",0],[1,"unit"],[5,"CStr",513],[1,"u8"],[1,"u16"],[6,"E820EntryType",0],[6,"SetupDataType",0],[5,"SetupData",0],[5,"CCSetupData",0],[5,"SetupHeader",0],[5,"ScreenInfo",0],[5,"APMBiosInfo",0],[5,"ISTInfo",0],[5,"SysDescTable",0],[5,"OLPCOfwHeader",0],[5,"EFIInfo",0],[5,"EDIDInfo",0],[5,"CCBlobSevInfo",0],[1,"bool"],[1,"slice"],[6,"Option",514],[17,"Item"],[10,"IntoIterator",515],[5,"Formatter",516],[5,"Error",516],[6,"Result",517],[8,"Result",516],[1,"str"],[1,"u32"],[5,"Iter",518],[5,"IterNames",518],[5,"Ramdisk",0],[5,"String",519],[5,"TypeId",520]],"r":[],"b":[[77,"impl-LoadFlags"],[78,"impl-Flags-for-LoadFlags"],[79,"impl-Flags-for-XLoadFlags"],[80,"impl-XLoadFlags"],[232,"impl-Display-for-E820EntryType"],[233,"impl-Debug-for-E820EntryType"],[234,"impl-Binary-for-LoadFlags"],[235,"impl-UpperHex-for-LoadFlags"],[236,"impl-Octal-for-LoadFlags"],[237,"impl-LowerHex-for-LoadFlags"],[238,"impl-LowerHex-for-XLoadFlags"],[239,"impl-UpperHex-for-XLoadFlags"],[240,"impl-Octal-for-XLoadFlags"],[241,"impl-Binary-for-XLoadFlags"],[242,"impl-Debug-for-SetupDataType"],[243,"impl-Display-for-SetupDataType"],[277,"impl-LoadFlags"],[278,"impl-Flags-for-LoadFlags"],[279,"impl-Flags-for-XLoadFlags"],[280,"impl-XLoadFlags"]],"c":"OjAAAAEAAAAAAAgAEAAAABcAWQAnASgBfgGJAYoBngGlAQ==","e":"OzAAAAEAAF0BLgAAAAAAAgADAAcAAwAMAAAADgAEABQAAQAXAAAAGwACACIABAAoAAAAMAAPAEIAAwBPAAEAVgABAFoAVgC0AAAAuQAHAMMAEgDYAAcA4gACAOcAGgAXAQEAIgEBACcBAwAxAQAASAECAE8BAABVAQAAWQEIAGMBAABlAQMAawENAHsBAAB9AQAAfwEBAIQBAQCLAQcAlQECAJsBAgClAQAApwESALwBNgD2AQEA+QEEAP8BAAABAgAA"}],["oak_micro_rpc",{"t":"CCKFFFMNNNNNNNNNNNMNNMNNNNNMNNMNNNNNNNNNMNNMNNCNNNNNNNNNNCKFFFNNNNNNNNNMNNNNNNNNNMNNNNNNNNNNNNNNNCKFFFNNNNNNNNNNNNNNNNMNNMNNMNNNNNMNNMNNNNNNNNNNNNMNN","n":["oak","functions","OakFunctions","OakFunctionsAsyncClient","OakFunctionsClient","OakFunctionsServer","abort_next_lookup_data","","","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","extend_next_lookup_data","","","finish_next_lookup_data","","","from","","","handle_user_request","","","initialize","","","into","","","invoke","new","","","reserve","","","stream_lookup_data","","","testing","to_owned","try_from","","","try_into","","","type_id","","","wasm","TestModule","TestModuleAsyncClient","TestModuleClient","TestModuleServer","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","echo_and_panic","","","from","","","into","","","invoke","lookup","","","new","","","to_owned","try_from","","","try_into","","","type_id","","","v1","StdWasmApi","StdWasmApiAsyncClient","StdWasmApiClient","StdWasmApiServer","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","from","","","into","","","invoke","log","","","lookup_data","","","lookup_data_multi","","","new","","","read_request","","","test","","","to_owned","try_from","","","try_into","","","type_id","","","write_response","",""],"q":[[0,"oak_micro_rpc"],[1,"oak_micro_rpc::oak"],[2,"oak_micro_rpc::oak::functions"],[58,"oak_micro_rpc::oak::functions::testing"],[97,"oak_micro_rpc::oak::functions::wasm"],[98,"oak_micro_rpc::oak::functions::wasm::v1"],[149,"oak_proto_rust::oak::functions"],[150,"micro_rpc::status"],[151,"core::result"],[152,"micro_rpc"],[153,"core::clone"],[154,"alloc::vec"],[155,"core::any"],[156,"oak_proto_rust::oak::functions::testing"],[157,"oak_proto_rust::oak::functions::wasm::v1"]],"i":"``````bA`Ad10Ah2100003213212103213212100210321321`0210210210`````DfDhCn210000D`3232132110323211321321321`````EfEhDn2100002102100E`320320323210320321321321321032","f":"``````{{{d{b}}f}{{l{hj}}}}{{{d{n{A`{c}}}}{d{f}}}{{l{{l{hj}}}}}Ab}{{{d{n{Ad{c}}}}{d{f}}}{{l{{l{hj}}}}}Af}{d{{d{c}}}{}}00{{{d{n}}}{{d{nc}}}{}}00{{{d{{Ah{c}}}}}{{Ah{c}}}Aj}{{d{d{nc}}}Al{}}{dAl}{{{d{b}}An}{{l{B`j}}}}{{{d{n{A`{c}}}}{d{An}}}{{l{{l{B`j}}}}}Ab}{{{d{n{Ad{c}}}}{d{An}}}{{l{{l{B`j}}}}}Af}{{{d{b}}Bb}{{l{Bdj}}}}{{{d{n{A`{c}}}}{d{Bb}}}{{l{{l{Bdj}}}}}Ab}{{{d{n{Ad{c}}}}{d{Bb}}}{{l{{l{Bdj}}}}}Af}{cc{}}00{{{d{b}}Bf}{{l{Bhj}}}}{{{d{n{A`{c}}}}{d{Bf}}}{{l{{l{Bhj}}}}}Ab}{{{d{n{Ad{c}}}}{d{Bf}}}{{l{{l{Bhj}}}}}Af}{{{d{b}}Bj}{{l{Blj}}}}{{{d{n{A`{c}}}}{d{Bj}}}{{l{{l{Blj}}}}}Ab}{{{d{n{Ad{c}}}}{d{Bj}}}{{l{{l{Blj}}}}}Af}{{}c{}}00{{{d{n{Ah{c}}}}{d{{C`{Bn}}}}}{{l{{Cb{Bn}}Cd}}}b}{c{{A`{c}}}Ab}{c{{Ad{c}}}Af}{c{{Ah{c}}}b}{{{d{b}}Cf}{{l{Chj}}}}{{{d{n{A`{c}}}}{d{Cf}}}{{l{{l{Chj}}}}}Ab}{{{d{n{Ad{c}}}}{d{Cf}}}{{l{{l{Chj}}}}}Af}{{{d{b}}Cj}{{l{Bdj}}}}{{{d{n{A`{c}}}}{d{Cj}}}{{l{{l{Bdj}}}}}Ab}{{{d{n{Ad{c}}}}{d{Cj}}}{{l{{l{Bdj}}}}}Af}`{dc{}}{c{{l{e}}}{}{}}00{{}{{l{c}}}{}}00{dCl}00`````{d{{d{c}}}{}}00{{{d{n}}}{{d{nc}}}{}}00{{{d{{Cn{c}}}}}{{Cn{c}}}Aj}{{d{d{nc}}}Al{}}{dAl}{{{d{nD`}}Db}{{l{Ddj}}}}{{{d{n{Df{c}}}}{d{Db}}}{{l{{l{Ddj}}}}}Ab}{{{d{n{Dh{c}}}}{d{Db}}}{{l{{l{Ddj}}}}}Af}{cc{}}00{{}c{}}00{{{d{n{Cn{c}}}}{d{{C`{Bn}}}}}{{l{{Cb{Bn}}Cd}}}D`}{{{d{nD`}}Dj}{{l{Dlj}}}}{{{d{n{Df{c}}}}{d{Dj}}}{{l{{l{Dlj}}}}}Ab}{{{d{n{Dh{c}}}}{d{Dj}}}{{l{{l{Dlj}}}}}Af}{c{{Df{c}}}Ab}{c{{Dh{c}}}Af}{c{{Cn{c}}}D`}{dc{}}{c{{l{e}}}{}{}}00{{}{{l{c}}}{}}00{dCl}00`````{d{{d{c}}}{}}00{{{d{n}}}{{d{nc}}}{}}00{{{d{{Dn{c}}}}}{{Dn{c}}}Aj}{{d{d{nc}}}Al{}}{dAl}{cc{}}00{{}c{}}00{{{d{n{Dn{c}}}}{d{{C`{Bn}}}}}{{l{{Cb{Bn}}Cd}}}E`}{{{d{nE`}}Eb}{{l{Edj}}}}{{{d{n{Ef{c}}}}{d{Eb}}}{{l{{l{Edj}}}}}Ab}{{{d{n{Eh{c}}}}{d{Eb}}}{{l{{l{Edj}}}}}Af}{{{d{nE`}}Ej}{{l{Elj}}}}{{{d{n{Ef{c}}}}{d{Ej}}}{{l{{l{Elj}}}}}Ab}{{{d{n{Eh{c}}}}{d{Ej}}}{{l{{l{Elj}}}}}Af}{{{d{nE`}}En}{{l{F`j}}}}{{{d{n{Ef{c}}}}{d{En}}}{{l{{l{F`j}}}}}Ab}{{{d{n{Eh{c}}}}{d{En}}}{{l{{l{F`j}}}}}Af}{c{{Ef{c}}}Ab}{c{{Eh{c}}}Af}{c{{Dn{c}}}E`}{{{d{nE`}}Fb}{{l{Fdj}}}}{{{d{n{Ef{c}}}}{d{Fb}}}{{l{{l{Fdj}}}}}Ab}{{{d{n{Eh{c}}}}{d{Fb}}}{{l{{l{Fdj}}}}}Af}{{{d{nE`}}Ff}{{l{Fhj}}}}{{{d{n{Ef{c}}}}{d{Ff}}}{{l{{l{Fhj}}}}}Ab}{{{d{n{Eh{c}}}}{d{Ff}}}{{l{{l{Fhj}}}}}Af}{dc{}}{c{{l{e}}}{}{}}00{{}{{l{c}}}{}}00{dCl}00{{{d{nE`}}Fj}{{l{Flj}}}}{{{d{n{Ef{c}}}}{d{Fj}}}{{l{{l{Flj}}}}}Ab}{{{d{n{Eh{c}}}}{d{Fj}}}{{l{{l{Flj}}}}}Af}","D":"Bd","p":[[10,"OakFunctions",2],[1,"reference"],[5,"Empty",149],[5,"AbortNextLookupDataResponse",149],[5,"Status",150],[6,"Result",151],[0,"mut"],[5,"OakFunctionsClient",2],[10,"Transport",152],[5,"OakFunctionsAsyncClient",2],[10,"AsyncTransport",152],[5,"OakFunctionsServer",2],[10,"Clone",153],[1,"unit"],[5,"ExtendNextLookupDataRequest",149],[5,"ExtendNextLookupDataResponse",149],[5,"FinishNextLookupDataRequest",149],[5,"FinishNextLookupDataResponse",149],[5,"InvokeRequest",149],[5,"InvokeResponse",149],[5,"InitializeRequest",149],[5,"InitializeResponse",149],[1,"u8"],[1,"slice"],[5,"Vec",154],[1,"never"],[5,"ReserveRequest",149],[5,"ReserveResponse",149],[5,"LookupDataChunk",149],[5,"TypeId",155],[5,"TestModuleServer",58],[10,"TestModule",58],[5,"EchoAndPanicRequest",156],[5,"EchoAndPanicResponse",156],[5,"TestModuleClient",58],[5,"TestModuleAsyncClient",58],[5,"LookupRequest",156],[5,"LookupResponse",156],[5,"StdWasmApiServer",98],[10,"StdWasmApi",98],[5,"LogRequest",157],[5,"LogResponse",157],[5,"StdWasmApiClient",98],[5,"StdWasmApiAsyncClient",98],[5,"LookupDataRequest",157],[5,"LookupDataResponse",157],[5,"LookupDataMultiRequest",157],[5,"LookupDataMultiResponse",157],[5,"ReadRequestRequest",157],[5,"ReadRequestResponse",157],[5,"TestRequest",157],[5,"TestResponse",157],[5,"WriteResponseRequest",157],[5,"WriteResponseResponse",157]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIMABQAAABgAHAAFACUAJQBRAB4AdgAfAA=="}],["oak_proto_rust",{"t":"CCFFCNNNNNNNNNNNNCCCNNNNNNNNNNCNNCOOCCOOOOOOOOOOOOOOOONNNNNNNNCFFFPFFFFFFFFFFFFFFFFFFFFFFPFFFFFFFFFFFFFFFFFFFFFFFFPFFFFFFFFFFFFGFPFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGFFFPPFFFFFOOOOOOOOOOOOOOOOOONNCOOOOOOOOCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCOOOCOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOCCCOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOCOOOOOOOOOOOOOOOOOOOOOOONOOOOOOOOOOOOOOOOOONNONOOOOOCCOOOOOOOOOOOOOOOOOOOOOOOOCONNNNOOOOOOOOOOOONOOOOOOOOOOOOOOOOOOOOOCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOCOPGPPNNNNNNNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNNNNPGPPPNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNNPGPPNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNNNNPPPPGNNNNNNNNNNNNNNNNPGPNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNONNNONNNNNNNNNNNNONNNNNNNNNNNNNNNCFFPFFPPGGPFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNOOONNNOOONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCFFFFFONNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNONNNNNNNNNNONNNNNNNNFFFFFFFFFFFFFFCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOONNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCOFFNNNNNNNNNNNNOONNNNNNNNNNNNONNNNNNNNOFPGPPFFFCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNONONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNONOOONNONONNNNNNNNNNNNNNNNNNNNNCOGPPNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNONONONONONONONONONONONONONONNONONONONONNNPGPNNNNNNNNNNNNNNNNFNNNNNNNNNNNNONNNNOFFFFNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNOCNONNNNNNNNNNNNNNNNNOPPGNNNNNNNNNNNNNNNNNNNNNNCFFFFFFFFFFFFFOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCFFFNNNNNNNNNNNNNNNNNNNNNNNNOONNNONNNNNNONNNNNNNNNNNNNNNFONNNNNNNNONNNNNNNNCFFFFFFFFFFFFFFFFFFNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCOONNNNNNNNNNNNNNNNNNNOOOOOCOOCOCCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPNNNNNNNNNNNNNNNNGPNNNNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNNNNCFFFFFFFFONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNOOONNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNOOOOOOOOONNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNOO","n":["oak","perftools","HexDigest","RawDigest","attestation","borrow","","borrow_mut","","clear","","clone","","clone_into","","clone_to_uninit","","containers","crypto","debug","default","","encoded_len","","eq","","fmt","","from","","functions","into","","key_provisioning","psha2","","restricted_kernel","session","sha1","","sha2_256","","sha2_384","","sha2_512","","sha3_224","","sha3_256","","sha3_384","","sha3_512","","to_owned","","try_from","","try_into","","type_id","","v1","AmdAttestationReport","AmdSevExpectedValues","AmdSevReferenceValues","AmdSevSnp","AmdSevSnpEndorsement","ApplicationEndorsement","ApplicationKeys","ApplicationLayerData","ApplicationLayerEndorsements","ApplicationLayerExpectedValues","ApplicationLayerReferenceValues","AttestationResults","BinaryReferenceValue","CbData","CbEndorsements","CbExpectedValues","CbReferenceValues","CertificateAuthority","ClaimReferenceValue","ContainerEndorsement","ContainerLayerData","ContainerLayerEndorsements","ContainerLayerExpectedValues","ContainerLayerReferenceValues","DiceData","Digests","EcdsaP256Sha256","Endorsement","EndorsementDetails","EndorsementReferenceValue","Endorsements","Event","EventAttestationResults","EventData","EventEndorsement","EventEndorsements","EventExpectedValues","EventLog","EventReferenceValues","Evidence","ExpectedDigests","ExpectedRegex","ExpectedStringLiterals","ExpectedValues","ExtractedEvidence","FakeAttestationReport","FileReferenceValue","FirmwareAttachment","FirmwareEndorsement","InsecureExpectedValues","InsecureReferenceValues","IntelTdx","IntelTdxAttestationReport","IntelTdxExpectedValues","IntelTdxReferenceValues","KernelAttachment","KernelBinaryReferenceValue","KernelDigests","KernelEndorsement","KernelExpectedValues","KernelLayerData","KernelLayerEndorsements","KernelLayerExpectedValues","KernelLayerReferenceValues","KeyType","LayerEvidence","None","OakContainersData","OakContainersEndorsements","OakContainersExpectedValues","OakContainersReferenceValues","OakRestrictedKernelData","OakRestrictedKernelEndorsements","OakRestrictedKernelExpectedValues","OakRestrictedKernelReferenceValues","OakStandaloneData","OrchestratorMeasurements","RawDigests","ReferenceValues","Regex","RegexReferenceValue","RootLayerData","RootLayerEndorsements","RootLayerEvidence","RootLayerExpectedValues","RootLayerReferenceValues","Signature","SignedEndorsement","SkipVerification","Stage0Measurements","Stage1Measurements","StringLiterals","StringReferenceValue","SystemEndorsement","SystemLayerData","SystemLayerEndorsements","SystemLayerExpectedValues","SystemLayerReferenceValues","TcbVersion","TeePlatform","TextExpectedValue","TextReferenceValue","TransparentReleaseEndorsement","Undefined","Unspecified","Validity","VerificationSkipped","VerifyingKey","VerifyingKeyReferenceValue","VerifyingKeySet","acpi","","","","","acpi_digest","allow_debug","","amd_sev","","application_keys","application_layer","","","","","","","as_str_name","","attestation_results","binary","","","","","","","","binary_reference_value","boot_loader","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bundle","","certificate_authority","claim_types","clear","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","","config","","","","configs","configuration","","","","","","","container_image","container_layer","","","","current_tcb","debug","default","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","digests","","","eca_certificate","eca_private_key","eca_public_key","encoded_event_endorsements","encoded_events","encoded_len","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encryption_public_key","","encryption_public_key_certificate","endorsement","","","endorsement_signature","endorsements","endorser","endorser_public_key","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","event","","","","event_attestation_results","event_endorsement","event_endorsements","event_log","events","evidence","evidence_values","expected_digests","expected_values","extracted_evidence","","firmware","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","format","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_i32","","from_str_name","","group_encryption_public_key_certificate","group_signing_public_key_certificate","hardware_id","hash","","image","","","init_ram_fs","","","","","initial_measurement","insecure","","intel_tdx","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","is_valid","","kernel","","","","kernel_binary_reference_value","kernel_cmd_line","","","","kernel_cmd_line_regex","kernel_cmd_line_text","","kernel_cmdline","kernel_image","","","kernel_layer","","","","","","","","","","","kernel_measurement","kernel_raw_cmd_line","","kernel_setup_data","","key_id","","keys","layers","memory_map","","","","","memory_map_digest","microcode","min_tcb_version","","not_after","not_before","partial_cmp","","path","platform","","ram_disk_digest","raw","","reason","reference_values","regex_reference_value","rekor","rekor_log_entry","","rekor_public_key","remote_attestation_report","report","report_data","","","reported_tcb","required_claims","root_layer","","","","","","","","","","","","","root_layer_data","serialized","set_format","set_platform","set_status","set_type","setup_data","","","setup_data_digest","signature","signing_public_key","","signing_public_key_certificate","snp","stage0","","stage0_expected","status","","subject","","subject_digest","system_image","","","","","","system_layer","","","","","","","tag","tee","tee_certificate","","text_expected_value","text_reference_value","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type","","","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_url","validity","","value","","","","values","verifying_key_reference_value","vmpl","GenericFailure","Status","Success","Unspecified","as_str_name","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","default","eq","fmt","from","from_i32","from_str_name","hash","into","is_valid","partial_cmp","to_owned","try_from","","try_into","type_id","Digests","Endorsement","Skip","Type","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","EndorsementFormatJsonIntoto","EndorsementFormatUndefined","Format","as_str_name","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","default","eq","fmt","from","from_i32","from_str_name","hash","into","is_valid","partial_cmp","to_owned","try_from","","try_into","type_id","Cb","OakContainers","OakRestrictedKernel","Type","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Digests","Skipped","Type","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Cb","OakContainers","OakRestrictedKernel","Type","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Cb","EvidenceValues","OakContainers","OakRestrictedKernel","Standalone","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Digests","Endorsement","Skip","Type","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Cb","OakContainers","OakRestrictedKernel","Type","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Regex","Skip","Type","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Fake","Report","SevSnp","Tdx","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Regex","Skipped","StringLiterals","Type","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Endorsement","Regex","Skip","StringLiterals","Type","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Skip","Type","Verify","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","GetApplicationConfigResponse","GetImageResponse","SendAttestationEvidenceRequest","borrow","","","borrow_mut","","","clear","","","clone","","","clone_into","","","clone_to_uninit","","","config","default","","","dice_evidence","encoded_len","","","eq","","","fmt","","","from","","","image_chunk","into","","","to_owned","","","try_from","","","try_into","","","type_id","","","v1","DeriveSessionKeysRequest","DeriveSessionKeysResponse","Follower","GetGroupKeysResponse","GetKeyProvisioningRoleResponse","Group","Instance","KeyOrigin","KeyProvisioningRole","Leader","SignRequest","SignResponse","Unspecified","","as_str_name","","borrow","","","","","","","","borrow_mut","","","","","","","","clear","","","","","","clone","","","","","","","","clone_into","","","","","","","","clone_to_uninit","","","","","","","","cmp","","default","","","","","","","","encoded_len","","","","","","eq","","","","","","","","fmt","","","","","","","","from","","","","","","","","from_i32","","from_str_name","","group_keys","hash","","into","","","","","","","","is_valid","","key_origin","","","","message","partial_cmp","","role","","serialized_encapsulated_public_key","session_keys","set_key_origin","","set_role","signature","to_owned","","","","","","","","try_from","","","","","","","","","","try_into","","","","","","","","type_id","","","","","","","","v1","AeadEncryptedMessage","EncryptedRequest","EncryptedResponse","SessionKeys","Signature","associated_data","borrow","","","","","borrow_mut","","","","","ciphertext","clear","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","default","","","","","encoded_len","","","","","encrypted_message","","eq","","","","","fmt","","","","","from","","","","","into","","","","","nonce","request_key","response_key","serialized_encapsulated_public_key","","signature","to_owned","","","","","try_from","","","","","try_into","","","","","type_id","","","","","CpuProfileRequest","CpuProfileResponse","borrow","","borrow_mut","","clear","","clone","","clone_into","","clone_to_uninit","","default","","duration","encoded_len","","eq","","fmt","","from","","into","","profile","to_owned","","try_from","","try_into","","type_id","","AbortNextLookupDataResponse","Empty","ExtendNextLookupDataRequest","ExtendNextLookupDataResponse","FinishNextLookupDataRequest","FinishNextLookupDataResponse","InitializeRequest","InitializeResponse","InvokeRequest","InvokeResponse","LookupDataChunk","LookupDataEntry","ReserveRequest","ReserveResponse","abi","additional_entries","borrow","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","clear","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","config","constant_response_size","data","default","","","","","","","","","","","","","","encoded_len","","","","","","","","","","","","","","encrypted_request","encrypted_response","eq","","","","","","","","","","","","","","evidence","extend_next_lookup_data_request","fmt","","","","","","","","","","","","","","from","","","","","","","","","","","","","","into","","","","","","","","","","","","","","items","key","lookup_data","testing","to_owned","","","","","","","","","","","","","","try_from","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","value","wasm","wasm_module","ConfigurationReport","ServerPolicy","borrow","","borrow_mut","","clear","","clone","","clone_into","","clone_to_uninit","","constant_processing_time_ms","constant_response_size_bytes","default","","encoded_len","","eq","","fmt","","from","","into","","policy","to_owned","","try_from","","try_into","","type_id","","wasm_hash","ApplicationConfig","HandlerNative","HandlerType","HandlerUnspecified","HandlerWasm","TcpCommunicationChannel","VsockCommunicationChannel","WasmtimeConfig","application_config","as_str_name","borrow","","","","","borrow_mut","","","","","clear","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","cmp","communication_channel","default","","","","","dynamic_memory_guard_size","","dynamic_memory_reserved_for_growth","","encoded_len","","","","eq","","","","","fmt","","","","","from","","","","","from_i32","from_str_name","handler_type","","hash","into","","","","","is_valid","memory_init_cow","","partial_cmp","pooling_strategy","port","","set_handler_type","static_memory_guard_size","","static_memory_maximum_size","","to_owned","","","","","try_from","","","","","","try_into","","","","","type_id","","","","","wasmtime_config","","CommunicationChannel","TcpChannel","VsockChannel","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","PoolingAllocationConfig","borrow","borrow_mut","clear","clone","clone_into","clone_to_uninit","default","encoded_len","eq","fmt","from","into","linear_memory_keep_resident","","max_component_instance_size","","max_core_instance_size","","max_core_instances_per_component","","max_memories_per_component","","max_memories_per_module","","max_memory_protection_keys","","max_tables_per_component","","max_tables_per_module","","max_unused_warm_slots","","memory_pages","","memory_protection_keys","","table_elements","","table_keep_resident","","to_owned","total_component_instances","","total_core_instances","","total_memories","","total_stacks","","total_tables","","try_from","try_into","type_id","Chunk","Data","LengthDelimitedEntries","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Entry","borrow","borrow_mut","clear","clone","clone_into","clone_to_uninit","default","encoded_len","eq","fmt","from","into","key","to_owned","try_from","try_into","type_id","value","EchoAndPanicRequest","EchoAndPanicResponse","LookupRequest","LookupResponse","borrow","","","","borrow_mut","","","","clear","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","data","","default","","","","encoded_len","","","","eq","","","","fmt","","","","from","","","","into","","","","keys","lookup_request","mode","","set_mode","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","values","Batch","Individual","Mode","as_str_name","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","default","eq","fmt","from","from_i32","from_str_name","hash","into","is_valid","partial_cmp","to_owned","try_from","","try_into","type_id","v1","BytesValue","LogRequest","LogResponse","LookupDataMultiRequest","LookupDataMultiResponse","LookupDataRequest","LookupDataResponse","ReadRequestRequest","ReadRequestResponse","TestRequest","TestResponse","WriteResponseRequest","WriteResponseResponse","body","","","","borrow","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","clear","","","","","","","","","","","","","clone","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","default","","","","","","","","","","","","","echo","encoded_len","","","","","","","","","","","","","eq","","","","","","","","","","","","","fmt","","","","","","","","","","","","","found","from","","","","","","","","","","","","","into","","","","","","","","","","","","","key","keys","message","to_owned","","","","","","","","","","","","","try_from","","","","","","","","","","","","","try_into","","","","","","","","","","","","","type_id","","","","","","","","","","","","","value","","values","v1","GetGroupKeysRequest","GetGroupKeysResponse","GroupKeys","borrow","","","borrow_mut","","","clear","","","clone","","","clone_into","","","clone_to_uninit","","","default","","","encoded_len","","","encrypted_encryption_private_key","endorsements","eq","","","evidence","fmt","","","from","","","group_keys","into","","","to_owned","","","try_from","","","try_into","","","type_id","","","InitialData","application_bytes","borrow","borrow_mut","clear","clone","clone_into","clone_to_uninit","default","encoded_len","endorsement_bytes","eq","fmt","from","into","to_owned","try_from","try_into","type_id","v1","AttestRequest","AttestResponse","EncryptedMessage","EndorsedEvidence","GetEndorsedEvidenceRequest","GetEndorsedEvidenceResponse","HandshakeRequest","HandshakeResponse","InvokeRequest","InvokeResponse","NoiseHandshakeMessage","PlaintextMessage","RequestWrapper","ResponseWrapper","SessionBinding","SessionRequest","SessionRequestWithSessionId","SessionResponse","associated_data","","attestation_bindings","","binding","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","ciphertext","","clear","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","default","","","","","","","","","","","","","","","","","","encoded_len","","","","","","","","","","","","","","","","","","encrypted_request","encrypted_response","endorsed_evidence","","","endorsements","ephemeral_public_key","eq","","","","","","","","","","","","","","","","","","evidence","fmt","","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","handshake_request","handshake_response","handshake_type","","into","","","","","","","","","","","","","","","","","","nonce","","plaintext","request","","","request_wrapper","response","","response_wrapper","session_id","session_request","session_response","static_public_key","to_owned","","","","","","","","","","","","","","","","","","try_from","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","HandshakeType","NoiseHandshakeMessage","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","HandshakeType","NoiseHandshakeMessage","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","GetEndorsedEvidenceRequest","InvokeRequest","Request","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","GetEndorsedEvidenceResponse","InvokeResponse","Response","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","AttestRequest","EncryptedMessage","HandshakeRequest","Request","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","AttestResponse","EncryptedMessage","HandshakeResponse","Response","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","profiles","Function","Label","Line","Location","Mapping","Profile","Sample","ValueType","address","borrow","","","","","","","","borrow_mut","","","","","","","","build_id","clear","","","","","","","","clone","","","","","","","","clone_into","","","","","","","","clone_to_uninit","","","","","","","","comment","default","","","","","","","","default_sample_type","drop_frames","duration_nanos","encoded_len","","","","","","","","eq","","","","","","","","file_offset","filename","","fmt","","","","","","","","from","","","","","","","","function","function_id","has_filenames","has_functions","has_inline_frames","has_line_numbers","id","","","into","","","","","","","","is_folded","keep_frames","key","label","line","","location","location_id","mapping","mapping_id","memory_limit","memory_start","name","num","num_unit","period","period_type","sample","sample_type","start_line","str","string_table","system_name","time_nanos","to_owned","","","","","","","","try_from","","","","","","","","try_into","","","","","","","","ty","type_id","","","","","","","","unit","value"],"q":[[0,"oak_proto_rust"],[2,"oak_proto_rust::oak"],[62,"oak_proto_rust::oak::attestation"],[63,"oak_proto_rust::oak::attestation::v1"],[2097,"oak_proto_rust::oak::attestation::v1::attestation_results"],[2123,"oak_proto_rust::oak::attestation::v1::binary_reference_value"],[2143,"oak_proto_rust::oak::attestation::v1::endorsement"],[2168,"oak_proto_rust::oak::attestation::v1::endorsements"],[2188,"oak_proto_rust::oak::attestation::v1::expected_digests"],[2207,"oak_proto_rust::oak::attestation::v1::expected_values"],[2227,"oak_proto_rust::oak::attestation::v1::extracted_evidence"],[2248,"oak_proto_rust::oak::attestation::v1::kernel_binary_reference_value"],[2268,"oak_proto_rust::oak::attestation::v1::reference_values"],[2288,"oak_proto_rust::oak::attestation::v1::regex_reference_value"],[2307,"oak_proto_rust::oak::attestation::v1::root_layer_data"],[2327,"oak_proto_rust::oak::attestation::v1::text_expected_value"],[2347,"oak_proto_rust::oak::attestation::v1::text_reference_value"],[2368,"oak_proto_rust::oak::attestation::v1::verifying_key_reference_value"],[2387,"oak_proto_rust::oak::containers"],[2442,"oak_proto_rust::oak::containers::v1"],[2610,"oak_proto_rust::oak::crypto"],[2611,"oak_proto_rust::oak::crypto::v1"],[2706,"oak_proto_rust::oak::debug"],[2742,"oak_proto_rust::oak::functions"],[2996,"oak_proto_rust::oak::functions::abi"],[3034,"oak_proto_rust::oak::functions::config"],[3148,"oak_proto_rust::oak::functions::config::application_config"],[3167,"oak_proto_rust::oak::functions::config::wasmtime_config"],[3222,"oak_proto_rust::oak::functions::extend_next_lookup_data_request"],[3241,"oak_proto_rust::oak::functions::lookup_data"],[3260,"oak_proto_rust::oak::functions::testing"],[3336,"oak_proto_rust::oak::functions::testing::lookup_request"],[3361,"oak_proto_rust::oak::functions::wasm"],[3362,"oak_proto_rust::oak::functions::wasm::v1"],[3595,"oak_proto_rust::oak::key_provisioning"],[3596,"oak_proto_rust::oak::key_provisioning::v1"],[3651,"oak_proto_rust::oak::restricted_kernel"],[3670,"oak_proto_rust::oak::session"],[3671,"oak_proto_rust::oak::session::v1"],[4010,"oak_proto_rust::oak::session::v1::handshake_request"],[4028,"oak_proto_rust::oak::session::v1::handshake_response"],[4046,"oak_proto_rust::oak::session::v1::request_wrapper"],[4065,"oak_proto_rust::oak::session::v1::response_wrapper"],[4084,"oak_proto_rust::oak::session::v1::session_request"],[4104,"oak_proto_rust::oak::session::v1::session_response"],[4124,"oak_proto_rust::perftools"],[4125,"oak_proto_rust::perftools::profiles"],[4306,"core::fmt"],[4307,"core::result"],[4308,"core::any"],[4309,"core::cmp"],[4310,"core::option"],[4311,"core::hash"],[4312,"prost::error"],[4313,"alloc::string"],[4314,"bytes::buf::buf_mut"],[4315,"prost::encoding"],[4316,"bytes::buf::buf_impl"]],"i":"`````fj1010101010```1010101010`10`10``101010101010101010101010````Ah``````````````````````Al````````````````````````1``````````````1````````````````````````````````````01`````FfHbIdK`MhBbEnLjElMfCfG`GdHjKjKnNbNfAhAl`FjFlHfHhIhIjKbMn`ClAnB`BbBdBfBhBjBlBnC`CbCdCfAhChCjClCnD`DbDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfAlGhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdNfNhAnB`BbBdBfBhBjBlBnC`CbCdCfAhChCjClCnD`DbDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfAlGhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdNfNhKf7CjDfAnB`BbBdBfBhBjBlBnC`CbCdCfCh?ClCnD`DbDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdNfNhAnB`BbBdBfBhBjBlBnC`CbCdCfAhChCjClCnD`DbDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfAlGhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdNfNhAnB`BbBdBfBhBjBlBnC`CbCdCfAhChCjClCnD`DbDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfAlGhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdNfNhAnB`BbBdBfBhBjBlBnC`CbCdCfAhChCjClCnD`DbDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfAlGhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdNfNhAhAlBfKbKf;AnFjFlHfHhIhIjMn:GbHlKlNdJj0<B`BbBdBfBhBjBlBnC`CbCdCfAhChCjClCnD`DbDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfAlGhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdNfNhE`FdLdCbChC`BnBjAnB`BbBdBfBh6Bl89;CdCf<CjClCnD`DbDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdNfNhInJfCd`GlGn0`Dh0AnB`BbBdBfBhBjBlBnC`Cb>CfAhChCjClCnD`DbDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfAlGhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdNfNhBhFnKh7InBlIlCfBjCjJf```6IbAnB`BbBdBf?8;BnC`CbCd=AhCh=ClCnD`DbDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfAlGhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdNfNhGh0AnB`BbBdBfBhBjBlBnC`CbCdCfAhChCjClCnD`DbDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfAlGhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdNfNhAhAl10Cd0Jj32B`DlLhFfHbIdK`Mh8ElMf10An:BbBdBfBhBjBlBnC`CbCdCfAhChCjClCnD`DbDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfAlGhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdNfNhAhAlFfHbId=`210K`33>Bb431G`GbGdHjHlKjKlKnNbNdNf;<<?<D`GjDbCfFfHbIdK`MhBbClEnLjJb0AhAlE`C`08D`GjIn``DhGlGn26JhJjJlJn26CfG`GbGdHjHlHnKjKlKnNbNdNf`Gh0C`InD`B`DlLhBbGl6JfCdClEnH`Lj<<>GnJdBdFhHdIfKdMjGbGdHlKlKnNdNfBhClH`I```AnB`BbBdBf8BjBlBnC`CbCdCfAhChCjClCnD`DbDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfAlGhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdNfNhAnB`BbBdBfBhBjBlBnC`CbCdCfAh0ChCjClCnD`DbDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfAl0GhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdNfNhAnB`BbBdBfBhBjBlBnC`CbCdCfAhChCjClCnD`DbDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfAlGhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdNfNhD`0DdDjDnEhEjGfIlLfMd:AnB`BbBdBfBhBjBlBnC`CbCdCfAhChCjClCnD`DbDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfAlGhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfIhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdNfNhBbJdLdEdEfM`MbEb`JjOd`000000000000000000000000Oj00`0000000000000000Nl0`0000000000000000000000A@f00`0000000000000000A@h0`0000000000000000A@j00`0000000000000000A@l`0000000000000000000A@n00`0000000000000000AA`00`0000000000000000AAb0`0000000000000000AAd`000000000000000000AAf00`0000000000000000AAh000`0000000000000000AAj`00000000000000000```AAlAAnAB`210210210210210121002102102102102210210210210210```ABb``ABd0``1``1010ABfABh3ABjABlABnAC`6547321065432105473210654732106547321067654732106543210547321065473210654732106767647654732106763131176553231505473210654773210665473210654732106``````ACfACbACd2AChACj324104324103241032410324103241032410323241032410324103241041133032410324103241032410``AD`ADb10101010101011010101010010101010```````````````AElADdADfADhADjADlADnAE`AEbAEdAEfAEhAEj<AEn<;:987654321=0<;:987654321=0<;:987654321=0<;:987654321=0<;:987654321=0`<6<;:987654321=0<;:987654321=0:9<;:987654321=0;`<;:987654321=0<;:987654321=0<;:987654321=078``<;:987654321=0<;:987654321=0<;:987654321=0<;:987654321=08`<``AF`AFb1010101010001010101010101101010101`AFd`00````0AFfAFhAFjAFl43210432103210432104321044032104111132103210432104321044400432104411413201111321043210443210432104`0`AG`00000000000000000`AGb00000000000000000000000000000000000000000000000000000AGd`00000000000000000`AGf00000000000000000````AGhAGjAGlAGn32103210321032103210103210321032103210321032103`33332103210321032102AH`0`0000000000000000000000``````````````AHdAHfAIfAIhAHb43AHhAHjAHlAHnAI`AIbAId98AIj8<;7654321:908<;7654321:908<;7654321:908<;7654321:908<;7654321:908<;7654321:90:8<;7654321:908<;7654321:908<;7654321:9008<;7654321:908<;7654321:904268<;7654321:908<;7654321:908<;7654321:908<;7654321:90301````AIlAInAJ`2102102102102102102102121012102100210210210210210`AJb00000000000000000```````````````````AJd0AKlAKnAKjAJfAJhAJjAJlAJnAK`AKbAKdAKfAKh:<;=AL`ALbALdALf=<;:987654>AKlAKnAJd654370AJfAJhAJjAJlAJnAK`AKbAKdAKfAKhAKj=<;AL`ALbALdALf>=<;:987654AKlAKnAJd6543AJfAJhAJjAJlAJnAK`AKbAKdAKfAKhAKj=<;AL`ALbALdALf>=<;:987654AKlAKnAJd6543AJfAJhAJjAJlAJnAK`AKbAKdAKfAKhAKj=<;AL`ALbALdALf>=<;:987654AKlAKnAJd6543>=?:9AJf90AJhAJjAJlAJnAK`AKbAKdAKfAKhAKj=<;AL`ALbALdALf>>=<;:987654AKlAKnAJd6543AJfAJhAJjAJlAJnAK`AKbAKdAKfAKhAKj=<;AL`ALbALdALf``AKlAKnAJfAJhAJjAJlAJnAK`AKbAKdAKfAKhAKj<;AJdAL`ALbALdALf443:21`90`1``6?>=<;:98765AKlAKn65432AJfAJhAJjAJlAJnAK`AKbAKdAKfAKhAKj<;AJdAL`ALbALdALf?>=<;:98765AKlAKn65432AJfAJhAJjAJlAJnAK`AKbAKdAKfAKhAKj<;AJdAL`ALbALdALf`ALh0000000000000000`ALj0000000000000000ALl0`0000000000000000ALn0`0000000000000000AM`00`0000000000000000AMb00`0000000000000000`````````AMnAMdAMfAMhAMjAMl5AN`ANb65432710265432710654327106543271065432710665432710666654327106543271022065432710654327106122222706543271076347164672203366660360665432710654327106543271056543271054","f":"`````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{df}}}h}{{{b{dj}}}h}{{{b{f}}}f}{{{b{j}}}j}{{b{b{dc}}}h{}}0{bh}0```{{}f}{{}j}{{{b{f}}}l}{{{b{j}}}l}{{{b{f}}{b{f}}}n}{{{b{j}}{b{j}}}n}{{{b{f}}{b{dA`}}}Ab}{{{b{j}}{b{dA`}}}Ab}{cc{}}0`{{}c{}}0`````````````````````{bc{}}0{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{bAf}0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{Ah}}}{{b{Aj}}}}{{{b{Al}}}{{b{Aj}}}}```````````{b{{b{c}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{b{d}}}{{b{dc}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{b{dAn}}}h}{{{b{dB`}}}h}{{{b{dBb}}}h}{{{b{dBd}}}h}{{{b{dBf}}}h}{{{b{dBh}}}h}{{{b{dBj}}}h}{{{b{dBl}}}h}{{{b{dBn}}}h}{{{b{dC`}}}h}{{{b{dCb}}}h}{{{b{dCd}}}h}{{{b{dCf}}}h}{{{b{dCh}}}h}{{{b{dCj}}}h}{{{b{dCl}}}h}{{{b{dCn}}}h}{{{b{dD`}}}h}{{{b{dDb}}}h}{{{b{dDd}}}h}{{{b{dDf}}}h}{{{b{dDh}}}h}{{{b{dDj}}}h}{{{b{dDl}}}h}{{{b{dDn}}}h}{{{b{dE`}}}h}{{{b{dEb}}}h}{{{b{dEd}}}h}{{{b{dEf}}}h}{{{b{dEh}}}h}{{{b{dEj}}}h}{{{b{dEl}}}h}{{{b{dEn}}}h}{{{b{dF`}}}h}{{{b{dFb}}}h}{{{b{dFd}}}h}{{{b{dFf}}}h}{{{b{dFh}}}h}{{{b{dFj}}}h}{{{b{dFl}}}h}{{{b{dFn}}}h}{{{b{dG`}}}h}{{{b{dGb}}}h}{{{b{dGd}}}h}{{{b{dGf}}}h}{{{b{dGh}}}h}{{{b{dGj}}}h}{{{b{dGl}}}h}{{{b{dGn}}}h}{{{b{dH`}}}h}{{{b{dHb}}}h}{{{b{dHd}}}h}{{{b{dHf}}}h}{{{b{dHh}}}h}{{{b{dHj}}}h}{{{b{dHl}}}h}{{{b{dHn}}}h}{{{b{dI`}}}h}{{{b{dIb}}}h}{{{b{dId}}}h}{{{b{dIf}}}h}{{{b{dIh}}}h}{{{b{dIj}}}h}{{{b{dIl}}}h}{{{b{dIn}}}h}{{{b{dJ`}}}h}{{{b{dJb}}}h}{{{b{dJd}}}h}{{{b{dJf}}}h}{{{b{dJh}}}h}{{{b{dJj}}}h}{{{b{dJl}}}h}{{{b{dJn}}}h}{{{b{dK`}}}h}{{{b{dKb}}}h}{{{b{dKd}}}h}{{{b{dKf}}}h}{{{b{dKh}}}h}{{{b{dKj}}}h}{{{b{dKl}}}h}{{{b{dKn}}}h}{{{b{dL`}}}h}{{{b{dLb}}}h}{{{b{dLd}}}h}{{{b{dLf}}}h}{{{b{dLh}}}h}{{{b{dLj}}}h}{{{b{dLl}}}h}{{{b{dLn}}}h}{{{b{dM`}}}h}{{{b{dMb}}}h}{{{b{dMd}}}h}{{{b{dMf}}}h}{{{b{dMh}}}h}{{{b{dMj}}}h}{{{b{dMl}}}h}{{{b{dMn}}}h}{{{b{dN`}}}h}{{{b{dNb}}}h}{{{b{dNd}}}h}{{{b{dNf}}}h}{{{b{dNh}}}h}{{{b{An}}}An}{{{b{B`}}}B`}{{{b{Bb}}}Bb}{{{b{Bd}}}Bd}{{{b{Bf}}}Bf}{{{b{Bh}}}Bh}{{{b{Bj}}}Bj}{{{b{Bl}}}Bl}{{{b{Bn}}}Bn}{{{b{C`}}}C`}{{{b{Cb}}}Cb}{{{b{Cd}}}Cd}{{{b{Cf}}}Cf}{{{b{Ah}}}Ah}{{{b{Ch}}}Ch}{{{b{Cj}}}Cj}{{{b{Cl}}}Cl}{{{b{Cn}}}Cn}{{{b{D`}}}D`}{{{b{Db}}}Db}{{{b{Dd}}}Dd}{{{b{Df}}}Df}{{{b{Dh}}}Dh}{{{b{Dj}}}Dj}{{{b{Dl}}}Dl}{{{b{Dn}}}Dn}{{{b{E`}}}E`}{{{b{Eb}}}Eb}{{{b{Ed}}}Ed}{{{b{Ef}}}Ef}{{{b{Eh}}}Eh}{{{b{Ej}}}Ej}{{{b{El}}}El}{{{b{En}}}En}{{{b{F`}}}F`}{{{b{Fb}}}Fb}{{{b{Fd}}}Fd}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Al}}}Al}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{Hn}}}Hn}{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{{b{Il}}}Il}{{{b{In}}}In}{{{b{J`}}}J`}{{{b{Jb}}}Jb}{{{b{Jd}}}Jd}{{{b{Jf}}}Jf}{{{b{Jh}}}Jh}{{{b{Jj}}}Jj}{{{b{Jl}}}Jl}{{{b{Jn}}}Jn}{{{b{K`}}}K`}{{{b{Kb}}}Kb}{{{b{Kd}}}Kd}{{{b{Kf}}}Kf}{{{b{Kh}}}Kh}{{{b{Kj}}}Kj}{{{b{Kl}}}Kl}{{{b{Kn}}}Kn}{{{b{L`}}}L`}{{{b{Lb}}}Lb}{{{b{Ld}}}Ld}{{{b{Lf}}}Lf}{{{b{Lh}}}Lh}{{{b{Lj}}}Lj}{{{b{Ll}}}Ll}{{{b{Ln}}}Ln}{{{b{M`}}}M`}{{{b{Mb}}}Mb}{{{b{Md}}}Md}{{{b{Mf}}}Mf}{{{b{Mh}}}Mh}{{{b{Mj}}}Mj}{{{b{Ml}}}Ml}{{{b{Mn}}}Mn}{{{b{N`}}}N`}{{{b{Nb}}}Nb}{{{b{Nd}}}Nd}{{{b{Nf}}}Nf}{{{b{Nh}}}Nh}{{b{b{dc}}}h{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{bh}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{b{Ah}}{b{Ah}}}Nj}{{{b{Al}}{b{Al}}}Nj}```````````````````{{}An}{{}B`}{{}Bb}{{}Bd}{{}Bf}{{}Bh}{{}Bj}{{}Bl}{{}Bn}{{}C`}{{}Cb}{{}Cd}{{}Cf}{{}Ah}{{}Ch}{{}Cj}{{}Cl}{{}Cn}{{}D`}{{}Db}{{}Dd}{{}Df}{{}Dh}{{}Dj}{{}Dl}{{}Dn}{{}E`}{{}Eb}{{}Ed}{{}Ef}{{}Eh}{{}Ej}{{}El}{{}En}{{}F`}{{}Fb}{{}Fd}{{}Ff}{{}Fh}{{}Fj}{{}Fl}{{}Fn}{{}G`}{{}Gb}{{}Gd}{{}Gf}{{}Al}{{}Gh}{{}Gj}{{}Gl}{{}Gn}{{}H`}{{}Hb}{{}Hd}{{}Hf}{{}Hh}{{}Hj}{{}Hl}{{}Hn}{{}I`}{{}Ib}{{}Id}{{}If}{{}Ih}{{}Ij}{{}Il}{{}In}{{}J`}{{}Jb}{{}Jd}{{}Jf}{{}Jh}{{}Jj}{{}Jl}{{}Jn}{{}K`}{{}Kb}{{}Kd}{{}Kf}{{}Kh}{{}Kj}{{}Kl}{{}Kn}{{}L`}{{}Lb}{{}Ld}{{}Lf}{{}Lh}{{}Lj}{{}Ll}{{}Ln}{{}M`}{{}Mb}{{}Md}{{}Mf}{{}Mh}{{}Mj}{{}Ml}{{}Mn}{{}N`}{{}Nb}{{}Nd}{{}Nf}{{}Nh}````````{{{b{An}}}l}{{{b{B`}}}l}{{{b{Bb}}}l}{{{b{Bd}}}l}{{{b{Bf}}}l}{{{b{Bh}}}l}{{{b{Bj}}}l}{{{b{Bl}}}l}{{{b{Bn}}}l}{{{b{C`}}}l}{{{b{Cb}}}l}{{{b{Cd}}}l}{{{b{Cf}}}l}{{{b{Ch}}}l}{{{b{Cj}}}l}{{{b{Cl}}}l}{{{b{Cn}}}l}{{{b{D`}}}l}{{{b{Db}}}l}{{{b{Dd}}}l}{{{b{Df}}}l}{{{b{Dh}}}l}{{{b{Dj}}}l}{{{b{Dl}}}l}{{{b{Dn}}}l}{{{b{E`}}}l}{{{b{Eb}}}l}{{{b{Ed}}}l}{{{b{Ef}}}l}{{{b{Eh}}}l}{{{b{Ej}}}l}{{{b{El}}}l}{{{b{En}}}l}{{{b{F`}}}l}{{{b{Fb}}}l}{{{b{Fd}}}l}{{{b{Ff}}}l}{{{b{Fh}}}l}{{{b{Fj}}}l}{{{b{Fl}}}l}{{{b{Fn}}}l}{{{b{G`}}}l}{{{b{Gb}}}l}{{{b{Gd}}}l}{{{b{Gf}}}l}{{{b{Gh}}}l}{{{b{Gj}}}l}{{{b{Gl}}}l}{{{b{Gn}}}l}{{{b{H`}}}l}{{{b{Hb}}}l}{{{b{Hd}}}l}{{{b{Hf}}}l}{{{b{Hh}}}l}{{{b{Hj}}}l}{{{b{Hl}}}l}{{{b{Hn}}}l}{{{b{I`}}}l}{{{b{Ib}}}l}{{{b{Id}}}l}{{{b{If}}}l}{{{b{Ih}}}l}{{{b{Ij}}}l}{{{b{Il}}}l}{{{b{In}}}l}{{{b{J`}}}l}{{{b{Jb}}}l}{{{b{Jd}}}l}{{{b{Jf}}}l}{{{b{Jh}}}l}{{{b{Jj}}}l}{{{b{Jl}}}l}{{{b{Jn}}}l}{{{b{K`}}}l}{{{b{Kb}}}l}{{{b{Kd}}}l}{{{b{Kf}}}l}{{{b{Kh}}}l}{{{b{Kj}}}l}{{{b{Kl}}}l}{{{b{Kn}}}l}{{{b{L`}}}l}{{{b{Lb}}}l}{{{b{Ld}}}l}{{{b{Lf}}}l}{{{b{Lh}}}l}{{{b{Lj}}}l}{{{b{Ll}}}l}{{{b{Ln}}}l}{{{b{M`}}}l}{{{b{Mb}}}l}{{{b{Md}}}l}{{{b{Mf}}}l}{{{b{Mh}}}l}{{{b{Mj}}}l}{{{b{Ml}}}l}{{{b{Mn}}}l}{{{b{N`}}}l}{{{b{Nb}}}l}{{{b{Nd}}}l}{{{b{Nf}}}l}{{{b{Nh}}}l}``````````{{{b{An}}{b{An}}}n}{{{b{B`}}{b{B`}}}n}{{{b{Bb}}{b{Bb}}}n}{{{b{Bd}}{b{Bd}}}n}{{{b{Bf}}{b{Bf}}}n}{{{b{Bh}}{b{Bh}}}n}{{{b{Bj}}{b{Bj}}}n}{{{b{Bl}}{b{Bl}}}n}{{{b{Bn}}{b{Bn}}}n}{{{b{C`}}{b{C`}}}n}{{{b{Cb}}{b{Cb}}}n}{{{b{Cd}}{b{Cd}}}n}{{{b{Cf}}{b{Cf}}}n}{{{b{Ah}}{b{Ah}}}n}{{{b{Ch}}{b{Ch}}}n}{{{b{Cj}}{b{Cj}}}n}{{{b{Cl}}{b{Cl}}}n}{{{b{Cn}}{b{Cn}}}n}{{{b{D`}}{b{D`}}}n}{{{b{Db}}{b{Db}}}n}{{{b{Dd}}{b{Dd}}}n}{{{b{Df}}{b{Df}}}n}{{{b{Dh}}{b{Dh}}}n}{{{b{Dj}}{b{Dj}}}n}{{{b{Dl}}{b{Dl}}}n}{{{b{Dn}}{b{Dn}}}n}{{{b{E`}}{b{E`}}}n}{{{b{Eb}}{b{Eb}}}n}{{{b{Ed}}{b{Ed}}}n}{{{b{Ef}}{b{Ef}}}n}{{{b{Eh}}{b{Eh}}}n}{{{b{Ej}}{b{Ej}}}n}{{{b{El}}{b{El}}}n}{{{b{En}}{b{En}}}n}{{{b{F`}}{b{F`}}}n}{{{b{Fb}}{b{Fb}}}n}{{{b{Fd}}{b{Fd}}}n}{{{b{Ff}}{b{Ff}}}n}{{{b{Fh}}{b{Fh}}}n}{{{b{Fj}}{b{Fj}}}n}{{{b{Fl}}{b{Fl}}}n}{{{b{Fn}}{b{Fn}}}n}{{{b{G`}}{b{G`}}}n}{{{b{Gb}}{b{Gb}}}n}{{{b{Gd}}{b{Gd}}}n}{{{b{Gf}}{b{Gf}}}n}{{{b{Al}}{b{Al}}}n}{{{b{Gh}}{b{Gh}}}n}{{{b{Gj}}{b{Gj}}}n}{{{b{Gl}}{b{Gl}}}n}{{{b{Gn}}{b{Gn}}}n}{{{b{H`}}{b{H`}}}n}{{{b{Hb}}{b{Hb}}}n}{{{b{Hd}}{b{Hd}}}n}{{{b{Hf}}{b{Hf}}}n}{{{b{Hh}}{b{Hh}}}n}{{{b{Hj}}{b{Hj}}}n}{{{b{Hl}}{b{Hl}}}n}{{{b{Hn}}{b{Hn}}}n}{{{b{I`}}{b{I`}}}n}{{{b{Ib}}{b{Ib}}}n}{{{b{Id}}{b{Id}}}n}{{{b{If}}{b{If}}}n}{{{b{Ih}}{b{Ih}}}n}{{{b{Ij}}{b{Ij}}}n}{{{b{Il}}{b{Il}}}n}{{{b{In}}{b{In}}}n}{{{b{J`}}{b{J`}}}n}{{{b{Jb}}{b{Jb}}}n}{{{b{Jd}}{b{Jd}}}n}{{{b{Jf}}{b{Jf}}}n}{{{b{Jh}}{b{Jh}}}n}{{{b{Jj}}{b{Jj}}}n}{{{b{Jl}}{b{Jl}}}n}{{{b{Jn}}{b{Jn}}}n}{{{b{K`}}{b{K`}}}n}{{{b{Kb}}{b{Kb}}}n}{{{b{Kd}}{b{Kd}}}n}{{{b{Kf}}{b{Kf}}}n}{{{b{Kh}}{b{Kh}}}n}{{{b{Kj}}{b{Kj}}}n}{{{b{Kl}}{b{Kl}}}n}{{{b{Kn}}{b{Kn}}}n}{{{b{L`}}{b{L`}}}n}{{{b{Lb}}{b{Lb}}}n}{{{b{Ld}}{b{Ld}}}n}{{{b{Lf}}{b{Lf}}}n}{{{b{Lh}}{b{Lh}}}n}{{{b{Lj}}{b{Lj}}}n}{{{b{Ll}}{b{Ll}}}n}{{{b{Ln}}{b{Ln}}}n}{{{b{M`}}{b{M`}}}n}{{{b{Mb}}{b{Mb}}}n}{{{b{Md}}{b{Md}}}n}{{{b{Mf}}{b{Mf}}}n}{{{b{Mh}}{b{Mh}}}n}{{{b{Mj}}{b{Mj}}}n}{{{b{Ml}}{b{Ml}}}n}{{{b{Mn}}{b{Mn}}}n}{{{b{N`}}{b{N`}}}n}{{{b{Nb}}{b{Nb}}}n}{{{b{Nd}}{b{Nd}}}n}{{{b{Nf}}{b{Nf}}}n}{{{b{Nh}}{b{Nh}}}n}````````````````{{{b{An}}{b{dA`}}}Ab}{{{b{B`}}{b{dA`}}}Ab}{{{b{Bb}}{b{dA`}}}Ab}{{{b{Bd}}{b{dA`}}}Ab}{{{b{Bf}}{b{dA`}}}Ab}{{{b{Bh}}{b{dA`}}}Ab}{{{b{Bj}}{b{dA`}}}Ab}{{{b{Bl}}{b{dA`}}}Ab}{{{b{Bn}}{b{dA`}}}Ab}{{{b{C`}}{b{dA`}}}Ab}{{{b{Cb}}{b{dA`}}}Ab}{{{b{Cd}}{b{dA`}}}Ab}{{{b{Cf}}{b{dA`}}}Ab}{{{b{Ah}}{b{dA`}}}Ab}{{{b{Ch}}{b{dA`}}}Ab}{{{b{Cj}}{b{dA`}}}Ab}{{{b{Cl}}{b{dA`}}}Ab}{{{b{Cn}}{b{dA`}}}Ab}{{{b{D`}}{b{dA`}}}Ab}{{{b{Db}}{b{dA`}}}Ab}{{{b{Dd}}{b{dA`}}}Ab}{{{b{Df}}{b{dA`}}}Ab}{{{b{Dh}}{b{dA`}}}Ab}{{{b{Dj}}{b{dA`}}}Ab}{{{b{Dl}}{b{dA`}}}Ab}{{{b{Dn}}{b{dA`}}}Ab}{{{b{E`}}{b{dA`}}}Ab}{{{b{Eb}}{b{dA`}}}Ab}{{{b{Ed}}{b{dA`}}}Ab}{{{b{Ef}}{b{dA`}}}Ab}{{{b{Eh}}{b{dA`}}}Ab}{{{b{Ej}}{b{dA`}}}Ab}{{{b{El}}{b{dA`}}}Ab}{{{b{En}}{b{dA`}}}Ab}{{{b{F`}}{b{dA`}}}Ab}{{{b{Fb}}{b{dA`}}}Ab}{{{b{Fd}}{b{dA`}}}Ab}{{{b{Ff}}{b{dA`}}}Ab}{{{b{Fh}}{b{dA`}}}Ab}{{{b{Fj}}{b{dA`}}}Ab}{{{b{Fl}}{b{dA`}}}Ab}{{{b{Fn}}{b{dA`}}}Ab}{{{b{G`}}{b{dA`}}}Ab}{{{b{Gb}}{b{dA`}}}Ab}{{{b{Gd}}{b{dA`}}}Ab}{{{b{Gf}}{b{dA`}}}Ab}{{{b{Al}}{b{dA`}}}Ab}{{{b{Gh}}{b{dA`}}}Ab}{{{b{Gj}}{b{dA`}}}Ab}{{{b{Gl}}{b{dA`}}}Ab}{{{b{Gn}}{b{dA`}}}Ab}{{{b{H`}}{b{dA`}}}Ab}{{{b{Hb}}{b{dA`}}}Ab}{{{b{Hd}}{b{dA`}}}Ab}{{{b{Hf}}{b{dA`}}}Ab}{{{b{Hh}}{b{dA`}}}Ab}{{{b{Hj}}{b{dA`}}}Ab}{{{b{Hl}}{b{dA`}}}Ab}{{{b{Hn}}{b{dA`}}}Ab}{{{b{I`}}{b{dA`}}}Ab}{{{b{Ib}}{b{dA`}}}Ab}{{{b{Id}}{b{dA`}}}Ab}{{{b{If}}{b{dA`}}}Ab}{{{b{Ih}}{b{dA`}}}Ab}{{{b{Ij}}{b{dA`}}}Ab}{{{b{Il}}{b{dA`}}}Ab}{{{b{In}}{b{dA`}}}Ab}{{{b{J`}}{b{dA`}}}Ab}{{{b{Jb}}{b{dA`}}}Ab}{{{b{Jd}}{b{dA`}}}Ab}{{{b{Jf}}{b{dA`}}}Ab}{{{b{Jh}}{b{dA`}}}Ab}{{{b{Jj}}{b{dA`}}}Ab}{{{b{Jl}}{b{dA`}}}Ab}{{{b{Jn}}{b{dA`}}}Ab}{{{b{K`}}{b{dA`}}}Ab}{{{b{Kb}}{b{dA`}}}Ab}{{{b{Kd}}{b{dA`}}}Ab}{{{b{Kf}}{b{dA`}}}Ab}{{{b{Kh}}{b{dA`}}}Ab}{{{b{Kj}}{b{dA`}}}Ab}{{{b{Kl}}{b{dA`}}}Ab}{{{b{Kn}}{b{dA`}}}Ab}{{{b{L`}}{b{dA`}}}Ab}{{{b{Lb}}{b{dA`}}}Ab}{{{b{Ld}}{b{dA`}}}Ab}{{{b{Lf}}{b{dA`}}}Ab}{{{b{Lh}}{b{dA`}}}Ab}{{{b{Lj}}{b{dA`}}}Ab}{{{b{Ll}}{b{dA`}}}Ab}{{{b{Ln}}{b{dA`}}}Ab}{{{b{M`}}{b{dA`}}}Ab}{{{b{Mb}}{b{dA`}}}Ab}{{{b{Md}}{b{dA`}}}Ab}{{{b{Mf}}{b{dA`}}}Ab}{{{b{Mh}}{b{dA`}}}Ab}{{{b{Mj}}{b{dA`}}}Ab}{{{b{Ml}}{b{dA`}}}Ab}{{{b{Mn}}{b{dA`}}}Ab}{{{b{N`}}{b{dA`}}}Ab}{{{b{Nb}}{b{dA`}}}Ab}{{{b{Nd}}{b{dA`}}}Ab}{{{b{Nf}}{b{dA`}}}Ab}{{{b{Nh}}{b{dA`}}}Ab}{{{b{Gh}}}Nl}`{cc{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Nn{{O`{Ah}}}}{Nn{{O`{Al}}}}{{{b{Aj}}}{{O`{Ah}}}}{{{b{Aj}}}{{O`{Al}}}}```{{{b{Ah}}{b{dc}}}hOb}{{{b{Al}}{b{dc}}}hOb}`````````````{{}c{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Nnn}0````````````````````````````{{{b{K`}}}{{b{Aj}}}}``````````````````{{{b{Ah}}{b{Ah}}}{{O`{Nj}}}}{{{b{Al}}{b{Al}}}{{O`{Nj}}}}`{{{b{C`}}}Ah}`````````````````````````````````{{{b{dGh}}Nl}h}{{{b{dC`}}Ah}h}{{{b{dIn}}Od}h}{{{b{dD`}}Al}h}````````````{{{b{In}}}Od}```````````````````````{bc{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{c{{Ad{e}}}{}{}}000000000000{Nn{{Ad{AhOf}}}}111111111111111111111111111111111{Nn{{Ad{AlOf}}}}2222222222222222222222222222222222222222222222222222222222{{}{{Ad{c}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{b{D`}}}Al}```````````{bAf}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}Oh}`````````````{{{b{Od}}}{{b{Aj}}}}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Od}}}Od}{{b{b{dc}}}h{}}{bh}{{{b{Od}}{b{Od}}}Nj}{{}Od}{{{b{Od}}{b{Od}}}n}{{{b{Od}}{b{dA`}}}Ab}{cc{}}{Nn{{O`{Od}}}}{{{b{Aj}}}{{O`{Od}}}}{{{b{Od}}{b{dc}}}hOb}{{}c{}}{Nnn}{{{b{Od}}{b{Od}}}{{O`{Nj}}}}{bc{}}{c{{Ad{e}}}{}{}}{Nn{{Ad{OdOf}}}}{{}{{Ad{c}}}{}}{bAf}````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Oj}}}Oj}{{b{b{dc}}}h{}}{bh}{{{b{Oj}}{b{dc}}}hOl}{{{b{Oj}}}l}{{{b{Oj}}{b{Oj}}}n}{{{b{Oj}}{b{dA`}}}Ab}{cc{}}{{}c{}}{{{b{d{O`{Oj}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}{bc{}}{c{{Ad{e}}}{}{}}?>```{{{b{Nl}}}{{b{Aj}}}}>={{{b{Nl}}}Nl}<;{{{b{Nl}}{b{Nl}}}Nj}{{}Nl}{{{b{Nl}}{b{Nl}}}n}{{{b{Nl}}{b{dA`}}}Ab}:{Nn{{O`{Nl}}}}{{{b{Aj}}}{{O`{Nl}}}}{{{b{Nl}}{b{dc}}}hOb}<{Nnn}{{{b{Nl}}{b{Nl}}}{{O`{Nj}}}}<{Nn{{Ad{NlOf}}}}<{{}{{Ad{c}}}{}}{bAf}````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{A@f}}}A@f}{{b{b{dc}}}h{}}{bh}{{{b{A@f}}{b{dc}}}hOl}{{{b{A@f}}}l}{{{b{A@f}}{b{A@f}}}n}{{{b{A@f}}{b{dA`}}}Ab}{cc{}}{{}c{}}{{{b{d{O`{A@f}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}{bc{}}{c{{Ad{e}}}{}{}}?>```=<{{{b{A@h}}}A@h};:{{{b{A@h}}{b{dc}}}hOl}{{{b{A@h}}}l}{{{b{A@h}}{b{A@h}}}n}{{{b{A@h}}{b{dA`}}}Ab}98{{{b{d{O`{A@h}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}76{{}{{Ad{c}}}{}}{bAf}````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{A@j}}}A@j}{{b{b{dc}}}h{}}{bh}{{{b{A@j}}{b{dc}}}hOl}{{{b{A@j}}}l}{{{b{A@j}}{b{A@j}}}n}{{{b{A@j}}{b{dA`}}}Ab}{cc{}}{{}c{}}{{{b{d{O`{A@j}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}{bc{}}{c{{Ad{e}}}{}{}}?>`````=<{{{b{A@l}}}A@l};:{{{b{A@l}}{b{dc}}}hOl}{{{b{A@l}}}l}{{{b{A@l}}{b{A@l}}}n}{{{b{A@l}}{b{dA`}}}Ab}98{{{b{d{O`{A@l}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}76{{}{{Ad{c}}}{}}{bAf}````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{A@n}}}A@n}{{b{b{dc}}}h{}}{bh}{{{b{A@n}}{b{dc}}}hOl}{{{b{A@n}}}l}{{{b{A@n}}{b{A@n}}}n}{{{b{A@n}}{b{dA`}}}Ab}{cc{}}{{}c{}}{{{b{d{O`{A@n}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}{bc{}}{c{{Ad{e}}}{}{}}?>````=<{{{b{AA`}}}AA`};:{{{b{AA`}}{b{dc}}}hOl}{{{b{AA`}}}l}{{{b{AA`}}{b{AA`}}}n}{{{b{AA`}}{b{dA`}}}Ab}98{{{b{d{O`{AA`}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}76{{}{{Ad{c}}}{}}{bAf}```{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{AAb}}}AAb}{{b{b{dc}}}h{}}{bh}{{{b{AAb}}{b{dc}}}hOl}{{{b{AAb}}}l}{{{b{AAb}}{b{AAb}}}n}{{{b{AAb}}{b{dA`}}}Ab}{cc{}}{{}c{}}{{{b{d{O`{AAb}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}{bc{}}{c{{Ad{e}}}{}{}}?>````=<{{{b{AAd}}}AAd};:{{{b{AAd}}{b{dc}}}hOl}{{{b{AAd}}}l}{{{b{AAd}}{b{AAd}}}n}{{{b{AAd}}{b{dA`}}}Ab}98{{{b{d{O`{AAd}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}76{{}{{Ad{c}}}{}}{bAf}````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{AAf}}}AAf}{{b{b{dc}}}h{}}{bh}{{{b{AAf}}{b{dc}}}hOl}{{{b{AAf}}}l}{{{b{AAf}}{b{AAf}}}n}{{{b{AAf}}{b{dA`}}}Ab}{cc{}}{{}c{}}{{{b{d{O`{AAf}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}{bc{}}{c{{Ad{e}}}{}{}}?>`````=<{{{b{AAh}}}AAh};:{{{b{AAh}}{b{dc}}}hOl}{{{b{AAh}}}l}{{{b{AAh}}{b{AAh}}}n}{{{b{AAh}}{b{dA`}}}Ab}98{{{b{d{O`{AAh}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}76{{}{{Ad{c}}}{}}{bAf}```{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{AAj}}}AAj}{{b{b{dc}}}h{}}{bh}{{{b{AAj}}{b{dc}}}hOl}{{{b{AAj}}}l}{{{b{AAj}}{b{AAj}}}n}{{{b{AAj}}{b{dA`}}}Ab}{cc{}}{{}c{}}{{{b{d{O`{AAj}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}{bc{}}{c{{Ad{e}}}{}{}}?>```===<<<{{{b{dAAl}}}h}{{{b{dAAn}}}h}{{{b{dAB`}}}h}{{{b{AAl}}}AAl}{{{b{AAn}}}AAn}{{{b{AB`}}}AB`}{{b{b{dc}}}h{}}00{bh}00`{{}AAl}{{}AAn}{{}AB`}`{{{b{AAl}}}l}{{{b{AAn}}}l}{{{b{AB`}}}l}{{{b{AAl}}{b{AAl}}}n}{{{b{AAn}}{b{AAn}}}n}{{{b{AB`}}{b{AB`}}}n}{{{b{AAl}}{b{dA`}}}Ab}{{{b{AAn}}{b{dA`}}}Ab}{{{b{AB`}}{b{dA`}}}Ab}{cc{}}00`{{}c{}}00{bc{}}00{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{bAf}00```````````````{{{b{ABb}}}{{b{Aj}}}}{{{b{ABd}}}{{b{Aj}}}}{b{{b{c}}}{}}0000000{{{b{d}}}{{b{dc}}}{}}0000000{{{b{dABf}}}h}{{{b{dABh}}}h}{{{b{dABj}}}h}{{{b{dABl}}}h}{{{b{dABn}}}h}{{{b{dAC`}}}h}{{{b{ABf}}}ABf}{{{b{ABh}}}ABh}{{{b{ABb}}}ABb}{{{b{ABj}}}ABj}{{{b{ABl}}}ABl}{{{b{ABn}}}ABn}{{{b{AC`}}}AC`}{{{b{ABd}}}ABd}{{b{b{dc}}}h{}}0000000{bh}0000000{{{b{ABb}}{b{ABb}}}Nj}{{{b{ABd}}{b{ABd}}}Nj}{{}ABf}{{}ABh}{{}ABb}{{}ABj}{{}ABl}{{}ABn}{{}AC`}{{}ABd}{{{b{ABf}}}l}{{{b{ABh}}}l}{{{b{ABj}}}l}{{{b{ABl}}}l}{{{b{ABn}}}l}{{{b{AC`}}}l}{{{b{ABf}}{b{ABf}}}n}{{{b{ABh}}{b{ABh}}}n}{{{b{ABb}}{b{ABb}}}n}{{{b{ABj}}{b{ABj}}}n}{{{b{ABl}}{b{ABl}}}n}{{{b{ABn}}{b{ABn}}}n}{{{b{AC`}}{b{AC`}}}n}{{{b{ABd}}{b{ABd}}}n}{{{b{ABf}}{b{dA`}}}Ab}{{{b{ABh}}{b{dA`}}}Ab}{{{b{ABb}}{b{dA`}}}Ab}{{{b{ABj}}{b{dA`}}}Ab}{{{b{ABl}}{b{dA`}}}Ab}{{{b{ABn}}{b{dA`}}}Ab}{{{b{AC`}}{b{dA`}}}Ab}{{{b{ABd}}{b{dA`}}}Ab}{cc{}}0000000{Nn{{O`{ABb}}}}{Nn{{O`{ABd}}}}{{{b{Aj}}}{{O`{ABb}}}}{{{b{Aj}}}{{O`{ABd}}}}`{{{b{ABb}}{b{dc}}}hOb}{{{b{ABd}}{b{dc}}}hOb}{{}c{}}0000000{Nnn}0{{{b{ABj}}}ABd}{{{b{ABn}}}ABd}```{{{b{ABb}}{b{ABb}}}{{O`{Nj}}}}{{{b{ABd}}{b{ABd}}}{{O`{Nj}}}}{{{b{ABf}}}ABb}```{{{b{dABj}}ABd}h}{{{b{dABn}}ABd}h}{{{b{dABf}}ABb}h}`{bc{}}0000000{c{{Ad{e}}}{}{}}00{Nn{{Ad{ABbOf}}}}11111{Nn{{Ad{ABdOf}}}}{{}{{Ad{c}}}{}}0000000{bAf}0000000```````{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000`{{{b{dACb}}}h}{{{b{dACd}}}h}{{{b{dACf}}}h}{{{b{dACh}}}h}{{{b{dACj}}}h}{{{b{ACb}}}ACb}{{{b{ACd}}}ACd}{{{b{ACf}}}ACf}{{{b{ACh}}}ACh}{{{b{ACj}}}ACj}{{b{b{dc}}}h{}}0000{bh}0000{{}ACb}{{}ACd}{{}ACf}{{}ACh}{{}ACj}{{{b{ACb}}}l}{{{b{ACd}}}l}{{{b{ACf}}}l}{{{b{ACh}}}l}{{{b{ACj}}}l}``{{{b{ACb}}{b{ACb}}}n}{{{b{ACd}}{b{ACd}}}n}{{{b{ACf}}{b{ACf}}}n}{{{b{ACh}}{b{ACh}}}n}{{{b{ACj}}{b{ACj}}}n}{{{b{ACb}}{b{dA`}}}Ab}{{{b{ACd}}{b{dA`}}}Ab}{{{b{ACf}}{b{dA`}}}Ab}{{{b{ACh}}{b{dA`}}}Ab}{{{b{ACj}}{b{dA`}}}Ab}{cc{}}0000{{}c{}}0000```{{{b{ACb}}}{{b{{ACn{ACl}}}}}}``{bc{}}0000{c{{Ad{e}}}{}{}}0000{{}{{Ad{c}}}{}}0000{bAf}0000``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{dAD`}}}h}{{{b{dADb}}}h}{{{b{AD`}}}AD`}{{{b{ADb}}}ADb}{{b{b{dc}}}h{}}0{bh}0{{}AD`}{{}ADb}`{{{b{AD`}}}l}{{{b{ADb}}}l}{{{b{AD`}}{b{AD`}}}n}{{{b{ADb}}{b{ADb}}}n}{{{b{AD`}}{b{dA`}}}Ab}{{{b{ADb}}{b{dA`}}}Ab}{cc{}}0{{}c{}}0`{bc{}}0{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{bAf}0````````````````{b{{b{c}}}{}}0000000000000{{{b{d}}}{{b{dc}}}{}}0000000000000{{{b{dADd}}}h}{{{b{dADf}}}h}{{{b{dADh}}}h}{{{b{dADj}}}h}{{{b{dADl}}}h}{{{b{dADn}}}h}{{{b{dAE`}}}h}{{{b{dAEb}}}h}{{{b{dAEd}}}h}{{{b{dAEf}}}h}{{{b{dAEh}}}h}{{{b{dAEj}}}h}{{{b{dAEl}}}h}{{{b{dAEn}}}h}{{{b{ADd}}}ADd}{{{b{ADf}}}ADf}{{{b{ADh}}}ADh}{{{b{ADj}}}ADj}{{{b{ADl}}}ADl}{{{b{ADn}}}ADn}{{{b{AE`}}}AE`}{{{b{AEb}}}AEb}{{{b{AEd}}}AEd}{{{b{AEf}}}AEf}{{{b{AEh}}}AEh}{{{b{AEj}}}AEj}{{{b{AEl}}}AEl}{{{b{AEn}}}AEn}{{b{b{dc}}}h{}}0000000000000{bh}0000000000000```{{}ADd}{{}ADf}{{}ADh}{{}ADj}{{}ADl}{{}ADn}{{}AE`}{{}AEb}{{}AEd}{{}AEf}{{}AEh}{{}AEj}{{}AEl}{{}AEn}{{{b{ADd}}}l}{{{b{ADf}}}l}{{{b{ADh}}}l}{{{b{ADj}}}l}{{{b{ADl}}}l}{{{b{ADn}}}l}{{{b{AE`}}}l}{{{b{AEb}}}l}{{{b{AEd}}}l}{{{b{AEf}}}l}{{{b{AEh}}}l}{{{b{AEj}}}l}{{{b{AEl}}}l}{{{b{AEn}}}l}``{{{b{ADd}}{b{ADd}}}n}{{{b{ADf}}{b{ADf}}}n}{{{b{ADh}}{b{ADh}}}n}{{{b{ADj}}{b{ADj}}}n}{{{b{ADl}}{b{ADl}}}n}{{{b{ADn}}{b{ADn}}}n}{{{b{AE`}}{b{AE`}}}n}{{{b{AEb}}{b{AEb}}}n}{{{b{AEd}}{b{AEd}}}n}{{{b{AEf}}{b{AEf}}}n}{{{b{AEh}}{b{AEh}}}n}{{{b{AEj}}{b{AEj}}}n}{{{b{AEl}}{b{AEl}}}n}{{{b{AEn}}{b{AEn}}}n}``{{{b{ADd}}{b{dA`}}}Ab}{{{b{ADf}}{b{dA`}}}Ab}{{{b{ADh}}{b{dA`}}}Ab}{{{b{ADj}}{b{dA`}}}Ab}{{{b{ADl}}{b{dA`}}}Ab}{{{b{ADn}}{b{dA`}}}Ab}{{{b{AE`}}{b{dA`}}}Ab}{{{b{AEb}}{b{dA`}}}Ab}{{{b{AEd}}{b{dA`}}}Ab}{{{b{AEf}}{b{dA`}}}Ab}{{{b{AEh}}{b{dA`}}}Ab}{{{b{AEj}}{b{dA`}}}Ab}{{{b{AEl}}{b{dA`}}}Ab}{{{b{AEn}}{b{dA`}}}Ab}{cc{}}0000000000000{{}c{}}0000000000000````{bc{}}0000000000000{c{{Ad{e}}}{}{}}0000000000000{{}{{Ad{c}}}{}}0000000000000{bAf}0000000000000`````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{dAF`}}}h}{{{b{dAFb}}}h}{{{b{AF`}}}AF`}{{{b{AFb}}}AFb}{{b{b{dc}}}h{}}0{bh}0``{{}AF`}{{}AFb}{{{b{AF`}}}l}{{{b{AFb}}}l}{{{b{AF`}}{b{AF`}}}n}{{{b{AFb}}{b{AFb}}}n}{{{b{AF`}}{b{dA`}}}Ab}{{{b{AFb}}{b{dA`}}}Ab}{cc{}}0{{}c{}}0`{bc{}}0{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{bAf}0``````````{{{b{AFd}}}{{b{Aj}}}}{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000{{{b{dAFf}}}h}{{{b{dAFh}}}h}{{{b{dAFj}}}h}{{{b{dAFl}}}h}{{{b{AFf}}}AFf}{{{b{AFh}}}AFh}{{{b{AFj}}}AFj}{{{b{AFl}}}AFl}{{{b{AFd}}}AFd}{{b{b{dc}}}h{}}0000{bh}0000{{{b{AFd}}{b{AFd}}}Nj}`{{}AFf}{{}AFh}{{}AFj}{{}AFl}{{}AFd}{{{b{AFj}}}AFn}`0`{{{b{AFf}}}l}{{{b{AFh}}}l}{{{b{AFj}}}l}{{{b{AFl}}}l}{{{b{AFf}}{b{AFf}}}n}{{{b{AFh}}{b{AFh}}}n}{{{b{AFj}}{b{AFj}}}n}{{{b{AFl}}{b{AFl}}}n}{{{b{AFd}}{b{AFd}}}n}{{{b{AFf}}{b{dA`}}}Ab}{{{b{AFh}}{b{dA`}}}Ab}{{{b{AFj}}{b{dA`}}}Ab}{{{b{AFl}}{b{dA`}}}Ab}{{{b{AFd}}{b{dA`}}}Ab}{cc{}}0000{Nn{{O`{AFd}}}}{{{b{Aj}}}{{O`{AFd}}}}{{{b{AFl}}}AFd}`{{{b{AFd}}{b{dc}}}hOb}{{}c{}}0000{Nnn}{{{b{AFj}}}n}`{{{b{AFd}}{b{AFd}}}{{O`{Nj}}}}```{{{b{dAFl}}AFd}h}{{{b{AFj}}}AFn}`0`{bc{}}0000{c{{Ad{e}}}{}{}}000{Nn{{Ad{AFdOf}}}}1{{}{{Ad{c}}}{}}0000{bAf}0000`````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{AG`}}}AG`}{{b{b{dc}}}h{}}{bh}{{{b{AG`}}{b{dc}}}hOl}{{{b{AG`}}}l}{{{b{AG`}}{b{AG`}}}n}{{{b{AG`}}{b{dA`}}}Ab}{cc{}}{{}c{}}{{{b{d{O`{AG`}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}{bc{}}{c{{Ad{e}}}{}{}}?>`=<{{{b{dAGb}}}h}{{{b{AGb}}}AGb}<;{{}AGb}{{{b{AGb}}}l}{{{b{AGb}}{b{AGb}}}n}{{{b{AGb}}{b{dA`}}}Ab}:9{{{b{AGb}}}AFn}`0`{{{b{AGb}}}On}`0`0`0`1`0`0`0`1`{{{b{AGb}}}n}`1`2`:1`1`1`1`1`9{{}{{Ad{c}}}{}}{bAf}```{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{AGd}}}AGd}{{b{b{dc}}}h{}}{bh}{{{b{AGd}}{b{dc}}}hOl}{{{b{AGd}}}l}{{{b{AGd}}{b{AGd}}}n}{{{b{AGd}}{b{dA`}}}Ab}{cc{}}{{}c{}}{{{b{d{O`{AGd}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}{bc{}}{c{{Ad{e}}}{}{}}?>`=<{{{b{dAGf}}}h}{{{b{AGf}}}AGf}<;{{}AGf}{{{b{AGf}}}l}{{{b{AGf}}{b{AGf}}}n}{{{b{AGf}}{b{dA`}}}Ab}:9`76{{}{{Ad{c}}}{}}{bAf}`````{b{{b{c}}}{}}000{{{b{d}}}{{b{dc}}}{}}000{{{b{dAGh}}}h}{{{b{dAGj}}}h}{{{b{dAGl}}}h}{{{b{dAGn}}}h}{{{b{AGh}}}AGh}{{{b{AGj}}}AGj}{{{b{AGl}}}AGl}{{{b{AGn}}}AGn}{{b{b{dc}}}h{}}000{bh}000``{{}AGh}{{}AGj}{{}AGl}{{}AGn}{{{b{AGh}}}l}{{{b{AGj}}}l}{{{b{AGl}}}l}{{{b{AGn}}}l}{{{b{AGh}}{b{AGh}}}n}{{{b{AGj}}{b{AGj}}}n}{{{b{AGl}}{b{AGl}}}n}{{{b{AGn}}{b{AGn}}}n}{{{b{AGh}}{b{dA`}}}Ab}{{{b{AGj}}{b{dA`}}}Ab}{{{b{AGl}}{b{dA`}}}Ab}{{{b{AGn}}{b{dA`}}}Ab}{cc{}}000{{}c{}}000``{{{b{AGh}}}AH`}`{{{b{dAGh}}AH`}h}{bc{}}000{c{{Ad{e}}}{}{}}000{{}{{Ad{c}}}{}}000{bAf}000````{{{b{AH`}}}{{b{Aj}}}}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{AH`}}}AH`}{{b{b{dc}}}h{}}{bh}{{{b{AH`}}{b{AH`}}}Nj}{{}AH`}{{{b{AH`}}{b{AH`}}}n}{{{b{AH`}}{b{dA`}}}Ab}{cc{}}{Nn{{O`{AH`}}}}{{{b{Aj}}}{{O`{AH`}}}}{{{b{AH`}}{b{dc}}}hOb}{{}c{}}{Nnn}{{{b{AH`}}{b{AH`}}}{{O`{Nj}}}}{bc{}}{Nn{{Ad{AH`Of}}}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}``````````````````{b{{b{c}}}{}}000000000000{{{b{d}}}{{b{dc}}}{}}000000000000{{{b{dAHb}}}h}{{{b{dAHd}}}h}{{{b{dAHf}}}h}{{{b{dAHh}}}h}{{{b{dAHj}}}h}{{{b{dAHl}}}h}{{{b{dAHn}}}h}{{{b{dAI`}}}h}{{{b{dAIb}}}h}{{{b{dAId}}}h}{{{b{dAIf}}}h}{{{b{dAIh}}}h}{{{b{dAIj}}}h}{{{b{AHb}}}AHb}{{{b{AHd}}}AHd}{{{b{AHf}}}AHf}{{{b{AHh}}}AHh}{{{b{AHj}}}AHj}{{{b{AHl}}}AHl}{{{b{AHn}}}AHn}{{{b{AI`}}}AI`}{{{b{AIb}}}AIb}{{{b{AId}}}AId}{{{b{AIf}}}AIf}{{{b{AIh}}}AIh}{{{b{AIj}}}AIj}{{b{b{dc}}}h{}}000000000000{bh}000000000000{{}AHb}{{}AHd}{{}AHf}{{}AHh}{{}AHj}{{}AHl}{{}AHn}{{}AI`}{{}AIb}{{}AId}{{}AIf}{{}AIh}{{}AIj}`{{{b{AHb}}}l}{{{b{AHd}}}l}{{{b{AHf}}}l}{{{b{AHh}}}l}{{{b{AHj}}}l}{{{b{AHl}}}l}{{{b{AHn}}}l}{{{b{AI`}}}l}{{{b{AIb}}}l}{{{b{AId}}}l}{{{b{AIf}}}l}{{{b{AIh}}}l}{{{b{AIj}}}l}{{{b{AHb}}{b{AHb}}}n}{{{b{AHd}}{b{AHd}}}n}{{{b{AHf}}{b{AHf}}}n}{{{b{AHh}}{b{AHh}}}n}{{{b{AHj}}{b{AHj}}}n}{{{b{AHl}}{b{AHl}}}n}{{{b{AHn}}{b{AHn}}}n}{{{b{AI`}}{b{AI`}}}n}{{{b{AIb}}{b{AIb}}}n}{{{b{AId}}{b{AId}}}n}{{{b{AIf}}{b{AIf}}}n}{{{b{AIh}}{b{AIh}}}n}{{{b{AIj}}{b{AIj}}}n}{{{b{AHb}}{b{dA`}}}Ab}{{{b{AHd}}{b{dA`}}}Ab}{{{b{AHf}}{b{dA`}}}Ab}{{{b{AHh}}{b{dA`}}}Ab}{{{b{AHj}}{b{dA`}}}Ab}{{{b{AHl}}{b{dA`}}}Ab}{{{b{AHn}}{b{dA`}}}Ab}{{{b{AI`}}{b{dA`}}}Ab}{{{b{AIb}}{b{dA`}}}Ab}{{{b{AId}}{b{dA`}}}Ab}{{{b{AIf}}{b{dA`}}}Ab}{{{b{AIh}}{b{dA`}}}Ab}{{{b{AIj}}{b{dA`}}}Ab}`{cc{}}000000000000{{}c{}}000000000000```{bc{}}000000000000{c{{Ad{e}}}{}{}}000000000000{{}{{Ad{c}}}{}}000000000000{bAf}000000000000```````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{dAIl}}}h}{{{b{dAIn}}}h}{{{b{dAJ`}}}h}{{{b{AIl}}}AIl}{{{b{AIn}}}AIn}{{{b{AJ`}}}AJ`}{{b{b{dc}}}h{}}00{bh}00{{}AIl}{{}AIn}{{}AJ`}{{{b{AIl}}}l}{{{b{AIn}}}l}{{{b{AJ`}}}l}``{{{b{AIl}}{b{AIl}}}n}{{{b{AIn}}{b{AIn}}}n}{{{b{AJ`}}{b{AJ`}}}n}`{{{b{AIl}}{b{dA`}}}Ab}{{{b{AIn}}{b{dA`}}}Ab}{{{b{AJ`}}{b{dA`}}}Ab}{cc{}}00`{{}c{}}00{bc{}}00{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{bAf}00``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{dAJb}}}h}{{{b{AJb}}}AJb}{{b{b{dc}}}h{}}{bh}{{}AJb}{{{b{AJb}}}l}`{{{b{AJb}}{b{AJb}}}n}{{{b{AJb}}{b{dA`}}}Ab}?>=<;:```````````````````{{{b{AJd}}}{{b{{ACn{ACl}}}}}}````::::::::::::::::::999999999999999999``{{{b{dAJf}}}h}{{{b{dAJh}}}h}{{{b{dAJj}}}h}{{{b{dAJl}}}h}{{{b{dAJn}}}h}{{{b{dAK`}}}h}{{{b{dAKb}}}h}{{{b{dAKd}}}h}{{{b{dAKf}}}h}{{{b{dAKh}}}h}{{{b{dAKj}}}h}{{{b{dAKl}}}h}{{{b{dAKn}}}h}{{{b{dAJd}}}h}{{{b{dAL`}}}h}{{{b{dALb}}}h}{{{b{dALd}}}h}{{{b{dALf}}}h}{{{b{AJf}}}AJf}{{{b{AJh}}}AJh}{{{b{AJj}}}AJj}{{{b{AJl}}}AJl}{{{b{AJn}}}AJn}{{{b{AK`}}}AK`}{{{b{AKb}}}AKb}{{{b{AKd}}}AKd}{{{b{AKf}}}AKf}{{{b{AKh}}}AKh}{{{b{AKj}}}AKj}{{{b{AKl}}}AKl}{{{b{AKn}}}AKn}{{{b{AJd}}}AJd}{{{b{AL`}}}AL`}{{{b{ALb}}}ALb}{{{b{ALd}}}ALd}{{{b{ALf}}}ALf}{{b{b{dc}}}h{}}00000000000000000{bh}00000000000000000{{}AJf}{{}AJh}{{}AJj}{{}AJl}{{}AJn}{{}AK`}{{}AKb}{{}AKd}{{}AKf}{{}AKh}{{}AKj}{{}AKl}{{}AKn}{{}AJd}{{}AL`}{{}ALb}{{}ALd}{{}ALf}{{{b{AJf}}}l}{{{b{AJh}}}l}{{{b{AJj}}}l}{{{b{AJl}}}l}{{{b{AJn}}}l}{{{b{AK`}}}l}{{{b{AKb}}}l}{{{b{AKd}}}l}{{{b{AKf}}}l}{{{b{AKh}}}l}{{{b{AKj}}}l}{{{b{AKl}}}l}{{{b{AKn}}}l}{{{b{AJd}}}l}{{{b{AL`}}}l}{{{b{ALb}}}l}{{{b{ALd}}}l}{{{b{ALf}}}l}```````{{{b{AJf}}{b{AJf}}}n}{{{b{AJh}}{b{AJh}}}n}{{{b{AJj}}{b{AJj}}}n}{{{b{AJl}}{b{AJl}}}n}{{{b{AJn}}{b{AJn}}}n}{{{b{AK`}}{b{AK`}}}n}{{{b{AKb}}{b{AKb}}}n}{{{b{AKd}}{b{AKd}}}n}{{{b{AKf}}{b{AKf}}}n}{{{b{AKh}}{b{AKh}}}n}{{{b{AKj}}{b{AKj}}}n}{{{b{AKl}}{b{AKl}}}n}{{{b{AKn}}{b{AKn}}}n}{{{b{AJd}}{b{AJd}}}n}{{{b{AL`}}{b{AL`}}}n}{{{b{ALb}}{b{ALb}}}n}{{{b{ALd}}{b{ALd}}}n}{{{b{ALf}}{b{ALf}}}n}`{{{b{AJf}}{b{dA`}}}Ab}{{{b{AJh}}{b{dA`}}}Ab}{{{b{AJj}}{b{dA`}}}Ab}{{{b{AJl}}{b{dA`}}}Ab}{{{b{AJn}}{b{dA`}}}Ab}{{{b{AK`}}{b{dA`}}}Ab}{{{b{AKb}}{b{dA`}}}Ab}{{{b{AKd}}{b{dA`}}}Ab}{{{b{AKf}}{b{dA`}}}Ab}{{{b{AKh}}{b{dA`}}}Ab}{{{b{AKj}}{b{dA`}}}Ab}{{{b{AKl}}{b{dA`}}}Ab}{{{b{AKn}}{b{dA`}}}Ab}{{{b{AJd}}{b{dA`}}}Ab}{{{b{AL`}}{b{dA`}}}Ab}{{{b{ALb}}{b{dA`}}}Ab}{{{b{ALd}}{b{dA`}}}Ab}{{{b{ALf}}{b{dA`}}}Ab}{cc{}}00000000000000000````{{}c{}}00000000000000000{{{b{AJd}}}{{b{{ACn{ACl}}}}}}`````````````{bc{}}00000000000000000{c{{Ad{e}}}{}{}}00000000000000000{{}{{Ad{c}}}{}}00000000000000000{bAf}00000000000000000``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{ALh}}}ALh}{{b{b{dc}}}h{}}{bh}{{{b{ALh}}{b{dc}}}hOl}{{{b{ALh}}}l}{{{b{ALh}}{b{ALh}}}n}{{{b{ALh}}{b{dA`}}}Ab}?>{{{b{d{O`{ALh}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}=<;:``98{{{b{ALj}}}ALj}76{{{b{ALj}}{b{dc}}}hOl}{{{b{ALj}}}l}{{{b{ALj}}{b{ALj}}}n}{{{b{ALj}}{b{dA`}}}Ab}{cc{}}{{}c{}}{{{b{d{O`{ALj}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}```{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{ALl}}}ALl}{{b{b{dc}}}h{}}{bh}{{{b{ALl}}{b{dc}}}hOl}{{{b{ALl}}}l}{{{b{ALl}}{b{ALl}}}n}{{{b{ALl}}{b{dA`}}}Ab}?>{{{b{d{O`{ALl}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}=<;:```98{{{b{ALn}}}ALn}76{{{b{ALn}}{b{dc}}}hOl}{{{b{ALn}}}l}{{{b{ALn}}{b{ALn}}}n}{{{b{ALn}}{b{dA`}}}Ab}{cc{}}{{}c{}}{{{b{d{O`{ALn}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{AM`}}}AM`}{{b{b{dc}}}h{}}{bh}{{{b{AM`}}{b{dc}}}hOl}{{{b{AM`}}}l}{{{b{AM`}}{b{AM`}}}n}{{{b{AM`}}{b{dA`}}}Ab}?>{{{b{d{O`{AM`}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}=<;:````98{{{b{AMb}}}AMb}76{{{b{AMb}}{b{dc}}}hOl}{{{b{AMb}}}l}{{{b{AMb}}{b{AMb}}}n}{{{b{AMb}}{b{dA`}}}Ab}{cc{}}{{}c{}}{{{b{d{O`{AMb}}}}OnA@`{b{dc}}A@b}{{Ad{hOf}}}A@d}{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}``````````{b{{b{c}}}{}}0000000{{{b{d}}}{{b{dc}}}{}}0000000`{{{b{dAMd}}}h}{{{b{dAMf}}}h}{{{b{dAMh}}}h}{{{b{dAMj}}}h}{{{b{dAMl}}}h}{{{b{dAMn}}}h}{{{b{dAN`}}}h}{{{b{dANb}}}h}{{{b{AMd}}}AMd}{{{b{AMf}}}AMf}{{{b{AMh}}}AMh}{{{b{AMj}}}AMj}{{{b{AMl}}}AMl}{{{b{AMn}}}AMn}{{{b{AN`}}}AN`}{{{b{ANb}}}ANb}{{b{b{dc}}}h{}}0000000{bh}0000000`{{}AMd}{{}AMf}{{}AMh}{{}AMj}{{}AMl}{{}AMn}{{}AN`}{{}ANb}```{{{b{AMd}}}l}{{{b{AMf}}}l}{{{b{AMh}}}l}{{{b{AMj}}}l}{{{b{AMl}}}l}{{{b{AMn}}}l}{{{b{AN`}}}l}{{{b{ANb}}}l}{{{b{AMd}}{b{AMd}}}n}{{{b{AMf}}{b{AMf}}}n}{{{b{AMh}}{b{AMh}}}n}{{{b{AMj}}{b{AMj}}}n}{{{b{AMl}}{b{AMl}}}n}{{{b{AMn}}{b{AMn}}}n}{{{b{AN`}}{b{AN`}}}n}{{{b{ANb}}{b{ANb}}}n}```{{{b{AMd}}{b{dA`}}}Ab}{{{b{AMf}}{b{dA`}}}Ab}{{{b{AMh}}{b{dA`}}}Ab}{{{b{AMj}}{b{dA`}}}Ab}{{{b{AMl}}{b{dA`}}}Ab}{{{b{AMn}}{b{dA`}}}Ab}{{{b{AN`}}{b{dA`}}}Ab}{{{b{ANb}}{b{dA`}}}Ab}{cc{}}0000000`````````{{}c{}}0000000````````````````````````{bc{}}0000000{c{{Ad{e}}}{}{}}0000000{{}{{Ad{c}}}{}}0000000`{bAf}0000000``","D":"GAn","p":[[1,"reference"],[0,"mut"],[5,"RawDigest",2],[1,"unit"],[5,"HexDigest",2],[1,"usize"],[1,"bool"],[5,"Formatter",4306],[8,"Result",4306],[6,"Result",4307],[5,"TypeId",4308],[6,"TeePlatform",63],[1,"str"],[6,"KeyType",63],[5,"FirmwareAttachment",63],[5,"KernelAttachment",63],[5,"Stage0Measurements",63],[5,"Stage1Measurements",63],[5,"OrchestratorMeasurements",63],[5,"Event",63],[5,"EventLog",63],[5,"EventEndorsement",63],[5,"EventEndorsements",63],[5,"RootLayerEvidence",63],[5,"LayerEvidence",63],[5,"ApplicationKeys",63],[5,"Evidence",63],[5,"CertificateAuthority",63],[5,"DiceData",63],[5,"TcbVersion",63],[5,"SkipVerification",63],[5,"VerifyingKey",63],[5,"VerifyingKeySet",63],[5,"VerifyingKeyReferenceValue",63],[5,"ClaimReferenceValue",63],[5,"EndorsementReferenceValue",63],[5,"BinaryReferenceValue",63],[5,"KernelDigests",63],[5,"KernelBinaryReferenceValue",63],[5,"FileReferenceValue",63],[5,"StringReferenceValue",63],[5,"Regex",63],[5,"StringLiterals",63],[5,"RegexReferenceValue",63],[5,"TextReferenceValue",63],[5,"RootLayerReferenceValues",63],[5,"AmdSevReferenceValues",63],[5,"IntelTdxReferenceValues",63],[5,"InsecureReferenceValues",63],[5,"Digests",63],[5,"KernelLayerReferenceValues",63],[5,"SystemLayerReferenceValues",63],[5,"ApplicationLayerReferenceValues",63],[5,"ContainerLayerReferenceValues",63],[5,"EventReferenceValues",63],[5,"OakRestrictedKernelReferenceValues",63],[5,"OakContainersReferenceValues",63],[5,"CbReferenceValues",63],[5,"ReferenceValues",63],[5,"Endorsement",63],[5,"Signature",63],[5,"SignedEndorsement",63],[5,"TransparentReleaseEndorsement",63],[5,"RootLayerEndorsements",63],[5,"KernelLayerEndorsements",63],[5,"SystemLayerEndorsements",63],[5,"ApplicationLayerEndorsements",63],[5,"ContainerLayerEndorsements",63],[5,"OakRestrictedKernelEndorsements",63],[5,"OakContainersEndorsements",63],[5,"CbEndorsements",63],[5,"AmdSevSnpEndorsement",63],[5,"FirmwareEndorsement",63],[5,"KernelEndorsement",63],[5,"SystemEndorsement",63],[5,"ApplicationEndorsement",63],[5,"ContainerEndorsement",63],[5,"Endorsements",63],[5,"AttestationResults",63],[5,"EventAttestationResults",63],[5,"Validity",63],[5,"EndorsementDetails",63],[5,"ExtractedEvidence",63],[5,"RootLayerData",63],[5,"AmdAttestationReport",63],[5,"IntelTdxAttestationReport",63],[5,"FakeAttestationReport",63],[5,"KernelLayerData",63],[5,"ApplicationLayerData",63],[5,"SystemLayerData",63],[5,"ContainerLayerData",63],[5,"EventData",63],[5,"OakRestrictedKernelData",63],[5,"OakContainersData",63],[5,"CbData",63],[5,"OakStandaloneData",63],[5,"VerificationSkipped",63],[5,"RawDigests",63],[5,"ExpectedDigests",63],[5,"KernelExpectedValues",63],[5,"AmdSevExpectedValues",63],[5,"IntelTdxExpectedValues",63],[5,"InsecureExpectedValues",63],[5,"ExpectedRegex",63],[5,"ExpectedStringLiterals",63],[5,"TextExpectedValue",63],[5,"RootLayerExpectedValues",63],[5,"KernelLayerExpectedValues",63],[5,"SystemLayerExpectedValues",63],[5,"ContainerLayerExpectedValues",63],[5,"ApplicationLayerExpectedValues",63],[5,"EventExpectedValues",63],[5,"OakRestrictedKernelExpectedValues",63],[5,"OakContainersExpectedValues",63],[5,"CbExpectedValues",63],[5,"ExpectedValues",63],[6,"Ordering",4309],[6,"Format",2143],[1,"i32"],[6,"Option",4310],[10,"Hasher",4311],[6,"Status",2097],[5,"DecodeError",4312],[5,"String",4313],[6,"Type",2123],[10,"BufMut",4314],[1,"u32"],[6,"WireType",4315],[5,"DecodeContext",4315],[10,"Buf",4316],[6,"Type",2168],[6,"Type",2188],[6,"Type",2207],[6,"EvidenceValues",2227],[6,"Type",2248],[6,"Type",2268],[6,"Type",2288],[6,"Report",2307],[6,"Type",2327],[6,"Type",2347],[6,"Type",2368],[5,"GetImageResponse",2387],[5,"GetApplicationConfigResponse",2387],[5,"SendAttestationEvidenceRequest",2387],[6,"KeyProvisioningRole",2442],[6,"KeyOrigin",2442],[5,"GetKeyProvisioningRoleResponse",2442],[5,"GetGroupKeysResponse",2442],[5,"DeriveSessionKeysRequest",2442],[5,"DeriveSessionKeysResponse",2442],[5,"SignRequest",2442],[5,"SignResponse",2442],[5,"EncryptedRequest",2611],[5,"EncryptedResponse",2611],[5,"AeadEncryptedMessage",2611],[5,"SessionKeys",2611],[5,"Signature",2611],[1,"u8"],[1,"slice"],[5,"CpuProfileRequest",2706],[5,"CpuProfileResponse",2706],[5,"InitializeRequest",2742],[5,"InitializeResponse",2742],[5,"InvokeRequest",2742],[5,"InvokeResponse",2742],[5,"LookupDataEntry",2742],[5,"LookupDataChunk",2742],[5,"ExtendNextLookupDataRequest",2742],[5,"ExtendNextLookupDataResponse",2742],[5,"FinishNextLookupDataRequest",2742],[5,"FinishNextLookupDataResponse",2742],[5,"AbortNextLookupDataResponse",2742],[5,"Empty",2742],[5,"ReserveRequest",2742],[5,"ReserveResponse",2742],[5,"ConfigurationReport",2996],[5,"ServerPolicy",2996],[6,"HandlerType",3034],[5,"TcpCommunicationChannel",3034],[5,"VsockCommunicationChannel",3034],[5,"WasmtimeConfig",3034],[5,"ApplicationConfig",3034],[1,"u64"],[6,"CommunicationChannel",3148],[5,"PoolingAllocationConfig",3167],[6,"Data",3222],[5,"Entry",3241],[5,"LookupRequest",3260],[5,"LookupResponse",3260],[5,"EchoAndPanicRequest",3260],[5,"EchoAndPanicResponse",3260],[6,"Mode",3336],[5,"ReadRequestRequest",3362],[5,"ReadRequestResponse",3362],[5,"WriteResponseRequest",3362],[5,"WriteResponseResponse",3362],[5,"LogRequest",3362],[5,"LogResponse",3362],[5,"LookupDataRequest",3362],[5,"LookupDataResponse",3362],[5,"LookupDataMultiRequest",3362],[5,"LookupDataMultiResponse",3362],[5,"TestRequest",3362],[5,"TestResponse",3362],[5,"BytesValue",3362],[5,"GroupKeys",3596],[5,"GetGroupKeysRequest",3596],[5,"GetGroupKeysResponse",3596],[5,"InitialData",3651],[5,"EncryptedMessage",3671],[5,"EndorsedEvidence",3671],[5,"GetEndorsedEvidenceRequest",3671],[5,"GetEndorsedEvidenceResponse",3671],[5,"InvokeRequest",3671],[5,"InvokeResponse",3671],[5,"RequestWrapper",3671],[5,"ResponseWrapper",3671],[5,"AttestRequest",3671],[5,"AttestResponse",3671],[5,"NoiseHandshakeMessage",3671],[5,"SessionBinding",3671],[5,"HandshakeRequest",3671],[5,"HandshakeResponse",3671],[5,"PlaintextMessage",3671],[5,"SessionRequest",3671],[5,"SessionRequestWithSessionId",3671],[5,"SessionResponse",3671],[6,"HandshakeType",4010],[6,"HandshakeType",4028],[6,"Request",4046],[6,"Response",4065],[6,"Request",4084],[6,"Response",4104],[5,"Profile",4125],[5,"ValueType",4125],[5,"Sample",4125],[5,"Label",4125],[5,"Mapping",4125],[5,"Location",4125],[5,"Line",4125],[5,"Function",4125]],"r":[],"b":[],"c":"OjAAAAEAAAAAABIAEAAAACoEMwSkBH4FfwUDBgYGBwYLBgwGHAY7BlsGQQhuCPEJ8gkgDBcN","e":"OzAAAAEAAEMN1wAAAAIABQAXAB8AAAAiAB0AQQAEAEgAAABMAAAATgACAFMAAABVAAAAVwAAAFsAAABjAAAAaAADAHAAAwB1AAEAegAAAH0AAACAAAAAggAAAIQAAgCIAAIAjQADAJIAAACUAAIAmAAAAJ0AAACfAAAAoQAAAKQAAACoAAAAqgABAK4AAgCyAAAAuQAGAMUAAwDNAM8AnwGiAUgDAwBNAwQAVANnAL0DAQDEA2UANARpAJ8EAACiBAEApQQBAKwEZwCFBQEAiwUBAJIFAQD/BQEAAwYCAAcGAAALBgAADgYKACAGAAAiBgIAJgYAAC0GAQA9BgAARAYLAGEGAABpBgEAbQYGAHoGOQG3B3EAKwgEADIIAwA3CAgAQwgAAEYIBQBPCAUAVwgBAFwIAwBiCAAAZAgIAHAIAABzCA4AhAgBAIkIAwCPCAUAlwgBAJwIDACrCAEAsAgNAMAIAQDFCAwA1AgBANkIDADoCAEA7QgLAPsIAQAACQMABQkAAAgJBAAPCQEAFAkEABoJBgAjCQEAKAkNADgJAQA9CQMARAkEAEsJAQBQCQQAVgkSAGoJDAB6CQAAfgkTAJMJBQCbCU0A9QkCAAQKBAAKCgAAEAojADgKKgBlCgkAeQoAAH4KKwCuCgoAugqQAEwLDQB2Cz4AtwsLAMULBwDSCwcA2wsAAN0LAADgCwEA5QsdAAQMBAANDA0AJAwAAC0MAAA2DBQATgwGAFcMAQBcDAMAYQwJAG4MAABwDAAAcgwAAHQMAAB2DAAAeAwAAHoMAAB8DAAAfgwAAIAMAACCDAAAhgwAAIgMAQCLDAAAjQwAAI8MAACRDAAAkwwFAJoMBAChDAEApgwDAKsMCQC3DAUAvgwsAPMMAAD2DAAA+AwTAA0NCAAZDQAAHA1yAJANJgDSDVUAKQ4DAC4OAgA0DgAAOA4LAEYOBwBPDgEAUw4EAFwOAQBgDgEAZA4BAGsOAABvDiMAlA5sAAMPAAAGDwAACA8kAEEPAQBWDwQAXA8BAGMPTgC0DwEAuQ8KAMYPAQDLDwsA2Q8BAN4PCwDsDwEA8Q8MAAAQAQAFEAwAFBABABkQBwAiEAEAJxAPADgQHwBZEAcAZBAPAHcQBwCJEAAAixABAKUQAACwEBcAyRAHAA=="}],["oak_restricted_kernel_dice",{"t":"IIHHH","n":["DerivedKey","DigestSha2_256","generate_derived_key","generate_dice_data","measure_digest_sha2_256"],"q":[[0,"oak_restricted_kernel_dice"],[5,"oak_dice::evidence"]],"i":"`````","f":"``{{{d{b}}{d{f}}}h}{{b{d{f}}}j}{{{d{{n{l}}}}}f}","D":"f","p":[[5,"Stage0DiceData",5],[1,"reference"],[8,"DigestSha2_256",0],[8,"DerivedKey",0],[5,"RestrictedKernelDiceData",5],[1,"u8"],[1,"slice"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAIAEAAAAAIAAwAFAA=="}],["oak_restricted_kernel_interface",{"t":"SSSESECCCQCPPPPPPGNNNNNNNNNNNNSSHHHHHHHHHHHHHHPPTTTPFFTTTPGSPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["DERIVED_KEY_FD","DICE_DATA_FD","EVENT_LOG_FD","Errno","OAK_CHANNEL_FD","Syscall","errno","initial_data","syscall","","syscalls","EBADF","EFAULT","EINVAL","EIO","ENOMEM","ENOSYS","Errno","borrow","borrow_mut","eq","fmt","","from","from_repr","into","to_string","try_from","try_into","type_id","INITIAL_DATA_HEADER_SIZE","INITIAL_DATA_V1_HEADER","exit","fsync","mmap","read","sys_exit","sys_fsync","sys_mmap","sys_read","sys_unstable_create_proccess","sys_unstable_switch_proccess","sys_write","unstable_create_proccess","unstable_switch_proccess","write","Exit","Fsync","MAP_ANONYMOUS","MAP_FIXED","MAP_PRIVATE","Mmap","MmapFlags","MmapProtection","PROT_EXEC","PROT_READ","PROT_WRITE","Read","Syscall","UNSTABLE_SYSCALL_SPACE","UnstableCreateProcess","UnstableSwitchProcess","Write","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","borrow_mut","","","complement","","contains","","difference","","empty","","extend","","fmt","","","","","","","","","","from","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","from_repr","insert","","intersection","","intersects","","into","","","into_iter","","is_all","","is_empty","","iter","","iter_names","","not","","remove","","set","","sub","","sub_assign","","symmetric_difference","","toggle","","try_from","","","try_into","","","type_id","","","union",""],"q":[[0,"oak_restricted_kernel_interface"],[11,"oak_restricted_kernel_interface::errno"],[30,"oak_restricted_kernel_interface::initial_data"],[32,"oak_restricted_kernel_interface::syscall"],[46,"oak_restricted_kernel_interface::syscalls"],[167,"core::fmt"],[168,"core::result"],[169,"core::option"],[170,"alloc::string"],[171,"core::any"],[172,"core::ffi"],[173,"core::iter::traits::collect"],[174,"bitflags::iter"]],"i":"```````````f00000`000000000000````````````````Cf0Bd001``Bb002``22201010101010011010120120101010101012000011111201010011010101201010120101010101010101010101010120120120101","f":"``````````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}{b{f}}}h}{{{b{f}}{b{dj}}}l}{{{b{f}}{b{dj}}}{{Ab{nA`}}}}{cc{}}{Ad{{Af{f}}}}{{}c{}}{bAh}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bAj}``{AlAn}{Al{{Ab{nf}}}}{{{Af{B`}}AdBbBdAlBf}{{Ab{{b{d{Bj{Bh}}}}f}}}}{{Al{b{d{Bj{Bh}}}}}{{Ab{Blf}}}}{Bfn}{BfBn}{{B`C`BfBfBfBf}Ad}{{BfB`C`}Bn}{{B`C`}Bn}{C`Bn}2{{{b{{Bj{Bh}}}}}{{Ab{Blf}}}}{Bl{{Ab{Blf}}}}{{Al{b{{Bj{Bh}}}}}{{Ab{Blf}}}}`````````````````{{}Bb}{{}Bd}{{BbBb}Bb}{{BdBd}Bd}{{{b{dBb}}Bb}n}{{{b{dBd}}Bd}n}3210{{{b{Bb}}}Al}0{{{b{Bd}}}Al}05432{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{BbBb}{BdBd}{{{b{Bb}}Bb}h}{{{b{Bd}}Bd}h};:=<{{{b{dBb}}c}n{{Cd{}{{Cb{Bb}}}}}}{{{b{dBd}}c}n{{Cd{}{{Cb{Bd}}}}}}{{{b{Cf}}{b{dj}}}l}{{{b{Bb}}{b{dj}}}l}000{{{b{Bd}}{b{dj}}}l}0000{cc{}}00{Al{{Af{Bb}}}}{Al{{Af{Bd}}}}{AlBb}0{AlBd}010{cBb{{Cd{}{{Cb{Bb}}}}}}{cBd{{Cd{}{{Cb{Bd}}}}}}{{{b{Ch}}}{{Af{Bb}}}}{{{b{Ch}}}{{Af{Bd}}}}{Bl{{Af{Cf}}}}{{{b{dBb}}Bb}n}{{{b{dBd}}Bd}n}{{BbBb}Bb}{{BdBd}Bd}{{{b{Bb}}Bb}h}{{{b{Bd}}Bd}h}{{}c{}}00{Bbc{}}{Bdc{}}{{{b{Bb}}}h}{{{b{Bd}}}h}10{{{b{Bb}}}{{Cj{Bb}}}}{{{b{Bd}}}{{Cj{Bd}}}}{{{b{Bb}}}{{Cl{Bb}}}}{{{b{Bd}}}{{Cl{Bd}}}}{BbBb}{BdBd}{{{b{dBb}}Bb}n}{{{b{dBd}}Bd}n}{{{b{dBb}}Bbh}n}{{{b{dBd}}Bdh}n}{{BbBb}Bb}{{BdBd}Bd}541054{c{{Ab{e}}}{}{}}00{{}{{Ab{c}}}{}}00{bAj}0043","D":"Ln","p":[[1,"reference"],[0,"mut"],[6,"Errno",11],[1,"bool"],[5,"Formatter",167],[8,"Result",167],[1,"unit"],[5,"Error",167],[6,"Result",168],[1,"isize"],[6,"Option",169],[5,"String",170],[5,"TypeId",171],[1,"i32"],[1,"never"],[6,"c_void",172],[5,"MmapProtection",46],[5,"MmapFlags",46],[8,"c_int",172],[1,"u8"],[1,"slice"],[1,"usize"],[8,"c_ssize_t",172],[8,"c_size_t",172],[17,"Item"],[10,"IntoIterator",173],[6,"Syscall",46],[1,"str"],[5,"Iter",174],[5,"IterNames",174]],"r":[[3,11],[5,46]],"b":[[21,"impl-Debug-for-Errno"],[22,"impl-Display-for-Errno"],[73,"impl-MmapProtection"],[74,"impl-Flags-for-MmapProtection"],[75,"impl-Flags-for-MmapFlags"],[76,"impl-MmapFlags"],[98,"impl-Binary-for-MmapProtection"],[99,"impl-Octal-for-MmapProtection"],[100,"impl-LowerHex-for-MmapProtection"],[101,"impl-UpperHex-for-MmapProtection"],[102,"impl-UpperHex-for-MmapFlags"],[103,"impl-Debug-for-MmapFlags"],[104,"impl-Binary-for-MmapFlags"],[105,"impl-Octal-for-MmapFlags"],[106,"impl-LowerHex-for-MmapFlags"],[112,"impl-Flags-for-MmapProtection"],[113,"impl-MmapProtection"],[114,"impl-MmapFlags"],[115,"impl-Flags-for-MmapFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEAAEAAAAAAABAAAAAYAAwALAAAAEwAEABsABAAhAA0ANQABADkAAABLAAEAUgAFAGIACQBxAAAAdAAAAIUAAQCdAAgA"}],["oak_restricted_kernel_launcher",{"t":"H","n":["create"],"q":[[0,"oak_restricted_kernel_launcher"],[1,"oak_launcher_utils::launcher"],[2,"alloc::boxed"],[3,"oak_launcher_utils::channel"],[4,"core::error"],[5,"core::result"]],"i":"`","f":"{b{{n{{j{{f{d}}h}}{f{l}}}}}}","D":"`","p":[[5,"Params",1],[10,"GuestInstance",1],[5,"Box",2],[5,"ConnectorHandle",3],[1,"tuple"],[10,"Error",4],[6,"Result",5]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA="}],["oak_restricted_kernel_sdk",{"t":"KKKKCCCMXMMCEMMCCFFNNNNNNNNNNNNNNNNNNNNFKKNNNMNNNNMNHNNNNMNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHNNNNNNNNNCNNENHCCCNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNKFNNNNNNNMNMNNNNNFNNNNNNNNNNNNNFNNNNNNNNHNNNNN","n":["Attester","EncryptionKeyHandle","Endorser","Signer","attestation","channel","crypto","endorse","entrypoint","extend","generate_recipient_context","handler","oak_attestation_verification","quote","sign","testing","utils","InstanceAttester","InstanceEndorser","borrow","","borrow_mut","","create","endorse","extend","from","","into","","quote","try_from","","try_into","","type_id","","vzip","","FileDescriptorChannel","Read","Write","borrow","borrow_mut","default","flush","","from","into","new","read_exact","","start_blocking_server","try_from","try_into","type_id","vzip","write_all","","InstanceEncryptionKeyHandle","InstanceSessionBinder","InstanceSigner","bind","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","create","","","from","","","generate_recipient_context","into","","","sign","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","EncryptionHandler","borrow","borrow_mut","create","from","into","invoke","try_from","try_into","type_id","vzip","MockAttester","MockEncryptionKeyHandle","MockSigner","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","create","","","extend","from","","","generate_recipient_context","into","","","quote","sign","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","Stderr","StderrLogger","alloc_error_handler","borrow","","borrow_mut","","enabled","flush","","from","","heap","into","","log","","panic_handler","samplestore","sync","timer","try_from","","try_into","","type_id","","vzip","","write_str","GrowableHeap","LockedGrowableHeap","alloc","allocate","borrow","","borrow_mut","","dealloc","deallocate","deref","empty","","from","","into","","try_from","","try_into","","type_id","","vzip","","SampleStore","StaticSampleStore","borrow","borrow_mut","eq","fmt","from","into","new","percentile","","record","","try_from","try_into","type_id","vzip","OnceCell","borrow","borrow_mut","default","deinit","from","get","into","new","set","try_from","try_into","type_id","vzip","Timer","borrow","borrow_mut","elapsed","fmt","from","into","new","new_rdtsc","rdtsc","timed","try_from","try_into","type_id","vzip"],"q":[[0,"oak_restricted_kernel_sdk"],[17,"oak_restricted_kernel_sdk::attestation"],[39,"oak_restricted_kernel_sdk::channel"],[59,"oak_restricted_kernel_sdk::crypto"],[100,"oak_restricted_kernel_sdk::handler"],[111,"oak_restricted_kernel_sdk::testing"],[153,"oak_restricted_kernel_sdk::utils"],[183,"oak_restricted_kernel_sdk::utils::heap"],[208,"oak_restricted_kernel_sdk::utils::samplestore"],[225,"oak_restricted_kernel_sdk::utils::sync"],[239,"oak_restricted_kernel_sdk::utils::timer"],[254,"oak_attestation_types::endorser"],[255,"oak_proto_rust::oak::attestation::v1"],[256,"core::option"],[257,"anyhow"],[258,"core::result"],[259,"oak_attestation_types::attester"],[260,"oak_crypto::encryption_key"],[261,"oak_crypto::hpke"],[262,"oak_crypto::signer"],[263,"alloc::vec"],[264,"core::any"],[265,"oak_channel"],[266,"alloc::boxed"],[267,"oak_core::samplestore"],[268,"micro_rpc"],[269,"alloc::sync"],[270,"core::ops::function"],[271,"oak_proto_rust::oak::crypto::v1"],[272,"core::alloc::layout"],[273,"log"],[274,"core::panic::panic_info"],[275,"core::fmt"],[276,"oak_enclave_runtime_support::heap"],[277,"core::ptr::non_null"],[278,"spinning_top::spinlock"],[279,"lock_api::mutex"],[280,"oak_core::sync"],[281,"oak_core::timer"],[282,"oak_restricted_kernel_sdk_proc_macro"],[283,"oak_enclave_runtime_support"],[284,"oak_core"]],"i":"```````b`AbAj``1An````BbBf101011010110101010```Bj00Bl1111C`2`222212```Cn0D`Db2101010102102101210010210210210210`Df000000000```EdE`Eb210101010210221002102110210210210210```FbEh1001010`10`0````101010101``FhFj010110101010101010101``Gd000000Cf1011111`Gl000000000000`Gn0000000`00000","f":"```````{{{d{b}}{h{{d{f}}}}}{{n{jl}}}}`{{{d{A`Ab}}{d{{Af{Ad}}}}}{{n{Ahl}}}}{{{d{Aj}}{d{{Af{Ad}}}}}{{n{All}}}}``{{{d{Ab}}}{{n{fl}}}}{{{d{An}}{d{{Af{Ad}}}}}{{B`{Ad}}}}````{d{{d{c}}}{}}0{{{d{A`}}}{{d{A`c}}}{}}0{{}{{Bd{Bb}}}}{{{d{Bf}}{h{{d{f}}}}}{{Bd{j}}}}{{{d{A`Bb}}{d{{Af{Ad}}}}}{{Bd{Ah}}}}{cc{}}0{{}c{}}0{{{d{Bb}}}{{Bd{f}}}}{c{{n{e}}}{}{}}0{{}{{n{c}}}{}}0{dBh}044```:9{{}Bj}{{{d{A`Bl}}}{{n{Ahl}}}}{{{d{A`Bj}}}{{Bd{Ah}}}}87{BnBj}{{{d{A`C`}}{d{A`{Af{Ad}}}}}{{n{Ahl}}}}{{{d{A`Bj}}{d{A`{Af{Ad}}}}}{{Bd{Ah}}}}{{{Cd{Cb}}c{d{A`Cf}}}{{Bd{Ch}}}{{Cl{}{{Cj{Ch}}}}}}987;{{{d{A`Bl}}{d{{Af{Ad}}}}}{{n{Ahl}}}}{{{d{A`Bj}}{d{{Af{Ad}}}}}{{Bd{Ah}}}}```{{{d{Cn}}{d{{Af{Ad}}}}}{{B`{Ad}}}}{d{{d{c}}}{}}00{{{d{A`}}}{{d{A`c}}}{}}00{{{d{D`}}}D`}{{{d{Db}}}Db}{{d{d{A`c}}}Ah{}}0{dAh}0{{}{{Bd{Cn}}}}{{}{{Bd{D`}}}}{{}{{Bd{Db}}}}{cc{}}00{{{d{D`}}{d{{Af{Ad}}}}}{{Bd{Al}}}}{{}c{}}00{{{d{Db}}{d{{Af{Ad}}}}}{{B`{Ad}}}}{dc{}}0{c{{n{e}}}{}{}}00{{}{{n{c}}}{}}00{dBh}00555`{d{{d{c}}}{}}{{{d{A`}}}{{d{A`c}}}{}}{{{Dd{Aj}}c}{{Df{c}}}{{Dj{{B`{Ad}}}{{Dh{{B`{Ad}}}}}}}}:8{{{Df{c}}{d{Dl}}}{{Bd{Dn}}}{{Dj{{B`{Ad}}}{{Dh{{B`{Ad}}}}}}}}6549```333222{{{d{E`}}}E`}{{{d{Eb}}}Eb}{{d{d{A`c}}}Ah{}}0{dAh}0{{}{{Bd{Ed}}}}{{}{{Bd{E`}}}}{{}{{Bd{Eb}}}}{{{d{A`Ed}}{d{{Af{Ad}}}}}{{Bd{Ah}}}}{cc{}}00{{{d{Eb}}{d{{Af{Ad}}}}}{{Bd{Al}}}}{{}c{}}00{{{d{Ed}}}{{Bd{f}}}}{{{d{E`}}{d{{Af{Ad}}}}}{{B`{Ad}}}}{dc{}}0{c{{n{e}}}{}{}}00{{}{{n{c}}}{}}00{dBh}00666``{EfCh}{d{{d{c}}}{}}0{{{d{A`}}}{{d{A`c}}}{}}0{{{d{Eh}}{d{Ej}}}El}{{}Ah}{{{d{Eh}}}Ah}>>`<<`{{{d{Eh}}{d{En}}}Ah}{{{d{F`}}}Ch}```::9988>>{{{d{A`Fb}}{d{Fd}}}{{n{AhFf}}}}``{{{d{Fh}}Ef}Ad}{{{d{A`Fj}}Ef}{{n{{Fl{Ad}}Ah}}}}9988{{{d{Fh}}AdEf}Ah}{{{d{A`Fj}}{Fl{Ad}}Fn}Ah}{{{d{Fh}}}{{d{{Gb{G`Fj}}}}}}{{}Fj}{{}Fh}{cc{}}0{{}c{}}0{c{{n{e}}}{}{}}0{{}{{n{c}}}{}}0{dBh}033``{d{{d{c}}}{}}{{{d{A`}}}{{d{A`c}}}{}}{{{d{Gd}}{d{Gd}}}El}{{{d{Gd}}{d{A`Gf}}}{{n{AhFf}}}}87{{}{{h{Gd}}}}{{{d{Cf}}Gh}{{h{Gj}}}}{{{d{Gd}}Gh}{{h{Gj}}}}{{{d{A`Cf}}Gj}Ah}{{{d{A`Gd}}Gj}Ah};:9<`87{{}{{Gl{c}}}{}}{{{d{{Gl{c}}}}}{{h{c}}}{}}?{{{d{{Gl{c}}}}}{{h{{d{c}}}}}{}}?2{{{d{{Gl{c}}}}c}{{n{Ahc}}}{}}?>={{}c{}}`=<{{{d{Gn}}}Gj}{{{d{Gn}}{d{A`Gf}}}{{n{AhFf}}}}{cc{}}3{GjGn}{{}Gn}{{}Gj}{cGjDj}{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{dBh}:","D":"Jd","p":[[10,"Endorser",0,254],[1,"reference"],[5,"Evidence",255],[6,"Option",256],[5,"Endorsements",255],[5,"Error",257],[6,"Result",258],[0,"mut"],[10,"Attester",0,259],[1,"u8"],[1,"slice"],[1,"unit"],[10,"EncryptionKeyHandle",0,260],[5,"RecipientContext",261],[10,"Signer",0,262],[5,"Vec",263],[5,"InstanceAttester",17],[8,"Result",257],[5,"InstanceEndorser",17],[5,"TypeId",264],[5,"FileDescriptorChannel",39],[10,"Write",39,265],[1,"i32"],[10,"Read",39,265],[10,"Channel",265],[5,"Box",266],[10,"SampleStore",208,267],[1,"never"],[17,"Error"],[10,"Transport",268],[5,"InstanceSessionBinder",59],[5,"InstanceEncryptionKeyHandle",59],[5,"InstanceSigner",59],[5,"Arc",269],[5,"EncryptionHandler",100],[17,"Output"],[10,"FnOnce",270],[5,"EncryptedRequest",271],[5,"EncryptedResponse",271],[5,"MockSigner",111],[5,"MockEncryptionKeyHandle",111],[5,"MockAttester",111],[5,"Layout",272],[5,"StderrLogger",153],[5,"Metadata",273],[1,"bool"],[5,"Record",273],[5,"PanicInfo",274],[5,"Stderr",153],[1,"str"],[5,"Error",275],[5,"LockedGrowableHeap",183,276],[5,"GrowableHeap",183,276],[5,"NonNull",277],[1,"usize"],[5,"RawSpinlock",278],[5,"Mutex",279],[5,"StaticSampleStore",208,267],[5,"Formatter",275],[1,"f64"],[1,"u64"],[5,"OnceCell",225,280],[5,"Timer",239,281]],"r":[[0,259],[1,260],[2,254],[3,262],[8,282],[40,265],[41,265],[165,283],[171,284],[172,284],[173,284],[183,276],[184,276],[208,267],[209,267],[225,280],[239,281],[248,281]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKwAJAAAAAAABAAAAAsAAQAPAAAAFAAGAB8ACAArAAEALgABADIAAgA2AAUAPQAAAD8ADwBSAAAAVgAOAGYAAgBrAAQAcwAPAIYAAACKABAAnQAGAKkAAQCvAAgAugAGAMIAAgDJAAgA0wADANkAAADbAAAA3QAEAOMAAgDqAAAA7AADAPEAAQD0AAAA9wAAAPsAAwA="}],["oak_session",{"t":"EKEECCCCMCCMCCKFKFGPFFPPFPMNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKFFFFNNNNOOOONNNNNNNNNNNNNNOONNNNNNOONNNNNNOOMNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNFFNNNNONNNNNNNNNNNNNNNNNNFFFGKKPPPPFFNNNNNNNNNNNNMNNONNNOONNNNNNNNMNNNNONNNNNNMNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNNNNFKNNMNNNNNNNFFKNNNNNNNNNNNNMNNNNMNNNNNNNNNNMNNKKFFGFFGPPPPNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNN","n":["ClientSession","ProtocolEngine","ServerSession","Session","attestation","config","dice_attestation","encryptors","get_outgoing_message","handshake","key_extractor","put_incoming_message","session","session_binding","AttestationAggregator","AttestationFailure","AttestationProvider","AttestationSuccess","AttestationType","Bidirectional","ClientAttestationProvider","DefaultAttestationAggregator","PeerUnidirectional","SelfUnidirectional","ServerAttestationProvider","Unattested","aggregate_attestation_results","","attestation_results","borrow","","","","","","borrow_mut","","","","","","clone","clone_into","clone_to_uninit","create","","error_messages","fmt","","from","","","","","","","get_outgoing_message","","into","","","","","","put_incoming_message","","reason","take_attestation_result","","","to_owned","to_string","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","AttestationProviderConfig","EncryptorConfig","EncryptorProvider","HandshakerConfig","OrderedChannelEncryptorProvider","SessionConfig","SessionConfigBuilder","add_peer_verifier","add_self_attester","add_self_endorser","add_session_binder","attestation_aggregator","attestation_provider_config","attestation_type","binding_key_extractor","borrow","","","","","","borrow_mut","","","","","","build","builder","encryptor_config","encryptor_provider","from","","","","","","handshake_type","handshaker_config","into","","","","","","peer_static_public_key","peer_verifiers","provide_encryptor","","self_attesters","self_endorsers","self_static_private_key","session_binders","set_binding_key_extractor","set_encryption_provider","set_peer_static_public_key","set_self_private_key","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","DiceAttestationVerifier","borrow","borrow_mut","create","from","into","try_from","try_into","type_id","verify","vzip","OrderedChannelEncryptor","UnorderedChannelEncryptor","borrow","","borrow_mut","","crypter","decrypt","","encrypt","","from","","into","","try_from","","","","try_into","","type_id","","vzip","","ClientHandshaker","ClientHandshakerBuilder","HandshakeResult","HandshakeType","Handshaker","HandshakerBuilder","NoiseKK","NoiseKN","NoiseNK","NoiseNN","ServerHandshaker","ServerHandshakerBuilder","borrow","","","","","","borrow_mut","","","","","","build","","","client_binding_expected","clone","clone_into","clone_to_uninit","config","","create","fmt","from","","","","","","get_handshake_hash","","","get_outgoing_message","","handshake_hash","into","","","","","","is_handshake_complete","","","new","put_incoming_message","","session_bindings","session_keys","take_session_keys","","","to_owned","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","DefaultSigningKeyExtractor","KeyExtractor","borrow","borrow_mut","extract_verifying_key","","from","into","try_from","try_into","type_id","vzip","ClientSession","ServerSession","Session","borrow","","borrow_mut","","create","","from","","get_outgoing_message","","into","","is_open","","","put_incoming_message","","read","","","try_from","","try_into","","type_id","","vzip","","write","","","SessionBinder","SessionBindingVerifier","SignatureBinder","SignatureBinderBuilder","SignatureBinderBuilderError","SignatureBindingVerifier","SignatureBindingVerifierBuilder","SignatureBindingVerifierBuilderError","UninitializedField","","ValidationError","","additional_data","","bind","","borrow","","","","","","borrow_mut","","","","","","build","","default","","fmt","","","","from","","","","","","","","","","into","","","","","","signer","to_string","","try_from","","","","","","try_into","","","","","","type_id","","","","","","verifier","verify_binding","","vzip","","","","",""],"q":[[0,"oak_session"],[14,"oak_session::attestation"],[96,"oak_session::config"],[177,"oak_session::dice_attestation"],[188,"oak_session::encryptors"],[213,"oak_session::handshake"],[302,"oak_session::key_extractor"],[314,"oak_session::session"],[348,"oak_session::session_binding"],[430,"core::option"],[431,"anyhow"],[432,"alloc::string"],[433,"oak_proto_rust::oak::attestation::v1"],[434,"alloc::collections::btree::map"],[435,"core::result"],[436,"core::fmt"],[437,"oak_proto_rust::oak::session::v1"],[438,"core::any"],[439,"oak_attestation_verification_types::verifier"],[440,"alloc::boxed"],[441,"oak_attestation_types::attester"],[442,"oak_attestation_types::endorser"],[443,"oak_proto_rust::oak::crypto::v1"],[444,"oak_crypto::encryptor"],[445,"oak_crypto::identity_key"],[446,"oak_attestation_verification_types::util"],[447,"alloc::sync"],[448,"alloc::vec"],[449,"oak_crypto::verifier"],[450,"derive_builder::error"],[451,"oak_crypto::signer"]],"i":"````````d``0```````An``00`0nAlAf01BbBfAh634210666621000342100621342106210C`3271453217453217453217453217```````Cd000B`D`1002Dj2GfJb35241053303524101335241014Dd355226666463521463521463521463521`Ej000000000``F`Fd100101010101100101010``````Db000``JdFnGbG`Gd5432105Fj4336664326543216Fl32326654327032232660327654327654327654327654327``Hb0Dl1111111```HdHf1010101010Hl212102121212121021````````IfIj10I`IbCnId35024Ih4613504343665546661355504613504654613504613504613503J`1572461","f":"````````{{{f{bd}}}{{j{{h{c}}}}}{}}``{{{f{bd}}{f{c}}}{{j{{h{l}}}}}{}}``````````````{{{f{n}}{Ad{A`Ab}}}{{Aj{AfAh}}}}{{{f{Al}}{Ad{A`Ab}}}{{Aj{AfAh}}}}`{f{{f{c}}}{}}00000{{{f{b}}}{{f{bc}}}{}}00000{{{f{An}}}An}{{f{f{bc}}}l{}}{fl}{B`{{Aj{BbBd}}}}{B`{{Aj{BfBd}}}}`{{{f{Ah}}{f{bBh}}}Bj}0{cc{}}000{BdAh}11{{{f{bBb}}}{{j{{h{Bl}}}}}}{{{f{bBf}}}{{j{{h{Bn}}}}}}{{}c{}}00000{{{f{bBb}}{f{Bn}}}{{j{{h{l}}}}}}{{{f{bBf}}{f{Bl}}}{{j{{h{l}}}}}}`{{{f{bC`}}}{{h{{Aj{AfAh}}}}}}{{{f{bBb}}}{{h{{Aj{AfAh}}}}}}{{{f{bBf}}}{{h{{Aj{AfAh}}}}}}{fc{}}{fA`}{c{{Aj{e}}}{}{}}00000{{}{{Aj{c}}}{}}00000{fCb}00000::::::```````{{CdA`{Ch{Cf}}}Cd}{{CdA`{Ch{Cj}}}Cd}{{CdA`{Ch{Cl}}}Cd}{{CdA`{Ch{Cn}}}Cd}````{f{{f{c}}}{}}00000{{{f{b}}}{{f{bc}}}{}}00000{CdD`}{{AnDb}Cd}``{cc{}}00000``{{}c{}}00000``{{{f{Dd}}Df}{{Aj{{Ch{Dh}}Bd}}}}{{{f{Dj}}Df}{{Aj{{Ch{Dh}}Bd}}}}````{{Cd{Ch{Dl}}}Cd}{{Cd{Ch{Dd}}}Cd}{{Cd{f{{E`{Dn}}}}}Cd}{{Cd{Ch{Eb}}}Cd}{c{{Aj{e}}}{}{}}00000{{}{{Aj{c}}}{}}00000{fCb}00000999999`>={{Ed{Eh{Ef}}}Ej};:321{{{f{Ej}}{f{El}}{f{En}}}{{j{Ab}}}};``{f{{f{c}}}{}}0{{{f{b}}}{{f{bc}}}{}}0`{{{f{bF`}}{f{Fb}}}{{j{Fb}}}}{{{f{bFd}}{f{Fb}}}{{j{Fb}}}}10{cc{}}0{{}c{}}0:{Df{{Aj{F`Bd}}}}{{{Fh{DfFf}}}{{Aj{FdBd}}}}<;;::22````````````777777666666{{{Ch{Fj}}}{{Aj{cBd}}}Fl}{{{Ch{Fn}}}{{Aj{G`Bd}}}}{{{Ch{Gb}}}{{Aj{GdBd}}}}`{{{f{Db}}}Db}{{f{f{bc}}}l{}}{fl}``{Gf{{j{G`}}}}{{{f{Db}}{f{bBh}}}Bj};;;;;;{{{f{Fl}}}{{Aj{{Gh{Dn}}Bd}}}}{{{f{G`}}}{{Aj{{Gh{Dn}}Bd}}}}{{{f{Gd}}}{{Aj{{Gh{Dn}}Bd}}}}{{{f{bG`}}}{{j{{h{Gj}}}}}}{{{f{bGd}}}{{j{{h{Gl}}}}}}`??????{{{f{Fl}}}Gn}{{{f{G`}}}Gn}{{{f{Gd}}}Gn}{{GfGn}Gd}{{{f{bG`}}{f{Gl}}}{{j{{h{l}}}}}}{{{f{bGd}}{f{Gj}}}{{j{{h{l}}}}}}``{Fl{{Aj{DfBd}}}}{G`{{Aj{DfBd}}}}{Gd{{Aj{DfBd}}}}{fc{}}{c{{Aj{e}}}{}{}}00000{{}{{Aj{c}}}{}}00000{fCb}00000{{}c{}}00000``{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{Dl}}{f{Ab}}}{{Aj{{Ch{H`}}Bd}}}}{{{f{Hb}}{f{Ab}}}{{Aj{{Ch{H`}}Bd}}}}{cc{}}58765```4433{D`{{Aj{HdBd}}}}{D`{{Aj{HfBd}}}}22{{{f{bHd}}}{{Aj{{h{Hh}}Bd}}}}{{{f{bHf}}}{{Aj{{h{Hj}}Bd}}}}99{{{f{Hl}}}Gn}{{{f{Hd}}}Gn}{{{f{Hf}}}Gn}{{{f{bHd}}{f{Hj}}}{{Aj{{h{l}}Bd}}}}{{{f{bHf}}{f{Hh}}}{{Aj{{h{l}}Bd}}}}{{{f{bHl}}}{{Aj{{h{Hn}}Bd}}}}{{{f{bHd}}}{{Aj{{h{Hn}}Bd}}}}{{{f{bHf}}}{{Aj{{h{Hn}}Bd}}}}{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{fCb}0{{}c{}}0{{{f{bHl}}{f{Hn}}}{{Aj{lBd}}}}{{{f{bHd}}{f{Hn}}}{{Aj{lBd}}}}{{{f{bHf}}{f{Hn}}}{{Aj{lBd}}}}````````````{{I`{Gh{Dn}}}I`}{{Ib{Gh{Dn}}}Ib}{{{f{Cn}}{f{{E`{Dn}}}}}{{Gh{Dn}}}}{{{f{Id}}{f{{E`{Dn}}}}}{{Gh{Dn}}}}{f{{f{c}}}{}}00000{{{f{b}}}{{f{bc}}}{}}00000{I`{{Aj{IdIf}}}}{Ib{{Aj{IhIj}}}}{{}I`}{{}Ib}{{{f{If}}{f{bBh}}}Bj}0{{{f{Ij}}{f{bBh}}}Bj}0{cc{}}0{IlIf}{A`If}222{IlIj}{A`Ij}4{{}c{}}00000{{I`{Ch{In}}}I`}{fA`}0{c{{Aj{e}}}{}{}}00000{{}{{Aj{c}}}{}}00000{fCb}00000{{Ib{Ch{H`}}}Ib}{{{f{J`}}{f{{E`{Dn}}}}{f{{E`{Dn}}}}}{{Aj{lBd}}}}{{{f{Ih}}{f{{E`{Dn}}}}{f{{E`{Dn}}}}}{{Aj{lBd}}}}888888","D":"Mh","p":[[0,"mut"],[10,"ProtocolEngine",0],[1,"reference"],[6,"Option",430],[8,"Result",431],[1,"unit"],[10,"AttestationAggregator",14],[5,"String",432],[5,"AttestationResults",433],[5,"BTreeMap",434],[5,"AttestationSuccess",14],[5,"AttestationFailure",14],[6,"Result",435],[5,"DefaultAttestationAggregator",14],[6,"AttestationType",14],[5,"AttestationProviderConfig",96],[5,"ClientAttestationProvider",14],[5,"Error",431],[5,"ServerAttestationProvider",14],[5,"Formatter",436],[8,"Result",436],[5,"AttestRequest",437],[5,"AttestResponse",437],[10,"AttestationProvider",14],[5,"TypeId",438],[5,"SessionConfigBuilder",96],[10,"AttestationVerifier",439],[5,"Box",440],[10,"Attester",441],[10,"Endorser",442],[10,"SessionBinder",348],[5,"SessionConfig",96],[6,"HandshakeType",213],[10,"EncryptorProvider",96],[5,"SessionKeys",443],[10,"Encryptor",444],[5,"OrderedChannelEncryptorProvider",96],[10,"KeyExtractor",302],[1,"u8"],[1,"slice"],[10,"IdentityKeyHandle",445],[5,"ReferenceValues",433],[10,"Clock",446],[5,"Arc",447],[5,"DiceAttestationVerifier",177],[5,"Evidence",433],[5,"Endorsements",433],[5,"OrderedChannelEncryptor",188],[5,"Payload",444],[5,"UnorderedChannelEncryptor",188],[1,"u32"],[1,"tuple"],[10,"HandshakerBuilder",213],[10,"Handshaker",213],[5,"ClientHandshakerBuilder",213],[5,"ClientHandshaker",213],[5,"ServerHandshakerBuilder",213],[5,"ServerHandshaker",213],[5,"HandshakerConfig",96],[5,"Vec",448],[5,"HandshakeRequest",437],[5,"HandshakeResponse",437],[1,"bool"],[10,"Verifier",449],[5,"DefaultSigningKeyExtractor",302],[5,"ClientSession",314],[5,"ServerSession",314],[5,"SessionRequest",437],[5,"SessionResponse",437],[10,"Session",314],[5,"PlaintextMessage",437],[5,"SignatureBinderBuilder",348],[5,"SignatureBindingVerifierBuilder",348],[5,"SignatureBinder",348],[6,"SignatureBinderBuilderError",348],[5,"SignatureBindingVerifier",348],[6,"SignatureBindingVerifierBuilderError",348],[5,"UninitializedFieldError",450],[10,"Signer",451],[10,"SessionBindingVerifier",348],[5,"EncryptorConfig",96],[5,"HandshakeResult",213]],"r":[[0,314],[2,314],[3,314]],"b":[[47,"impl-Debug-for-AttestationFailure"],[48,"impl-Display-for-AttestationFailure"],[380,"impl-Display-for-SignatureBinderBuilderError"],[381,"impl-Debug-for-SignatureBinderBuilderError"],[382,"impl-Debug-for-SignatureBindingVerifierBuilderError"],[383,"impl-Display-for-SignatureBindingVerifierBuilderError"],[386,"impl-From%3CUninitializedFieldError%3E-for-SignatureBinderBuilderError"],[387,"impl-From%3CString%3E-for-SignatureBinderBuilderError"],[391,"impl-From%3CUninitializedFieldError%3E-for-SignatureBindingVerifierBuilderError"],[392,"impl-From%3CString%3E-for-SignatureBindingVerifierBuilderError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEIBJAAAAAEAAwABAAYAAAAQAAAAEgAAABYAAAAbABYANgAAADkAAQBBACYAawAUAIYAAQCOACcAuAAFAL8ACADMAAkA1wAAANkAAADcAAMA4QAXAAABAwALAQUAFAEgADcBAwA8AQAAPgEFAEYBAQBLAQMAUAEJAFsBBABiAQAAaQEPAHsBBQCDAQEAiAEBAJEBHQA="}],["oak_session_wasm",{"t":"PGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["NoIncomingMessageExpected","PutIncomingMessageResult","Success","WasmClientSession","borrow","","borrow_mut","","create_unattested_noise_nn_session","describe","","describe_vector","","from","","from_abi","","get_outgoing_message","into","","into_abi","","is_none","","is_open","long_ref_from_abi","none","","put_incoming_message","read","ref_from_abi","ref_mut_from_abi","return_abi","","try_from","","try_from_js_value","","try_into","","type_id","","vector_from_abi","","vector_into_abi","","vzip","","write"],"q":[[0,"oak_session_wasm"],[49,"wasm_bindgen"],[50,"core::result"],[51,"alloc::vec"],[52,"core::option"],[53,"core::any"],[54,"alloc::boxed"]],"i":"A``0`f10100101010100101010001000001010101010101010","f":"````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{}{{j{fh}}}}{{}l}000{cc{}}0{nf}{nA`}{{{b{df}}}{{j{{Af{{Ad{Ab}}}}h}}}}{{}c{}}0{fn}{A`n}{{{b{c}}}Ah{}}{{{b{n}}}Ah}{{{b{f}}}Ah}{ce{}{}}66{{{b{df}}{b{{Aj{Ab}}}}}{{j{A`h}}}}811{{}}0{c{{j{e}}}{}{}}0{h{{j{fc}}}{}}{h{{j{A`}}}}{{}{{j{c}}}{}}0{bAl}0{c{{An{{Aj{f}}}}}{}}{c{{An{{Aj{A`}}}}}{}}{{{An{{Aj{f}}}}}c{}}{{{An{{Aj{A`}}}}}c{}}{{}c{}}0{{{b{df}}{b{{Aj{Ab}}}}}{{j{lh}}}}","D":"Ab","p":[[1,"reference"],[0,"mut"],[5,"WasmClientSession",0],[5,"JsValue",49],[6,"Result",50],[1,"unit"],[1,"u32"],[6,"PutIncomingMessageResult",0],[1,"u8"],[5,"Vec",51],[6,"Option",52],[1,"bool"],[1,"slice"],[5,"TypeId",53],[5,"Box",54]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACgABQAAAA0AEAABABUAAwAaAAIAHwARAA=="}],["oak_sev_guest",{"t":"KCCCCCCCCCQCCFFNNNNNNNNNNNNNNSSFFFFNNNNNNNNOOOOOOOONNNNNNNNNNONNNNONNNNNNNNNNNNNOOFNNNNNNNNNNNTTSSFFTTTTTTTTFTTNNNNNNNNNNNNNNNNNNNNNONNNNONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOONNNNNNONNOOOONNNNNNNNNNNNOOOOPPPPGPFFFSSSPPPGFPPTSTTFFFTPPPPPPPPFPFPGFGSTKGPPPGPGFPPTPPPPPPPPONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNOONOOOOONNNNNOONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOTTPPPGPPPGFTFPPGPGTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNHHNNNNONNNNNNNNNNNNNNNNNNNNNNNNNHOFNNONNNQOOOOOOOOOONNNPPFFKGKGKPPFINNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNMNNNNMNNNNNNNNNTTPFFGFFTPPPPPFPPPFFTPPSTGFFPTTTTGFFTTTTTTTSFFFGPPFFGFTTTTNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNOOOHNNHNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOPPFGSSSFONNNNNNONNNNNNNNOOOOONNNNNNNNNONNNNOOOOOOOOOOOOOOOFSSFFOONNNNNNOOOHOOOOOOOONNNOOOOOOOOOOOOOONNNOOONNNOOOOOOOOOOOOOOOOOOOOONNNOOOOOOOOOONNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNONNNOOOOOOOOOOOOOOO","n":["Translator","ap_jump_table","cpuid","crypto","ghcb","guest","instructions","interrupts","io","msr","mutable_interrupt_handler_with_error_code","secrets","vmsa","ApJumpTable","ApResetAddress","borrow","","borrow_mut","","from","","into","","try_from","","try_into","","type_id","","CPUID_COUNT_MAX","CPUID_PAGE_SIZE","CpuidFunction","CpuidInput","CpuidOutput","CpuidPage","borrow","","","","borrow_mut","","","","count","cpuid_data","eax","","ebx","ecx","","edx","eq","fmt","","","","from","","","","","input","into","","","","output","try_from","","","","try_into","","","","type_id","","","","validate","xcr0","xss","GuestMessageEncryptor","borrow","borrow_mut","decrypt_message","encrypt_message","from","into","new","new_with_sequence_number","try_from","try_into","type_id","CPL","DR7","GHCB_PAGE_SIZE","GHCB_PROTOCOL_VERSION","Ghcb","GhcbProtocol","RAX","RBX","RCX","RDX","SW_EXIT_CODE","SW_EXIT_INFO_1","SW_EXIT_INFO_2","SW_SCRATCH","ValidBitmap","XCR0","XSS","all","as_mut","","as_ref","","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","borrow_mut","","","complement","contains","cpl","default","","difference","do_guest_message_request","dr7","empty","extend","fmt","","","","","","from","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","get_ap_jump_table","get_cpuid","get_gpa","ghcb_usage","insert","intersection","intersects","into","","","into_inner","into_iter","io_read_u16","io_read_u32","io_read_u8","io_write_u16","io_write_u32","io_write_u8","is_all","is_empty","iter","iter_names","mmio_read_u32","mmio_write_u32","msr_read","msr_write","new","","not","page_state_change","protocol_version","rax","rbx","rcx","rdx","register_with_hypervisor","remove","reset","","set","set_ap_jump_table","shared_buffer","sub","sub_assign","sw_exit_code","sw_exit_info_1","sw_exit_info_2","sw_scratch","symmetric_difference","toggle","try_from","","","try_into","","","type_id","","","union","valid_bitmap","x87_state_gpa","xcr0","xss","AbsorbNomaRequest","AbsorbNomaResponse","AbsorbRequest","AbsorbResponse","AeadAlgorithm","Aes256Gcm","AttestationRequest","AttestationResponse","AuthenticatedHeader","CURRENT_ATTESTATION_VERSION","CURRENT_HEADER_VERSION","CURRENT_MESSAGE_VERSION","CpuidRequest","CpuidResponse","Default","EccCurve","EcdsaPublicKey","ExportRequest","ExportResponse","FAMILY_ID","GUEST_MESSAGE_SIZE","GUEST_POLICY","GUEST_SVN","GuestFieldFlags","GuestMessage","GuestMessageHeader","IMAGE_ID","ImportRequest","ImportResponse","Invalid","","","InvalidKeySelection","InvalidParams","","KeyRequest","","KeyResponse","","KeySelect","KeySelectIter","KeyStatus","MAX_PAYLOAD_SIZE","MEASUREMENT","Message","MessageType","P384","ReportRequest","ReportResponse","ReportStatus","Reserved","RootKeySelect","RootKeySelectIter","Success","","TCB_VERSION","TccInfoReqsponse","TscInfoRequest","VCEK","","VLEK","VMRK","VmrkRequest","VmrkResponse","algorithm","all","auth_header","auth_tag","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","complement","contains","curve","default","","","","","derived_key","difference","empty","eq","","","","extend","fmt","","","","","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","from_repr","","","","","","","get_algorithm","get_guest_field_select_flags","get_key_select","get_message_type","","","","","","get_root_key_select","get_status","","guest_field_select","guest_svn","header","header_size","header_version","insert","intersection","intersects","into","","","","","","","","","","","","","","","","","","into_iter","","","is_all","is_empty","iter","","","iter_names","len","","message_size","message_type","message_version","message_vmpck","new","","","","next","","next_back","","not","nth","","payload","r","remove","report","report_data","report_size","s","sequence_number","set","set_key_select","set_root_key_select","size_hint","","status","","sub","sub_assign","symmetric_difference","tcb_version","to_owned","","","","toggle","try_from","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","union","validate","","","","vmpl","","EXECUTE_SUPERVISOR","EXECUTE_USER","FailInput","FailPermission","FailSizeMismatch","InstructionError","No","Page2MiB","Page4KiB","PageSize","PermissionMask","READ","RmpPermission","Unvalidated","Validated","Validation","ValidationStatusNotUpdated","Vmsa","WRITE","Yes","all","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","borrow_mut","","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","complement","contains","difference","empty","eq","","","","extend","fmt","","","","","","","","","","from","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","from_repr","","","","insert","intersection","intersects","into","","","","","","into_iter","is_all","is_empty","iter","iter_names","not","perm_mask","pvalidate","remove","rmpadjust","rmpquery","set","sub","sub_assign","symmetric_difference","target_vmpl","to_owned","","","","","toggle","try_from","","","","","","try_into","","","","","","type_id","","","","","","union","vmgexit","vmsa","MutableInterruptStackFrame","borrow","borrow_mut","cs","fmt","from","into","mutable_interrupt_handler_with_error_code","rax","rbx","rcx","rdi","rdx","rflags","rip","rsi","rsp","ss","try_from","try_into","type_id","Ghcb","","GhcbIoFactory","GhcbIoPort","IoPortFactory","PortFactoryWrapper","PortReader","PortWrapper","PortWriter","Raw","","RawIoPortFactory","StaticGhcbIoPort","borrow","","","","","borrow_mut","","","","","from","","","","","into","","","","","new","new_ghcb","new_raw","new_reader","","","","new_writer","","","","try_from","","","","","try_into","","","","","try_read","","","","","try_write","","","","","type_id","","","","","ALTERNATE_INJECTION_ENABLED","AP_CREATION","AddressNotAligned","ApResetHoldRequest","ApResetHoldResponse","CpuidRegister","CpuidRequest","CpuidResponse","DEBUG_SWAP_ENABLED","Eax","Ebx","Ecx","Edx","General","GhcbGpa","GhcbLocationNotAccepted","GhcbProtocolVersion","GhcbResponseLocationNotMatchingRequest","HypervisorFeatureSupportRequest","HypervisorFeatureSupportResponse","INSTRUCTION_BASED_SAMPLING_ENABLED","InvalidResponse","InvalidValue","NO_PREFERRED_GHCB_LOCATION","PREVENT_HOST_IBS_ENABLED","PageAssignment","PreferredGhcbGpaRequest","PreferredGhcbGpaResponse","Private","REFLECT_VC_ENABLED","RESTRICTED_INJECTION","RESTRICTED_INJECTION_ENABLED","RESTRICTED_INJECTION_TIMER","RegisterGhcbGpaError","RegisterGhcbGpaRequest","RegisterGhcbGpaResponse","SECURE_TSC_ENABLED","SEV_ENABLED","SEV_ES_ENABLED","SEV_SNP","SMT_PROTECTION_ENABLED","SNP_ACTIVE","SNP_BTB_ISOLATION_ENABLED","SUPPORTED_PROTOCOL_VERSION","SevInfoRequest","SevInfoResponse","SevStatus","SevStatusError","Shared","SnpFeatureNotSupported","SnpPageStateChangeRequest","SnpPageStateChangeResponse","TerminationReason","TerminationRequest","VMGEXIT_PARAMETER_ENABLED","VMPL_SSS_ENABLED","VMSA_REG_PROT_ENABLED","VTOM_ENABLED","all","","ap_reset_hold","as_error_source","","backtrace","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","cause","","change_snp_page_state","change_snp_state_for_frame","clone","","","clone_into","","","clone_to_uninit","","","complement","","contains","","default","","description","","difference","","empty","","encryption_bit","eq","","","extend","","fmt","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","from_repr","","get_cpuid","get_cpuid_for_vc_exception","get_hypervisor_feature_support","get_preferred_ghcb_location","get_sev_info","get_sev_status","ghcb_gpa","insert","","intersection","","intersects","","into","","","","","","","","","","","","","","","","","","","","","","into_iter","","is_all","","is_empty","","iter","","iter_names","","leaf","max_protocol_version","min_protocol_version","new","","","not","","reason","register","","register_ghcb_location","remove","","request_termination","set","","set_ghcb_address_and_exit","source","","sub","","sub_assign","","symmetric_difference","","to_owned","","","to_string","","toggle","","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","union","","value","response_ghcb_gpa","Disabled","Enabled","GuestReservedArea","Imi","SECRETS_PAGE_MAX_VERSION","SECRETS_PAGE_MIN_VERSION","SECRETS_PAGE_SIZE","SecretsPage","ap_jump_table_pa","borrow","","","borrow_mut","","","fms","fmt","","","from","","","from_repr","get_imi_en","gosv","guest_area_0","guest_area_1","guest_usage","imi_en","into","","","try_from","","","try_into","","","tsc_factor","type_id","","","validate","version","","vmpck_0","vmpck_1","vmpck_2","vmpck_3","vmpl0_guest_seq_high","vmpl0_guest_seq_low","vmpl1_guest_seq_high","vmpl1_guest_seq_low","vmpl2_guest_seq_high","vmpl2_guest_seq_low","vmpl3_guest_seq_high","vmpl3_guest_seq_low","vmsa_tweak_bitmap","SegmentRegister","VMSA_PAGE_SIZE","VMSA_SIZE","Vmsa","VmsaPage","attributes","base","borrow","","","borrow_mut","","","bp_ibs_tgt_rip","br_from","br_to","calculate_rdx_from_fms","cpl","cr0","cr2","cr3","cr4","cs","cstar","dbgctl","default","","","dr0","dr0_addr_mask","dr1","dr1_addr_mask","dr2","dr2_addr_mask","dr3","dr3_addr_mask","dr6","dr7","ds","efer","es","event_inj","fmt","","","fpreg_x87","fpreg_xmm","fpreg_ymm","from","","","fs","g_pat","gdtr","gs","guest_exit_code","guest_exit_info_1","guest_exit_info_2","guest_exit_int_info","guest_nrip","guest_tsc_offset","guest_tsc_scale","ibs_dc_lin_addr","ibs_fetch_ctl","ibs_fetch_lin_addr","ibs_op_ctl","ibs_op_data","ibs_op_data2","ibs_op_data3","ibs_op_rop","ic_ibs_extd_ctl","idtr","into","","","isst_addr","kernel_gs_base","last_excp_from","last_excp_to","lbr_select","lbr_stack_state","ldtr","limit","lstar","mxcsr","new","new_vcpu_boot","pcpu_id","pkru","pl0_ssp","pl1_ssp","pl2_ssp","pl3_ssp","r10","r11","r12","r13","r14","r15","r8","r9","rax","rbp","rbx","rcx","rdi","rdx","reg_prot_nonce","rflags","rip","rsi","rsp","s_cet","selector","sev_features","sfmask","ss","ssp","star","sysenter_cs","sysenter_eip","sysenter_esp","tlb_id","tr","try_from","","","try_into","","","tsc_aux","type_id","","","u_cet","vintr_ctrl","virtual_tom","vmpl","vmsa","x87_cs","x87_dp","x87_ds","x87_fcw","x87_fop","x87_fsw","x87_ftw","x87_rip","xcr0","xss"],"q":[[0,"oak_sev_guest"],[13,"oak_sev_guest::ap_jump_table"],[29,"oak_sev_guest::cpuid"],[82,"oak_sev_guest::crypto"],[94,"oak_sev_guest::ghcb"],[219,"oak_sev_guest::guest"],[560,"oak_sev_guest::instructions"],[703,"oak_sev_guest::interrupts"],[724,"oak_sev_guest::io"],[793,"oak_sev_guest::msr"],[1156,"oak_sev_guest::msr::RegisterGhcbGpaError"],[1157,"oak_sev_guest::secrets"],[1215,"oak_sev_guest::vmsa"],[1364,"core::result"],[1365,"core::any"],[1366,"core::fmt"],[1367,"zerocopy"],[1368,"core::convert"],[1369,"core::marker"],[1370,"x86_64::addr"],[1371,"core::iter::traits::collect"],[1372,"core::option"],[1373,"bitflags::iter"],[1374,"x86_64::structures::paging::frame"],[1375,"x86_64::structures::paging::page"],[1376,"lock_api::mutex"],[1377,"spinning_top::spinlock"],[1378,"x86_64::instructions::port"],[1379,"snafu::no_std_error"],[1380,"snafu::backtrace_impl"],[1381,"alloc::string"]],"i":"```````````````MfMh101010101010``````njAdAf3210002112112321032210332103321032103210022`An0000000000Bn0````00000000`000C`Cb102222222210210222002210220222221022222221110222102121111112222111110210000012102102200002210210210220000Fn000`Fl``````11Eh``22Ef`00```03323GfFf0Fh`6`6````3``266`4``103664El5077Fj5F`066666666B`219:FbG`:Ej6En9;FdGb:Gd=798FlFn87Eh7=6?Ef65?4Gf29?829?829?8115<=;17:112?FfFh3>FjF`87?>6=El=46666<;3:5B`32:9FbG`:Ej4En9;FdGb:Gd=>>>>>>FlFnEh;?>Gf=::Bf>;:76;:6;;<??Ef00=FjF`76>=5<El<Ff4<;Fh;7?>5558255?>4444B`4Fb?EjEn109103?9GbFd1Gd:<5543G`3===6Eh6;5>8=<FlFn9328=7<Ef67<5Gf<FjF`54=76<El<Ff5;<Fh;5B`5498Fb<;Ej5En5:FdGb6Gd<=6:G`263Gl0Hf00`HbH`0``3`Gn0`3`4244444444401342Hd124530125301253012530555545305124555553012453055555512435551245305555550`5``555501253051245301245301245305`0`Ah00000`0000000000000I`Il```````10``HjIfIh43210432104321043244Ib31503153215432154Id3335In444654376JbJ`Ed`````2Jn000K``202``42Jh`5```E`6565```6665666`````02````666656`41415656565655665656KjKhMjKbKdMlKfKlLdJjLfMnN`LhKnJnEdE`J`K`JbJhKjKhMjKbKdMlKfKlLdJjLfMnN`LhKnJnEdE`J`K`JbJh50``641641641313131503131Kh7544276654444432222211Kj1MjKbKdMlKfKlLdJjLfMnN`LhKnJnEdE`J`K`JbJh31331131313164``````?313131KjKhMjKbKdMlKfKlLdJjLfMnN`LhKnJnEdE`J`K`JbJh3131313131KbKh0KjKlJj86<4Kd`97`97`;6979797<:7;697344Mj611MlKf05Ld05Lf0MnN`Lh0KnJnEdE`J`0K`JbJhKjKhMjKbKdMlKfKlLdJjLfMnN`LhKnJnEdE`J`K`JbJhKjKhMjKbKdMlKfKlLdJjLfMnN`LhKnJnEdE`J`K`JbJh31KdNbLn0``````Lj0Ll21020102102200001010210210201020100000111111110`````Md0M`Mb2102000`000000001020000000000000010200010200000000000000000000010200000002001000000000000000000000000000200000000001021020102000010000000000","f":"```````````````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{cc{}}0{{}c{}}0{c{{f{e}}}{}{}}0{{}{{f{c}}}{}}0{bh}0``````66665555````````{{{b{j}}{b{j}}}l}{{{b{n}}{b{dA`}}}Ab}{{{b{j}}{b{dA`}}}Ab}{{{b{Ad}}{b{dA`}}}Ab}{{{b{Af}}{b{dA`}}}Ab}9{{{b{dAh}}}j}:::`9999`888877776666{{{b{Af}}}{{f{Aj{b{Al}}}}}}```=<{{{b{dAn}}{b{B`}}}{{f{c{b{Al}}}}}{BbBdBf}}{{{b{dAn}}c{b{dB`}}}{{f{Aj{b{Al}}}}}{BbBdBf}}=<{{{b{{Bj{Bh}}}}}{{f{An{b{Al}}}}}}{{{b{{Bj{Bh}}}}Bl}{{f{An{b{Al}}}}}}=<;`````````````````{{}Bn}{{{b{d{C`{c}}}}}{{b{d{C`{c}}}}}{{Cd{Cb}}{Cf{Cb}}Ch}}{{{b{dCb}}}{{b{dCb}}}}{{{b{{C`{c}}}}}{{b{{C`{c}}}}}{{Cd{Cb}}{Cf{Cb}}Ch}}{{{b{Cb}}}{{b{Cb}}}}{{BnBn}Bn}{{{b{dBn}}Bn}Aj}10{{{b{Bn}}}Cj}021{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{BnBn}{{{b{Bn}}Bn}l}`{{}Cb}<7{{{b{d{C`{c}}}}ClCl}{{f{Aj{b{Al}}}}}{{Cd{Cb}}{Cf{Cb}}Ch}}`={{{b{dBn}}c}Aj{{D`{}{{Cn{Bn}}}}}}{{{b{Cb}}{b{dA`}}}Ab}{{{b{Bn}}{b{dA`}}}Ab}0000{cc{}}00{Cj{{Db{Bn}}}}{CjBn}00{cBn{{D`{}{{Cn{Bn}}}}}}{{{b{Al}}}{{Db{Bn}}}}{{{b{d{C`{c}}}}}{{f{Cl{b{Al}}}}}{{Cd{Cb}}{Cf{Cb}}Ch}}{{{b{d{C`{c}}}}j}{{f{Ad{b{Al}}}}}{{Cd{Cb}}{Cf{Cb}}Ch}}{{{b{{C`{c}}}}}Cl{{Cd{Cb}}{Cf{Cb}}Ch}}`{{{b{dBn}}Bn}Aj}{{BnBn}Bn}?{{}c{}}00{{{C`{c}}}{{b{dc}}}{{Cd{Cb}}{Cf{Cb}}Ch}}{Bnc{}}{{{b{d{C`{c}}}}Dd}{{f{Dd{b{Al}}}}}{{Cd{Cb}}{Cf{Cb}}Ch}}{{{b{d{C`{c}}}}Dd}{{f{Df{b{Al}}}}}{{Cd{Cb}}{Cf{Cb}}Ch}}{{{b{d{C`{c}}}}Dd}{{f{Bh{b{Al}}}}}{{Cd{Cb}}{Cf{Cb}}Ch}}{{{b{d{C`{c}}}}DdDd}{{f{Aj{b{Al}}}}}{{Cd{Cb}}{Cf{Cb}}Ch}}{{{b{d{C`{c}}}}DdDf}{{f{Aj{b{Al}}}}}{{Cd{Cb}}{Cf{Cb}}Ch}}{{{b{d{C`{c}}}}DdBh}{{f{Aj{b{Al}}}}}{{Cd{Cb}}{Cf{Cb}}Ch}}{{{b{Bn}}}l}0{{{b{Bn}}}{{Dh{Bn}}}}{{{b{Bn}}}{{Dj{Bn}}}}{{{b{d{C`{c}}}}Cl}{{f{Df{b{Al}}}}}{{Cd{Cb}}{Cf{Cb}}Ch}}{{{b{d{C`{c}}}}ClDf}{{f{Aj{b{Al}}}}}{{Cd{Cb}}{Cf{Cb}}Ch}}{{{b{d{C`{c}}}}Df}{{f{Bl{b{Al}}}}}{{Cd{Cb}}{Cf{Cb}}Ch}}{{{b{d{C`{c}}}}DfBl}{{f{Aj{b{Al}}}}}{{Cd{Cb}}{Cf{Cb}}Ch}}{{{b{dc}}e}{{C`{c}}}{{Cd{Cb}}{Cf{Cb}}Ch}Dl}{{}Cb}{BnBn}{{{b{d{C`{c}}}}{Dn{e}}E`}{{f{Aj{b{Al}}}}}{{Cd{Cb}}{Cf{Cb}}Ch}Eb}`````{{{b{{C`{c}}}}}{{f{AjEd}}}{{Cd{Cb}}{Cf{Cb}}Ch}}{{{b{dBn}}Bn}Aj}{{{b{d{C`{c}}}}}Aj{{Cd{Cb}}{Cf{Cb}}Ch}}{{{b{dCb}}}Aj}{{{b{dBn}}Bnl}Aj}{{{b{d{C`{c}}}}Cl}{{f{Aj{b{Al}}}}}{{Cd{Cb}}{Cf{Cb}}Ch}}`{{BnBn}Bn}5````05{c{{f{e}}}{}{}}00{{}{{f{c}}}{}}00{bh}003`````````````````````````````````````````````````````````````````````{{}Ef}``{{EfEf}Ef}{{{b{dEf}}Ef}Aj}10{{{b{Ef}}}Bl}021{b{{b{c}}}{}}00000000000000000{{{b{d}}}{{b{dc}}}{}}00000000000000000{{{b{Eh}}}Eh}{{{b{Ej}}}Ej}{{{b{El}}}El}{{{b{En}}}En}{{b{b{dc}}}Aj{}}000{bAj}000{EfEf}{{{b{Ef}}Ef}l}`{{}B`}{{}F`}{{}Fb}{{}Ef}{{}Fd}`{{EfEf}Ef}2{{{b{Eh}}{b{Eh}}}l}{{{b{El}}{b{El}}}l}{{{b{Ff}}{b{Ff}}}l}{{{b{Fh}}{b{Fh}}}l}{{{b{dEf}}c}Aj{{D`{}{{Cn{Ef}}}}}}{{{b{B`}}{b{dA`}}}Ab}{{{b{Fj}}{b{dA`}}}Ab}{{{b{F`}}{b{dA`}}}Ab}{{{b{Fl}}{b{dA`}}}Ab}{{{b{Fn}}{b{dA`}}}Ab}{{{b{Fb}}{b{dA`}}}Ab}{{{b{G`}}{b{dA`}}}Ab}{{{b{Eh}}{b{dA`}}}Ab}{{{b{Ej}}{b{dA`}}}Ab}{{{b{El}}{b{dA`}}}Ab}{{{b{En}}{b{dA`}}}Ab}{{{b{Ff}}{b{dA`}}}Ab}{{{b{Ef}}{b{dA`}}}Ab}000{{{b{Fd}}{b{dA`}}}Ab}{{{b{Gb}}{b{dA`}}}Ab}{{{b{Fh}}{b{dA`}}}Ab}{{{b{Gd}}{b{dA`}}}Ab}{{{b{Gf}}{b{dA`}}}Ab}{cc{}}00000000000000000{Bl{{Db{Ef}}}}{BlEf}00{cEf{{D`{}{{Cn{Ef}}}}}}{{{b{Al}}}{{Db{Ef}}}}{Bh{{Db{Fl}}}}{Bh{{Db{Fn}}}}{Df{{Db{Eh}}}}{Df{{Db{El}}}}{Df{{Db{Ff}}}}{Df{{Db{Fh}}}}{Df{{Db{Gf}}}}{{{b{F`}}}{{Db{Fl}}}}{{{b{Fb}}}{{Db{Ef}}}}{{{b{Fb}}}Eh}{{}Fn}{{{b{F`}}}{{Db{Fn}}}}1111{{{b{Fb}}}El}{{{b{G`}}}{{Db{Ff}}}}{{{b{Gb}}}{{Db{Fh}}}}`````{{{b{dEf}}Ef}Aj}{{EfEf}Ef}{{{b{Ef}}Ef}l}{{}c{}}0000000000000000000{Efc{}}{{{b{Ef}}}l}0{{}Ej}{{}En}{{{b{Ef}}}{{Dh{Ef}}}}{{{b{Ef}}}{{Dj{Ef}}}}{{{b{Ej}}}Gh}{{{b{En}}}Gh}````{{}B`}{{}F`}{{}Fb}{{}Fd}{{{b{dEj}}}{{Db{c}}}{}}{{{b{dEn}}}{{Db{c}}}{}}10{EfEf}{{{b{dEj}}Gh}{{Db{c}}}{}}{{{b{dEn}}Gh}{{Db{c}}}{}}``{{{b{dEf}}Ef}Aj}`````{{{b{dEf}}Efl}Aj}{{{b{dFb}}Eh}Aj}{{{b{dFb}}El}Aj}{{{b{Ej}}}{{Gj{Gh{Db{Gh}}}}}}{{{b{En}}}{{Gj{Gh{Db{Gh}}}}}}``{{EfEf}Ef}60`{bc{}}0007{c{{f{e}}}{}{}}00000000000000000{{}{{f{c}}}{}}00000000000000000{bh}000000000000000004{{{b{B`}}}{{f{Aj{b{Al}}}}}}{{{b{F`}}}{{f{Aj{b{Al}}}}}}{{{b{G`}}}{{f{Aj{b{Al}}}}}}{{{b{Gb}}}{{f{Aj{b{Al}}}}}}``````````````````````{{}Gl}{{GlGl}Gl}{{{b{dGl}}Gl}Aj}10{{{b{Gl}}}Bh}021{b{{b{c}}}{}}00000{{{b{d}}}{{b{dc}}}{}}00000{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Gl}}}Gl}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{b{b{dc}}}Aj{}}0000{bAj}0000{GlGl}{{{b{Gl}}Gl}l}=>{{{b{Hf}}{b{Hf}}}l}{{{b{Gl}}{b{Gl}}}l}{{{b{Hb}}{b{Hb}}}l}{{{b{Hd}}{b{Hd}}}l}{{{b{dGl}}c}Aj{{D`{}{{Cn{Gl}}}}}}{{{b{Gn}}{b{dA`}}}Ab}{{{b{H`}}{b{dA`}}}Ab}{{{b{Hf}}{b{dA`}}}Ab}{{{b{Gl}}{b{dA`}}}Ab}0000{{{b{Hb}}{b{dA`}}}Ab}{{{b{Hd}}{b{dA`}}}Ab}{cc{}}00000{Bh{{Db{Gl}}}}{BhGl}00{cGl{{D`{}{{Cn{Gl}}}}}}{{{b{Al}}}{{Db{Gl}}}}{Df{{Db{Gn}}}}{Df{{Db{H`}}}}{Df{{Db{Hf}}}}{Bh{{Db{Hb}}}}{{{b{dGl}}Gl}Aj}{{GlGl}Gl}{{{b{Gl}}Gl}l}{{}c{}}00000{Glc{}}{{{b{Gl}}}l}0{{{b{Gl}}}{{Dh{Gl}}}}{{{b{Gl}}}{{Dj{Gl}}}}{GlGl}`{{GhH`Gn}{{f{AjHf}}}}9{{GhH`Hd}{{f{AjHf}}}}{Gh{{f{{Gj{HdH`}}Hf}}}}{{{b{dGl}}Gll}Aj};<;`{bc{}}0000={c{{f{e}}}{}{}}00000{{}{{f{c}}}{}}00000{bh}00000?{{}Aj}``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}`{{{b{Ah}}{b{dA`}}}Ab}{cc{}}{{}c{}}```````````876`````````````44444333331111100000{{{b{{Hh{cg}}}}}{{Hj{cge}}}Hl{{Cd{Cb}}{Cf{Cb}}Ch}{{Cd{{C`{e}}}}Ch}}{{{b{{Hn{{C`{Cb}}}}}}}I`}{{}I`}{{{b{Ib}}Dd}e{}{{Id{c}}}}{{{b{{Hj{cge}}}}Dd}{{If{cge}}}Hl{{Cd{Cb}}{Cf{Cb}}Ch}{{Cd{{C`{e}}}}Ch}}{{{b{Ih}}Dd}{{Ij{c}}}{}}{{{b{I`}}Dd}{{Il{c}}}{}}{{{b{Ib}}Dd}e{}{{In{c}}}}321{c{{f{e}}}{}{}}0000{{}{{f{c}}}{}}0000{{{b{dId}}}{{f{c{b{Al}}}}}{}}{{{b{d{If{cge}}}}}{{f{Df{b{Al}}}}}Hl{{Cd{Cb}}{Cf{Cb}}Ch}{{Cd{{C`{e}}}}Ch}}{{{b{d{If{cge}}}}}{{f{Dd{b{Al}}}}}Hl{{Cd{Cb}}{Cf{Cb}}Ch}{{Cd{{C`{e}}}}Ch}}{{{b{d{If{cge}}}}}{{f{Bh{b{Al}}}}}Hl{{Cd{Cb}}{Cf{Cb}}Ch}{{Cd{{C`{e}}}}Ch}}{{{b{d{Il{c}}}}}{{f{c{b{Al}}}}}{}}{{{b{dIn}}c}{{f{Aj{b{Al}}}}}{}}{{{b{d{If{cge}}}}Dd}{{f{Aj{b{Al}}}}}Hl{{Cd{Cb}}{Cf{Cb}}Ch}{{Cd{{C`{e}}}}Ch}}{{{b{d{If{cge}}}}Bh}{{f{Aj{b{Al}}}}}Hl{{Cd{Cb}}{Cf{Cb}}Ch}{{Cd{{C`{e}}}}Ch}}{{{b{d{If{cge}}}}Df}{{f{Aj{b{Al}}}}}Hl{{Cd{Cb}}{Cf{Cb}}Ch}{{Cd{{C`{e}}}}Ch}}{{{b{d{Il{c}}}}c}{{f{Aj{b{Al}}}}}{}}{bh}0000``````````````````````````````````````````````````````````{{}J`}{{}Jb}{{}{{f{l{b{Al}}}}}}{b{{b{Jd}}}}0{{{b{Ed}}}{{Db{{b{Jf}}}}}}{{{b{Jh}}}{{Db{{b{Jf}}}}}}{{J`J`}J`}{{JbJb}Jb}{{{b{dJ`}}J`}Aj}{{{b{dJb}}Jb}Aj}3210{{{b{J`}}}Bl}0{{{b{Jb}}}Bl}05432{b{{b{c}}}{}}000000000000000000000{{{b{d}}}{{b{dc}}}{}}000000000000000000000{{{b{Ed}}}{{Db{{b{Jd}}}}}}{{{b{Jh}}}{{Db{{b{Jd}}}}}}{Jj{{f{Aj{b{Al}}}}}}{{{b{{Dn{Jl}}}}E`}{{f{Aj{b{Al}}}}}}{{{b{Jn}}}Jn}{{{b{E`}}}E`}{{{b{Jb}}}Jb}{{b{b{dc}}}Aj{}}00{bAj}00{J`J`}{JbJb}{{{b{J`}}J`}l}{{{b{Jb}}Jb}l}{{}J`}{{}Jb}{{{b{Ed}}}{{b{Al}}}}{{{b{Jh}}}{{b{Al}}}}{{J`J`}J`}{{JbJb}Jb}54`{{{b{Jn}}{b{Jn}}}l}{{{b{E`}}{b{E`}}}l}{{{b{J`}}{b{J`}}}l}{{{b{dJ`}}c}Aj{{D`{}{{Cn{J`}}}}}}{{{b{dJb}}c}Aj{{D`{}{{Cn{Jb}}}}}}{{{b{Jn}}{b{dA`}}}Ab}{{{b{Ed}}{b{dA`}}}Ab}0{{{b{E`}}{b{dA`}}}Ab}{{{b{J`}}{b{dA`}}}Ab}0000{{{b{K`}}{b{dA`}}}Ab}{{{b{Jb}}{b{dA`}}}Ab}0000{{{b{Jh}}{b{dA`}}}Ab}0{cc{}}000000000000000000000{Bl{{Db{J`}}}}{Bl{{Db{Jb}}}}{BlJ`}0{BlJb}010{cJ`{{D`{}{{Cn{J`}}}}}}{cJb{{D`{}{{Cn{Jb}}}}}}{{{b{Al}}}{{Db{J`}}}}{{{b{Al}}}{{Db{Jb}}}}{Bh{{Db{Jn}}}}{Bh{{Db{E`}}}}{Kb{{f{Kd{b{Al}}}}}}{{Df{b{dAh}}}{{f{Aj{b{Al}}}}}}{{}{{f{J`{b{Al}}}}}}{{}{{f{Kf{b{Al}}}}}}{{}{{f{Kh{b{Al}}}}}}{{}{{f{JbJh}}}}`{{{b{dJ`}}J`}Aj}{{{b{dJb}}Jb}Aj}{{J`J`}J`}{{JbJb}Jb}{{{b{J`}}J`}l}{{{b{Jb}}Jb}l}{{}c{}}000000000000000000000{J`c{}}{Jbc{}}{{{b{J`}}}l}{{{b{Jb}}}l}10{{{b{J`}}}{{Dh{J`}}}}{{{b{Jb}}}{{Dh{Jb}}}}{{{b{J`}}}{{Dj{J`}}}}{{{b{Jb}}}{{Dj{Jb}}}}```{Gh{{f{Kj{b{Al}}}}}}{Gh{{f{KlEd}}}}{{GhE`}{{f{Jj{b{Al}}}}}}{J`J`}{JbJb}```{Kl{{f{AjEd}}}}{{{b{dJ`}}J`}Aj}{{{b{dJb}}Jb}Aj}{KnL`}{{{b{dJ`}}J`l}Aj}{{{b{dJb}}Jbl}Aj}{KjAj}{{{b{Ed}}}{{Db{{b{Jd}}}}}}{{{b{Jh}}}{{Db{{b{Jd}}}}}}{{J`J`}J`}{{JbJb}Jb}9810{bc{}}00{bLb}0;:{c{{f{e}}}{}{}}{Bl{{f{Kh{b{Al}}}}}}1111{Bl{{f{Kd{b{Al}}}}}}2{Bl{{f{Kf{b{Al}}}}}}33{Bl{{f{Ldc}}}{}}444{Bl{{f{Lf{b{Al}}}}}}55{Bl{{f{Lh{b{Al}}}}}}666666{Bl{{f{J`{b{Al}}}}}}777{{}{{f{c}}}{}}000000000000000000000{bh}000000000000000000000=<```````````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00`{{{b{Lj}}{b{dA`}}}Ab}{{{b{Ll}}{b{dA`}}}Ab}{{{b{Ln}}{b{dA`}}}Ab}{cc{}}00{Df{{Db{Ln}}}}{{{b{Ll}}}{{Db{Ln}}}}`````{{}c{}}00{c{{f{e}}}{}{}}00;;;`:::{{{b{Ll}}}{{f{Aj{b{Al}}}}}}``````````````````````:::999```{{BhBhBh}Bl}````````{{}M`}{{}Mb}{{}Md}``````````````{{{b{M`}}{b{dA`}}}Ab}{{{b{Mb}}{b{dA`}}}Ab}{{{b{Md}}{b{dA`}}}Ab}```<<<`````````````````````999``````````{MbM`}{BlMb}`````````````````````````````````````:::{{}{{f{c}}}{}}00`{bh}00```````````````","D":"ENf","p":[[1,"reference"],[0,"mut"],[6,"Result",1364],[5,"TypeId",1365],[5,"CpuidInput",29],[1,"bool"],[5,"CpuidFunction",29],[5,"Formatter",1366],[8,"Result",1366],[5,"CpuidOutput",29],[5,"CpuidPage",29],[5,"MutableInterruptStackFrame",703],[1,"unit"],[1,"str"],[5,"GuestMessageEncryptor",82],[5,"GuestMessage",219],[10,"AsBytes",1367],[10,"FromBytes",1367],[10,"Message",219],[1,"u8"],[1,"slice"],[1,"u64"],[5,"ValidBitmap",94],[5,"GhcbProtocol",94],[5,"Ghcb",94],[10,"AsMut",1368],[10,"AsRef",1368],[10,"Sized",1369],[1,"u128"],[5,"PhysAddr",1370],[17,"Item"],[10,"IntoIterator",1371],[6,"Option",1372],[1,"u16"],[1,"u32"],[5,"Iter",1373],[5,"IterNames",1373],[10,"Translator",0],[5,"PhysFrame",1374],[6,"PageAssignment",793],[10,"NotGiantPageSize",1375],[6,"RegisterGhcbGpaError",793],[5,"GuestFieldFlags",219],[6,"KeySelect",219],[5,"KeySelectIter",219],[6,"RootKeySelect",219],[5,"RootKeySelectIter",219],[5,"GuestMessageHeader",219],[5,"KeyRequest",219],[5,"AttestationRequest",219],[6,"KeyStatus",219],[6,"ReportStatus",219],[5,"AuthenticatedHeader",219],[6,"AeadAlgorithm",219],[6,"MessageType",219],[5,"KeyResponse",219],[5,"AttestationResponse",219],[5,"EcdsaPublicKey",219],[6,"EccCurve",219],[1,"usize"],[1,"tuple"],[5,"PermissionMask",560],[6,"Validation",560],[6,"PageSize",560],[6,"Vmsa",560],[5,"RmpPermission",560],[6,"InstructionError",560],[5,"Mutex",1376],[5,"GhcbIoFactory",724],[10,"RawMutex",1376],[8,"Spinlock",1377],[6,"PortFactoryWrapper",724],[10,"IoPortFactory",724],[10,"PortReader",724],[5,"GhcbIoPort",724],[5,"RawIoPortFactory",724],[8,"Port",1378],[6,"PortWrapper",724],[10,"PortWriter",724],[5,"HypervisorFeatureSupportResponse",793],[5,"SevStatus",793],[10,"Error",1379],[5,"Backtrace",1380],[6,"SevStatusError",793],[5,"SnpPageStateChangeRequest",793],[6,"Size2MiB",1375],[6,"CpuidRegister",793],[6,"TerminationReason",793],[5,"CpuidRequest",793],[5,"CpuidResponse",793],[5,"PreferredGhcbGpaResponse",793],[5,"SevInfoResponse",793],[5,"GhcbGpa",793],[5,"RegisterGhcbGpaRequest",793],[5,"TerminationRequest",793],[1,"never"],[5,"String",1381],[5,"RegisterGhcbGpaResponse",793],[5,"SnpPageStateChangeResponse",793],[5,"ApResetHoldResponse",793],[5,"GuestReservedArea",1157],[5,"SecretsPage",1157],[6,"Imi",1157],[5,"VmsaPage",1215],[5,"Vmsa",1215],[5,"SegmentRegister",1215],[5,"ApResetAddress",13],[5,"ApJumpTable",13],[5,"SevInfoRequest",793],[5,"PreferredGhcbGpaRequest",793],[5,"HypervisorFeatureSupportRequest",793],[5,"ApResetHoldRequest",793],[15,"GhcbResponseLocationNotMatchingRequest",1156]],"r":[[710,0]],"b":[[120,"impl-ValidBitmap"],[121,"impl-Flags-for-ValidBitmap"],[141,"impl-Binary-for-ValidBitmap"],[142,"impl-UpperHex-for-ValidBitmap"],[143,"impl-LowerHex-for-ValidBitmap"],[144,"impl-Octal-for-ValidBitmap"],[145,"impl-Debug-for-ValidBitmap"],[150,"impl-ValidBitmap"],[151,"impl-Flags-for-ValidBitmap"],[291,"impl-Flags-for-GuestFieldFlags"],[292,"impl-GuestFieldFlags"],[371,"impl-Binary-for-GuestFieldFlags"],[372,"impl-Octal-for-GuestFieldFlags"],[373,"impl-LowerHex-for-GuestFieldFlags"],[374,"impl-UpperHex-for-GuestFieldFlags"],[399,"impl-GuestFieldFlags"],[400,"impl-Flags-for-GuestFieldFlags"],[585,"impl-PermissionMask"],[586,"impl-Flags-for-PermissionMask"],[628,"impl-UpperHex-for-PermissionMask"],[629,"impl-Debug-for-PermissionMask"],[630,"impl-LowerHex-for-PermissionMask"],[631,"impl-Octal-for-PermissionMask"],[632,"impl-Binary-for-PermissionMask"],[642,"impl-Flags-for-PermissionMask"],[643,"impl-PermissionMask"],[779,"impl-PortReader%3Cu32%3E-for-GhcbIoPort%3C\'a,+R,+P,+G%3E"],[780,"impl-PortReader%3Cu16%3E-for-GhcbIoPort%3C\'a,+R,+P,+G%3E"],[781,"impl-PortReader%3Cu8%3E-for-GhcbIoPort%3C\'a,+R,+P,+G%3E"],[784,"impl-PortWriter%3Cu16%3E-for-GhcbIoPort%3C\'a,+R,+P,+G%3E"],[785,"impl-PortWriter%3Cu8%3E-for-GhcbIoPort%3C\'a,+R,+P,+G%3E"],[786,"impl-PortWriter%3Cu32%3E-for-GhcbIoPort%3C\'a,+R,+P,+G%3E"],[866,"impl-Flags-for-HypervisorFeatureSupportResponse"],[867,"impl-HypervisorFeatureSupportResponse"],[868,"impl-Flags-for-SevStatus"],[869,"impl-SevStatus"],[950,"impl-Display-for-RegisterGhcbGpaError"],[951,"impl-Debug-for-RegisterGhcbGpaError"],[953,"impl-Octal-for-HypervisorFeatureSupportResponse"],[954,"impl-Debug-for-HypervisorFeatureSupportResponse"],[955,"impl-Binary-for-HypervisorFeatureSupportResponse"],[956,"impl-LowerHex-for-HypervisorFeatureSupportResponse"],[957,"impl-UpperHex-for-HypervisorFeatureSupportResponse"],[959,"impl-UpperHex-for-SevStatus"],[960,"impl-LowerHex-for-SevStatus"],[961,"impl-Octal-for-SevStatus"],[962,"impl-Binary-for-SevStatus"],[963,"impl-Debug-for-SevStatus"],[964,"impl-Display-for-SevStatusError"],[965,"impl-Debug-for-SevStatusError"],[990,"impl-Flags-for-HypervisorFeatureSupportResponse"],[991,"impl-HypervisorFeatureSupportResponse"],[992,"impl-SevStatus"],[993,"impl-Flags-for-SevStatus"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAGECZAACAAAACQAAAAsAAAAPAAQAGAAFACQABwA0AAQAOgAAAEQACwBUAAEAXAAEAGUABwBuAAEAcQADAHoAAAB9AAUAhgABAI0ABQCYAAAAnAAAAKcAAAC2AAEAxAAAAM4ACADcAAEACAEAABUBAAAkAQAAKAEvAFsBBABjAQMAaAEUAJEBAACfAQAAoQEDAMIBAgDHAQEAywEBANEBBwDaAQEA5wEBAO8BAwD0ATUASwIAAE4CGgBtAgMAcgIJAIMCAACVAgAApQIEAKsCEQDBAgEAxAIAAMcCAADSAgQA3AIAAN4CAQDiAgkA9gICAPoCAgD+AgwADAMDABEDCAAdAwEAIwMDACkDAAArAwAALwMBADYDAAA7AwAASQMBAFYDBABjAwAAZQMAAGsDLQCbAwgAqAMDALEDAgC2AxAA3wMAAOIDAAAOBAEAGwQCACAEAAAqBAEAMgQEADkESACFBAAAjwQFAJYEAgCmBAUArQQCAMEEAQDHBAUA2QQCAOoEAgAVBQAAPAUFAEMFAgBKBQAA"}],["oak_sev_snp_attestation_report",{"t":"FFGTPFFPTPFFSTTTTGTFPOONNOONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNOOOOONNNNOOOOONNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOONNNNNNNNNNNNNNNNNNNNNNNNNOOONNOOONNOOOOONNOOONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOO","n":["AttestationReport","AttestationReportData","AuthorKey","DEBUG","EcdsaP384Sha384","EcdsaSignature","GuestPolicy","Invalid","MIGRATE_MA","No","PlatformInfo","PolicyFlags","REPORT_DATA_SIZE","RESERVED","SINGLE_SOCKET","SMT","SMT_EN","SigningAlgorithm","TSME_EN","TcbVersion","Yes","abi_major","abi_minor","all","","author_key_digest","author_key_en","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","boot_loader","borrow","","","","","","","","","borrow_mut","","","","","","","","","chip_id","committed_build","committed_major","committed_minor","committed_tcb","complement","","contains","","current_build","current_major","current_minor","current_tcb","data","default","","difference","","empty","","eq","extend","","family_id","flags","fmt","","","","","","","","","","","","","","","from","","","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","from_report_data","from_repr","","get_author_key_en","get_flags","get_platform_info","get_signature_algo","guest_svn","has_debug_flag","host_data","id_key_digest","image_id","insert","","intersection","","intersects","","into","","","","","","","","","into_iter","","is_all","","is_empty","","iter","","iter_names","","launch_tcb","measurement","microcode","not","","platform_info","policy","r","remove","","report_data","report_id","report_id_ma","reported_tcb","s","set","","signature","signature_algo","snp","sub","","sub_assign","","symmetric_difference","","tee","toggle","","try_from","","","","","","","","","try_into","","","","","","","","","type_id","","","","","","","","","union","","validate","","","","validate_format","version","vmpl"],"q":[[0,"oak_sev_snp_attestation_report"],[225,"core::iter::traits::collect"],[226,"core::fmt"],[227,"core::option"],[228,"core::result"],[229,"bitflags::iter"],[230,"core::any"]],"i":"```dAb``01Bd```222b`0`1B`014An02525252522552525BbAh2463175Bf1357428603333358583333158585875834135555742888860135742860585588585858176343331333585858135742860585858585833258330583333058132585858258135742860135742860135742860581342033","f":"```````````````````````{{}b}{{}d}``{{bb}b}{{dd}d}{{{h{fb}}b}j}{{{h{fd}}d}j}3210{{{h{b}}}l}0{{{h{d}}}n}05432`{h{{h{c}}}{}}00000000{{{h{f}}}{{h{fc}}}{}}00000000`````{bb}{dd}{{{h{b}}b}A`}{{{h{d}}d}A`}`````=<;:=<{{{h{Ab}}{h{Ab}}}A`}{{{h{fb}}c}j{{Af{}{{Ad{b}}}}}}{{{h{fd}}c}j{{Af{}{{Ad{d}}}}}}``{{{h{Ah}}{h{fAj}}}Al}{{{h{An}}{h{fAj}}}Al}{{{h{b}}{h{fAj}}}Al}000{{{h{Ab}}{h{fAj}}}Al}{{{h{B`}}{h{fAj}}}Al}{{{h{Bb}}{h{fAj}}}Al}{{{h{d}}{h{fAj}}}Al}000{{{h{Bd}}{h{fAj}}}Al}{{{h{Bf}}{h{fAj}}}Al}{cc{}}00000000{l{{Bh{b}}}}{n{{Bh{d}}}}{lb}0{nd}010{cb{{Af{}{{Ad{b}}}}}}{cd{{Af{}{{Ad{d}}}}}}{{{h{Bj}}}{{Bh{b}}}}{{{h{Bj}}}{{Bh{d}}}}{{{Bn{Bl}}}Ah}{C`{{Bh{Ab}}}}{l{{Bh{Bd}}}}{{{h{An}}}{{Bh{Bd}}}}{{{h{B`}}}{{Bh{d}}}}{{{h{An}}}{{Bh{b}}}}{{{h{An}}}{{Bh{Ab}}}}`{{{h{Ah}}}{{Cb{A`{h{Bj}}}}}}```{{{h{fb}}b}j}{{{h{fd}}d}j}{{bb}b}{{dd}d}{{{h{b}}b}A`}{{{h{d}}d}A`}{{}c{}}00000000{bc{}}{dc{}}{{{h{b}}}A`}{{{h{d}}}A`}10{{{h{b}}}{{Cd{b}}}}{{{h{d}}}{{Cd{d}}}}{{{h{b}}}{{Cf{b}}}}{{{h{d}}}{{Cf{d}}}}```{bb}{dd}```{{{h{fb}}b}j}{{{h{fd}}d}j}`````{{{h{fb}}bA`}j}{{{h{fd}}dA`}j}```{{bb}b}{{dd}d}5410`54{c{{Cb{e}}}{}{}}00000000{{}{{Cb{c}}}{}}00000000{hCh}0000000043{{{h{Ah}}}{{Cb{j{h{Bj}}}}}}{{{h{An}}}{{Cb{j{h{Bj}}}}}}{{{h{B`}}}{{Cb{j{h{Bj}}}}}}{{{h{Bb}}}{{Cb{j{h{Bj}}}}}}{{{h{Bf}}}{{Cb{j{h{Bj}}}}}}``","D":"ACh","p":[[5,"PlatformInfo",0],[5,"PolicyFlags",0],[0,"mut"],[1,"reference"],[1,"unit"],[1,"u64"],[1,"u16"],[1,"bool"],[6,"SigningAlgorithm",0],[17,"Item"],[10,"IntoIterator",225],[5,"AttestationReport",0],[5,"Formatter",226],[8,"Result",226],[5,"AttestationReportData",0],[5,"GuestPolicy",0],[5,"TcbVersion",0],[6,"AuthorKey",0],[5,"EcdsaSignature",0],[6,"Option",227],[1,"str"],[1,"u8"],[1,"array"],[1,"u32"],[6,"Result",228],[5,"Iter",229],[5,"IterNames",229],[5,"TypeId",230]],"r":[],"b":[[35,"impl-Flags-for-PlatformInfo"],[36,"impl-PlatformInfo"],[37,"impl-Flags-for-PolicyFlags"],[38,"impl-PolicyFlags"],[89,"impl-LowerHex-for-PlatformInfo"],[90,"impl-Binary-for-PlatformInfo"],[91,"impl-Octal-for-PlatformInfo"],[92,"impl-UpperHex-for-PlatformInfo"],[96,"impl-Binary-for-PolicyFlags"],[97,"impl-Octal-for-PolicyFlags"],[98,"impl-LowerHex-for-PolicyFlags"],[99,"impl-UpperHex-for-PolicyFlags"],[113,"impl-PlatformInfo"],[114,"impl-Flags-for-PlatformInfo"],[115,"impl-PolicyFlags"],[116,"impl-Flags-for-PolicyFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEUACwAkAAAAJgAAAC0AEQBNAAEAUwAAAFgADgBzAAAAdQAAAIQAAACXAAEAvgAaAA=="}],["oak_simple_io",{"t":"FSSSSFKNNNNNNNNNNNNNNNNNN","n":["BufferDescriptor","DEFAULT_INPUT_BUFFER","DEFAULT_OUTPUT_BUFFER","INPUT_BUFFER_LENGTH","OUTPUT_BUFFER_LENGTH","SimpleIo","Translator","borrow","","borrow_mut","","from","","into","","new","new_with_defaults","read_bytes","try_from","","try_into","","type_id","","write_bytes"],"q":[[0,"oak_simple_io"],[25,"oak_sev_guest::io"],[26,"core::result"],[27,"core::alloc"],[28,"alloc::collections::vec_deque"],[29,"core::option"],[30,"core::any"]],"i":"```````hj1010100001010100","f":"```````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{cc{}}0{{}c{}}0{{fchh{b{e}}}{{n{{j{e}}{b{l}}}}}A`Ab}{{fc{b{e}}}{{n{{j{e}}{b{l}}}}}A`Ab}{{{b{d{j{c}}}}}{{Ah{{Af{Ad}}}}}Ab}{c{{n{e}}}{}{}}0{{}{{n{c}}}{}}0{bAj}0{{{b{d{j{c}}}}{b{{Al{Ad}}}}}{{n{An{b{l}}}}}Ab}","D":"Al","p":[[1,"reference"],[0,"mut"],[6,"PortFactoryWrapper",25],[5,"BufferDescriptor",0],[5,"SimpleIo",0],[1,"str"],[6,"Result",26],[10,"Translator",0],[10,"Allocator",27],[1,"u8"],[5,"VecDeque",28],[6,"Option",29],[5,"TypeId",30],[1,"slice"],[1,"usize"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAsAAwAIAAMAEAABABMABQA="}],["oak_stage0_dice",{"t":"IHHHHHH","n":["DerivedKey","derive_sealing_cdi","dice_data_proto_to_stage0_dice_data","encode_stage0_event","generate_initial_dice_data","mock_attestation_report","mock_derived_key"],"q":[[0,"oak_stage0_dice"],[7,"oak_proto_rust::oak::attestation::v1"],[8,"oak_dice::evidence"],[9,"core::result"],[10,"alloc::vec"],[11,"oak_sev_snp_attestation_report"],[12,"core::ops::function"]],"i":"```````","f":"`{{{d{b}}{d{f}}}b}{{{d{h}}}{{n{j{d{l}}}}}}{f{{Ab{A`}}}}{{cAd}{{n{h{d{l}}}}}{{Al{{Af{A`}}}{{Ah{{n{Aj{d{l}}}}}}}}}}{{{Af{A`}}}{{n{Aj{d{l}}}}}}{{}{{n{b{d{l}}}}}}","D":"j","p":[[8,"DerivedKey",0],[1,"reference"],[5,"Stage0Measurements",7],[5,"DiceData",7],[5,"Stage0DiceData",8],[1,"str"],[6,"Result",9],[1,"u8"],[5,"Vec",10],[6,"TeePlatform",8],[1,"array"],[17,"Output"],[5,"AttestationReport",11],[10,"FnOnce",12]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAIAEAAAAAEAAwAEAA=="}],["oak_tdx_guest",{"t":"CCGPFTGFTPPTTTPPTTTTPPPPPGTPPTFGKFHNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNOONHNNNNNNNNNNNNNNNNNNNNNNNNNNHHOOONOONNNNNNNNNNNNNNNONONNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGPPGPPPPPPPNNNNHNNNNHHNNHHHHHHHHHHHHHNNNNNN","n":["tdcall","vmcall","AcceptMemoryError","AlreadyAccepted","Attributes","DEBUG","ExtendRtmrError","ExtensionBuffer","HGS_PLUS_PROF","InvalidOperand","InvalidOperandInRcx","KL","LASS","MIGRATABLE","OperandBusy","","PERFMON","PERF_PROF","PKS","PMT_PROF","PageSizeMisMatch","Rtmr0","Rtmr1","Rtmr2","Rtmr3","RtmrIndex","SEPT_VE_DISABLE","Size2MiB","Size4KiB","TPA","TdInfo","TdxPageSize","TdxSize","VeInfo","accept_memory","all","attributes","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","","borrow_mut","","","","","","","","complement","contains","data","default","difference","empty","exit_qualification","exit_reason","extend","extend_rtmr","fmt","","","","","","","","","","from","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","from_repr","","get_td_info","get_ve_info","gpa_width","guest_linear_address","guest_physical_address","insert","instruction_info","instruction_length","intersection","intersects","into","","","","","","","","into_iter","is_all","is_empty","iter","iter_names","max_vcpus","not","num_vcpus","remove","set","sub","sub_assign","symmetric_difference","tdx_size","to_string","","toggle","try_from","","","","","","","","try_into","","","","","","","","type_id","","","","","","","","union","AlignError","GPAInUse","GetQuoteError","InvalidOperand","","MapGpaError","QuoteError","QuoteInFlight","RetriedTooManyTimes","ServiceUnavailable","TooManyRetry","UnknownError","","borrow","","borrow_mut","","call_cpuid","fmt","","from","","get_quote","get_td_vm_call_info","into","","io_read_u16","io_read_u32","io_read_u8","io_write_u16","io_write_u32","io_write_u8","map_gpa","mmio_read_u32","mmio_write_u32","msr_read","msr_write","tdvmcall_wbinvd","tdvmcall_wbnoinvd","try_from","","try_into","","type_id",""],"q":[[0,"oak_tdx_guest"],[2,"oak_tdx_guest::tdcall"],[157,"oak_tdx_guest::vmcall"],[202,"x86_64::structures::paging::frame"],[203,"core::result"],[204,"x86_64::structures::paging::page"],[205,"core::iter::traits::collect"],[206,"core::convert"],[207,"core::fmt"],[208,"core::option"],[209,"bitflags::iter"],[210,"alloc::string"],[211,"core::any"],[212,"core::core_arch::x86::cpuid"]],"i":"```f`n``0An21112011112Al000`2Bj03`````3C`444444440CbB`6734521067345660666116`66667734552106734566666675``21161166210673456666626266666l8673217845632178456321784567D`0`0Db`00100101010`1010``10`````````````101010","f":"``````````````````````````````````{{{b{c}}}{{h{df}}}{jl}}{{}n}`{{nn}n}{{{Ab{A`n}}n}d}10{{{Ab{n}}}Ad}021{Ab{{Ab{c}}}{}}0000000{{{Ab{A`}}}{{Ab{A`c}}}{}}0000000{nn}{{{Ab{n}}n}Af}`767``{{{Ab{A`n}}c}d{{Aj{}{{Ah{n}}}}}}{{Alc}{{h{dAn}}}{{Bb{B`}}}}{{{Ab{n}}{Ab{A`Bd}}}Bf}000{{{Ab{f}}{Ab{A`Bd}}}{{h{dBh}}}}{{{Ab{f}}{Ab{A`Bd}}}Bf}{{{Ab{Bj}}{Ab{A`Bd}}}Bf}{{{Ab{Al}}{Ab{A`Bd}}}Bf}{{{Ab{An}}{Ab{A`Bd}}}{{h{dBh}}}}{{{Ab{An}}{Ab{A`Bd}}}Bf}{cc{}}0000000{Ad{{Bl{n}}}}{Adn}00{cn{{Aj{}{{Ah{n}}}}}}{{{Ab{Bn}}}{{Bl{n}}}}{Ad{{Bl{f}}}}{Ad{{Bl{An}}}}{{}C`}{{}{{Bl{Cb}}}}```{{{Ab{A`n}}n}d}``{{nn}n}{{{Ab{n}}n}Af}{{}c{}}0000000{nc{}}{{{Ab{n}}}Af}0{{{Ab{n}}}{{Cd{n}}}}{{{Ab{n}}}{{Cf{n}}}}`{nn}`8{{{Ab{A`n}}nAf}d}898{{}Bj}{AbCh}0;{c{{h{e}}}{}{}}0000000{{}{{h{c}}}{}}0000000{AbCj}0000000=`````````````{Ab{{Ab{c}}}{}}0{{{Ab{A`}}}{{Ab{A`c}}}{}}0{{ClCl}{{h{Cn{Ab{Bn}}}}}}{{{Ab{D`}}{Ab{A`Bd}}}Bf}{{{Ab{Db}}{Ab{A`Bd}}}Bf}{cc{}}0{{{Df{Dd}}}{{h{dDb}}}}{{}{{h{d{Ab{Bn}}}}}}{{}c{}}0{Cl{{h{Dh{Ab{Bn}}}}}}{Cl{{h{Cl{Ab{Bn}}}}}}{Cl{{h{Dj{Ab{Bn}}}}}}{{ClDh}{{h{d{Ab{Bn}}}}}}{{ClCl}{{h{d{Ab{Bn}}}}}}{{ClDj}{{h{d{Ab{Bn}}}}}}{{{Df{Dd}}}{{h{dD`}}}}52{Cl{{h{Ad{Ab{Bn}}}}}}{{ClAd}{{h{d{Ab{Bn}}}}}}::{c{{h{e}}}{}{}}0{{}{{h{c}}}{}}0{AbCj}0","D":"Nd","p":[[5,"PhysFrame",202],[1,"unit"],[6,"AcceptMemoryError",2],[6,"Result",203],[10,"PageSize",204],[10,"TdxSize",2],[5,"Attributes",2],[0,"mut"],[1,"reference"],[1,"u64"],[1,"bool"],[17,"Item"],[10,"IntoIterator",205],[6,"RtmrIndex",2],[6,"ExtendRtmrError",2],[5,"ExtensionBuffer",2],[10,"Into",206],[5,"Formatter",207],[8,"Result",207],[5,"Error",207],[6,"TdxPageSize",2],[6,"Option",208],[1,"str"],[5,"TdInfo",2],[5,"VeInfo",2],[5,"Iter",209],[5,"IterNames",209],[5,"String",210],[5,"TypeId",211],[1,"u32"],[5,"CpuidResult",212],[6,"MapGpaError",157],[6,"GetQuoteError",157],[6,"Size4KiB",204],[5,"PhysFrameRange",202],[1,"u16"],[1,"u8"]],"r":[],"b":[[41,"impl-Flags-for-Attributes"],[42,"impl-Attributes"],[71,"impl-UpperHex-for-Attributes"],[72,"impl-Binary-for-Attributes"],[73,"impl-Octal-for-Attributes"],[74,"impl-LowerHex-for-Attributes"],[75,"impl-Display-for-AcceptMemoryError"],[76,"impl-Debug-for-AcceptMemoryError"],[79,"impl-Display-for-ExtendRtmrError"],[80,"impl-Debug-for-ExtendRtmrError"],[90,"impl-Attributes"],[91,"impl-Flags-for-Attributes"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFgADwAWAAMAHAABACAAAAAqAAAALgAPAEAAAQBIAAkAXAAAAHQAAACBAAIAhQAXAJ4ABACkAAoAsAABAMUABQA="}],["sev_serial",{"t":"FNNNNNNNNNNNN","n":["SerialPort","borrow","borrow_mut","from","init","into","new","send","try_from","try_into","type_id","wait_for_empty_output","write_str"],"q":[[0,"sev_serial"],[13,"core::result"],[14,"oak_sev_guest::io"],[15,"core::any"],[16,"core::fmt"]],"i":"`f00000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{cc{}}{{{b{d{f{gce}}}}}{{l{h{b{j}}}}}{{A`{n}}}{{Ab{n}}}{{Ad{nce}}}}{{}c{}}{{Afg}{{f{gce}}}{{A`{n}}}{{Ab{n}}}{{Ad{nce}}}}{{{b{d{f{gce}}}}n}{{l{h{b{j}}}}}{{A`{n}}}{{Ab{n}}}{{Ad{nce}}}}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{bAh}6{{{b{d{f{gce}}}}{b{j}}}Aj{{A`{n}}}{{Ab{n}}}{{Ad{nce}}}}","D":"n","p":[[1,"reference"],[0,"mut"],[5,"SerialPort",0],[1,"unit"],[1,"str"],[6,"Result",13],[1,"u8"],[10,"PortReader",14],[10,"PortWriter",14],[10,"IoPortFactory",14],[1,"u16"],[5,"TypeId",15],[8,"Result",16]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAYABAAAAAAAAgABAAkAAgANAAAA"}],["snp_measurement",{"t":"FONNNNNNNNNNNNNNOHCCNONNNNNNOCPGPPPSFGPPPPOOOOOONNNNNNNNNNNNNNNONONNNNNNNNNONNNNONNNNNNNNNNNNNNNNNPSSSSFPSSSSSSSSPFFFGFPNNNNNNNNNNNNOONNNNNNNNNNNNONNNNNNONOOHNOONNNNONOOOONNNNNNNNNNNNNNNNNNSSSSHH","n":["Cli","attestation_measurements_output_dir","augment_args","augment_args_for_update","borrow","borrow_mut","clone","clone_into","clone_to_uninit","command","command_for_update","from","from_arg_matches","from_arg_matches_mut","group_id","into","legacy_boot","main","page","stage0","stage0_path","stage0_rom","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vcpu_count","vmsa","Cpuid","ImiPage","Invalid","No","Normal","PAGE_INFO_SIZE","PageInfo","PageType","Secrets","Unmeasured","Vmsa","Zero","_imi_page","_length","_reserved","_vmpl1_perms","_vmpl2_perms","_vmpl3_perms","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","contents","default","digest_cur","fmt","","","from","","","","from_repr","","gpa","into","","","new","page_type","set_contents_from_page_bytes","to_owned","","","try_from","","","try_into","","","type_id","","","update_current_digest","update_from_data","update_from_snp_page","update_from_vmsa","Cpuid","FIRMWARE_TOP","GUID_TABLE_END_OFFSET","GUID_TABLE_ENTRY_HEADER_SIZE","GUID_TABLE_FOOTER_GUID","GuidTableEntryHeader","Invalid","LEGACY_MAX_SIZE","LEGACY_TOP","SEV_ES_RESET_GUID","SEV_MEATADATA_GUID","SEV_METADATA_ENTRY_SIZE","SEV_METADATA_HEADER_SIZE","SEV_METADATA_VERSION","SEV_SECTION_SIGNATURE","Secrets","SevEsResetBlock","SevMetadataHeader","SevMetadataPageInfo","SevMetadataPageType","Stage0Info","Unmeasured","borrow","","","","","","borrow_mut","","","","","","bytes","count","fmt","from","","","","","","","from_repr","get_guid_table_content","get_sev_es_reset_block","get_snp_pages","guid","into","","","","","","legacy_offset","legacy_shadow_bytes","legacy_start_address","length","load_stage0","new","page_count","page_type","parse","","","parse_firmware_guid_table","rip","rom_bytes","segment_base","size","start_address","","try_from","","","","","","try_into","","","","","","type_id","","","","","","CPU_FAMILY","CPU_MODEL","CPU_STEPPING","VMSA_ADDRESS","get_ap_vmsa","get_boot_vmsa"],"q":[[0,"snp_measurement"],[30,"snp_measurement::page"],[98,"snp_measurement::stage0"],[189,"snp_measurement::vmsa"],[195,"clap_builder::builder::command"],[196,"clap_builder::parser::matches::arg_matches"],[197,"clap_builder"],[198,"core::result"],[199,"clap_builder::util::id"],[200,"core::option"],[201,"anyhow"],[202,"std::path"],[203,"core::any"],[204,"core::fmt"],[205,"x86_64::addr"],[206,"oak_sev_guest::vmsa"],[207,"alloc::vec"],[208,"std::collections::hash::map"]],"i":"`h000000000000000```000000000`B``0An1```1111Al0000001201201201201200001201221200120000120120120120000Bf`````0````````0`````0CdCfCbCjCl54321054054322105544414321054440`4333104242143432105432105432105``````","f":"``{bb}0{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{h}}}h}{{d{d{fc}}}j{}}{dj}{{}b}0{cc{}}{{{d{l}}}{{A`{hn}}}}{{{d{fl}}}{{A`{hn}}}}{{}{{Ad{Ab}}}}{{}c{}}`{{}{{Af{j}}}}``{{{d{h}}}Ah}`{dc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{dAj}{{{d{fh}}{d{l}}}{{A`{jn}}}}{{{d{fh}}{d{fl}}}{{A`{jn}}}}````````````````````{d{{d{c}}}{}}00{{{d{f}}}{{d{fc}}}{}}00{{{d{Al}}}Al}{{{d{An}}}An}{{{d{B`}}}B`}{{d{d{fc}}}j{}}00{dj}00`{{}Al}`{{{d{Al}}{d{fBb}}}Bd}{{{d{An}}{d{fBb}}}Bd}{{{d{B`}}{d{fBb}}}Bd}{cc{}}0{BfB`}1{Bh{{Ad{An}}}}{Bh{{Ad{B`}}}}`{{}c{}}008`{{{d{fAl}}{d{{Bj{Bh}}}}}j}{dc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{dAj}00{{{d{fAl}}}j}{{{d{fAl}}{d{{Bj{Bh}}}}Bl}j}{{{d{fAl}}B`Bl}j}{{{d{fAl}}{d{Bn}}Bl}j}``````````````````````{d{{d{c}}}{}}00000{{{d{f}}}{{d{fc}}}{}}00000``{{{d{Bf}}{d{fBb}}}Bd}{cc{}}0{C`Cb}1111{C`{{Ad{Bf}}}}{{{d{Cd}}}{{d{{Bj{Bh}}}}}}{{{d{Cd}}}Cb}{{{d{Cd}}}{{Ch{Cf}}}}`{{}c{}}00000`3``{Ah{{Af{Cd}}}}{{{Ch{Bh}}}Cd}``{{{d{{Bj{Bh}}}}}Cf}{{{d{{Bj{Bh}}}}}Cj}{{{d{{Bj{Bh}}}}}Cl}{{{d{Cd}}}{{D`{Cn{d{{Bj{Bh}}}}}}}}`9````{c{{A`{e}}}{}{}}00000{{}{{A`{c}}}{}}00000{dAj}00000````{{{d{Cb}}}Bn}{{}Bn}","D":"Jj","p":[[5,"Command",195],[1,"reference"],[0,"mut"],[5,"Cli",0],[1,"unit"],[5,"ArgMatches",196],[8,"Error",197],[6,"Result",198],[5,"Id",199],[6,"Option",200],[8,"Result",201],[5,"PathBuf",202],[5,"TypeId",203],[5,"PageInfo",30],[6,"ImiPage",30],[6,"PageType",30],[5,"Formatter",204],[8,"Result",204],[6,"SevMetadataPageType",98],[1,"u8"],[1,"slice"],[5,"PhysAddr",205],[5,"VmsaPage",206],[1,"u32"],[5,"SevEsResetBlock",98],[5,"Stage0Info",98],[5,"SevMetadataPageInfo",98],[5,"Vec",207],[5,"GuidTableEntryHeader",98],[5,"SevMetadataHeader",98],[1,"u128"],[5,"HashMap",208]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAG4AFQAAAAsADQACABEADQAxAA4AQQAAAEMAAgBIAAAAUAAAAFMACwBjAAAAaQAAAHIAAAB4AAwAhgABAIoAAACTAAAAnQAAAJ8ABQCmAAAAqAABAKsAEgA="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[157,135,182,415,16041,1694,1547,448,285,846,3628,880,2697,1605,1311,4024,1377,307,1112,3872,3416,6651,515,4596,1598,8532,853,6656,3421,1018,259,1769,835,1920,772,236,232,9310,200,2564,22537,871,3038,9168,5745,74360,502,4759,469,7927,11385,1537,28846,4817,1117,912,5067,905,4763]}