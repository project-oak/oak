var searchIndex = new Map(JSON.parse('[["echo",{"t":"H","n":["main"],"q":[[0,"echo"]],"i":"`","f":"{{}b}","D":"b","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAEA"}],["invalid_module",{"t":"","n":[],"q":[],"i":"","f":"","D":"`","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],["key_value_lookup",{"t":"H","n":["main"],"q":[[0,"key_value_lookup"]],"i":"`","f":"{{}b}","D":"b","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAEA"}],["lookup_data_generator",{"t":"CH","n":["data","generate_and_serialize_random_entries"],"q":[[0,"lookup_data_generator"],[1,"lookup_data_generator::data"],[2,"bytes::bytes_mut"],[3,"anyhow"],[4,"rand::rng"]],"i":"``","f":"`{{{d{bc}}fff}{{j{h}}}l}","D":"b","p":[[0,"mut"],[1,"reference"],[1,"usize"],[5,"BytesMut",2],[8,"Result",3],[10,"Rng",4]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA="}],["micro_rpc",{"t":"PPKPPPEPRRPPPPEPPPPFPFGFGKPPPPFNNNNNNNNNNNNNNNNNHONNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNN","n":["Aborted","AlreadyExists","AsyncTransport","Cancelled","DataLoss","DeadlineExceeded","Err","","Error","","FailedPrecondition","Internal","InvalidArgument","NotFound","Ok","","","OutOfRange","PermissionDenied","RequestWrapper","ResourceExhausted","ResponseWrapper","Result","Status","StatusCode","Transport","Unauthenticated","Unavailable","Unimplemented","Unknown","Vec","advance_mut","allocator","and","and_then","append","as_deref","as_deref_mut","as_mut","","","as_mut_ptr","as_mut_slice","as_ptr","as_ref","","","as_slice","async_client_invoke","body","borrow","","","","","","","borrow_mut","","","","","","","branch","capacity","chunk_mut","clear","","","","client_invoke","clone","","","","clone_from","","clone_into","","","","clone_to_uninit","","","","cloned","","cmp","","code","copied","","dedup","dedup_by","dedup_by_key","default","","","deref","deref_mut","drain","drop","encoded_len","","","eq","","","","","","","","","","","","","err","expect","expect_err","extend","","extend_from_slice","extend_from_within","extend_one","","extend_reserve","","extract_if","flatten","flush","fmt","","","","","","","format","from","","","","","","","","","","","","","","","","","","","","","","","","","from_iter","","from_output","from_raw_parts","from_raw_parts_in","from_residual","","hash","","index","index_mut","insert","inspect","inspect_err","into","","","","","","into_boxed_slice","into_err","into_flattened","into_iter","","","","","","into_ok","into_raw_parts","into_raw_parts_with_alloc","invoke","","is_empty","is_err","is_err_and","is_ok","is_ok_and","is_write_vectored","iter","iter_mut","leak","len","map","map_err","map_or","map_or_else","message","method_id","ne","","","","","","new","","new_in","new_with_message","ok","or","or_else","partial_cmp","","","","pop","pop_if","product","push","push_within_capacity","put","put_bytes","put_slice","remaining_mut","remove","report","reserve","reserve_exact","resize","resize_with","response","response_wrapper","retain","retain_mut","set_len","shrink_to","shrink_to_fit","spare_capacity_mut","splice","split_at_spare_mut","split_off","sum","swap_remove","to_owned","","","","to_string","transpose","truncate","try_from","","","","","","try_into","","","","","","try_reserve","try_reserve_exact","try_with_capacity","try_with_capacity_in","type_id","","","","","","unwrap","unwrap_err","unwrap_err_unchecked","unwrap_or","unwrap_or_default","unwrap_or_else","unwrap_unchecked","with_capacity","with_capacity_in","write","write_all","write_vectored","Body","Error","Response","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id"],"q":[[0,"micro_rpc"],[302,"micro_rpc::response_wrapper"],[321,"alloc::vec"],[322,"core::alloc"],[323,"core::result"],[324,"core::ops::function"],[325,"core::ops::deref"],[326,"micro_rpc::status"],[327,"prost::message"],[328,"core::default"],[329,"core::ops::control_flow"],[330,"bytes::buf::uninit_slice"],[331,"micro_rpc::proto"],[332,"core::clone"],[333,"core::cmp"],[334,"core::marker"],[335,"alloc::vec::drain"],[336,"core::ops::range"],[337,"bytes::bytes_mut"],[338,"bytes::bytes"],[339,"core::option"],[340,"core::fmt"],[341,"core::iter::traits::collect"],[342,"alloc::vec::extract_if"],[343,"std::io::error"],[344,"alloc::collections::binary_heap"],[345,"alloc::collections::vec_deque"],[346,"alloc::ffi::c_str"],[347,"alloc::string"],[348,"alloc::borrow"],[349,"alloc::boxed"],[350,"miniz_oxide"],[351,"core::ops::try_trait"],[352,"core::convert"],[353,"core::hash"],[354,"core::slice::index"],[355,"core::future::future"],[356,"core::pin"],[357,"core::iter::traits::iterator"],[358,"core::iter::traits::accum"],[359,"bytes::buf::buf_impl"],[360,"std::process"],[361,"core::mem::maybe_uninit"],[362,"alloc::vec::splice"],[363,"alloc::collections"],[364,"core::any"],[365,"std::io"],[366,"micro_rpc::proto::response_wrapper"],[367,"bytes::buf::buf_mut"],[368,"prost::encoding"],[369,"prost::error"],[370,"core::result::Result"],[371,"alloc"]],"i":"Db0`000`A`BnB`3333`3233`3`````3333`f0330330030000030`Bj0BlAn733621073366332133`21363621362136663606633321333332132107333333336666333333333632100736`211077333333333333333666636633663633366210736363333666633543666636633666602333333033066633363363333333633331`3333333336321360632107362107363333210736666666633333Jf0`0000000000000000","f":"```````````````````````````````{{{h{b{f{d}}}}j}l}{{{h{{f{ce}}}}}{{h{e}}}{}n}{{{A`{ce}}{A`{ge}}}{{A`{ge}}}{}{}{}}{{{A`{ce}}i}{{A`{ge}}}{}{}{}{{Ad{c}{{Ab{{A`{ge}}}}}}}}{{{h{b{f{ce}}}}{h{b{f{ce}}}}}l{}n}{{{h{{A`{ce}}}}}{{A`{h{h{e}}}}}Af{}}{{{h{b{A`{ce}}}}}{{A`{{h{b}}{h{be}}}}}Ah{}}{{{h{b{f{ce}}}}}{{h{b{f{ce}}}}}{}n}{{{h{b{f{ce}}}}}{{h{b{Aj{c}}}}}{}n}{{{h{b{A`{ce}}}}}{{A`{{h{bc}}{h{be}}}}}{}{}}{{{h{b{f{ce}}}}}{}{}n}2{{{h{{f{ce}}}}}{}{}n}{{{h{{f{ce}}}}}{{h{{Aj{c}}}}}{}n}{{{h{{f{ce}}}}}{{h{{f{ce}}}}}{}n}{{{h{{A`{ce}}}}}{{A`{{h{c}}{h{e}}}}}{}{}}2{{{h{bc}}Al{h{e}}}{{A`{{A`{gAn}}}}}B`Bb{BbBd}}`{h{{h{c}}}{}}000040{{{h{b}}}{{h{bc}}}{}}000090{{{A`{ce}}}Bf{}{}}{{{h{{f{ce}}}}}j{}n}{{{h{b{f{d}}}}}{{h{bBh}}}}{{{h{bBj}}}l}{{{h{bBl}}}l}{{{h{b{f{d}}}}}l}{{{h{b{f{ce}}}}}l{}n}{{{h{bc}}Al{h{e}}}{{A`{{A`{gAn}}}}}BnBb{BbBd}}{{{h{Bj}}}Bj}{{{h{Bl}}}Bl}{{{h{{f{ce}}}}}{{f{ce}}}C`{nC`}}{{{h{{A`{ce}}}}}{{A`{ce}}}C`C`}{{{h{b{f{ce}}}}{h{{f{ce}}}}}lC`{nC`}}{{{h{b{A`{ce}}}}{h{{A`{ce}}}}}lC`C`}{{h{h{bc}}}l{}}000{hl}000{{{A`{{h{bc}}e}}}{{A`{ce}}}C`{}}{{{A`{{h{c}}e}}}{{A`{ce}}}C`{}}{{{h{{f{ce}}}}{h{{f{ce}}}}}CbCdn}{{{h{{A`{ce}}}}{h{{A`{ce}}}}}CbCdCd}`{{{A`{{h{bc}}e}}}{{A`{ce}}}Cf{}}{{{A`{{h{c}}e}}}{{A`{ce}}}Cf{}}{{{h{b{f{ce}}}}}lChn}{{{h{b{f{ce}}}}g}l{}n{{Cl{{h{bc}}{h{bc}}}{{Ab{Cj}}}}}}{{{h{b{f{ce}}}}i}l{}nCh{{Cl{{h{bc}}}{{Ab{g}}}}}}{{}Bj}{{}Bl}{{}{{f{c}}}{}}{{{h{{f{ce}}}}}{{h{{Aj{c}}}}}{}n}{{{h{b{f{ce}}}}}{{h{b{Aj{c}}}}}{}n}{{{h{b{f{ce}}}}g}{{Cn{ce}}}{}n{{D`{j}}}}{{{h{b{f{ce}}}}}l{}n}{{{h{Bj}}}j}{{{h{Bl}}}j}{{{h{{f{d}}}}}j}{{{h{Bj}}{h{Bj}}}Cj}{{{h{Bl}}{h{Bl}}}Cj}{{{h{An}}{h{An}}}Cj}{{{h{Db}}{h{Db}}}Cj}{{{h{{f{eg}}}}{h{{f{ci}}}}}Cj{}{{Ch{c}}}nn}{{{h{{f{d}}}}{h{Dd}}}Cj}{{{h{{f{eg}}}}{h{{h{{Df{c}}}}}}}Cj{}{{Ch{c}}}n}{{{h{{f{eg}}}}{h{{Df{c}}}}}Cj{}{{Ch{c}}}n}{{{h{{f{eg}}}}{h{{Aj{c}}}}}Cj{}{{Ch{c}}}n}{{{h{{f{d}}}}{h{Dh}}}Cj}{{{h{{f{eg}}}}{h{{h{b{Aj{c}}}}}}}Cj{}{{Ch{c}}}n}{{{h{{f{eg}}}}{h{{h{{Aj{c}}}}}}}Cj{}{{Ch{c}}}n}{{{h{{A`{ce}}}}{h{{A`{ce}}}}}CjChCh}{{{A`{ce}}}{{Dj{e}}}{}{}}{{{A`{ce}}{h{Dl}}}c{}Dn}{{{A`{ce}}{h{Dl}}}eDn{}}{{{h{b{f{ce}}}}g}lCfn{{Eb{}{{E`{{h{c}}}}}}}}{{{h{b{f{ce}}}}g}l{}n{{Eb{}{{E`{c}}}}}}{{{h{b{f{ce}}}}{h{{Aj{c}}}}}lC`n}{{{h{b{f{ce}}}}g}lC`n{{D`{j}}}}{{{h{b{f{ce}}}}c}l{}n}{{{h{b{f{ce}}}}{h{c}}}lCfn}{{{h{b{f{ce}}}}j}l{}n}{{{h{b{f{ce}}}}j}lCfn}{{{h{b{f{ce}}}}g}{{Ed{cge}}}{}n{{Cl{{h{bc}}}{{Ab{Cj}}}}}}{{{A`{{A`{ce}}e}}}{{A`{ce}}}{}{}}{{{h{b{f{dc}}}}}{{A`{lEf}}}n}{{{h{Bj}}{h{bEh}}}Ej}{{{h{Bl}}{h{bEh}}}Ej}{{{h{An}}{h{bEh}}}Ej}0{{{h{Db}}{h{bEh}}}Ej}{{{h{{f{ce}}}}{h{bEh}}}{{A`{lEl}}}Dnn}{{{h{{A`{ce}}}}{h{bEh}}}{{A`{lEl}}}DnDn}`{cc{}}0{{{A`{{f{d}}An}}}Bl}1{AlDb}2{Dh{{f{d}}}}3{{{En{ce}}}{{f{ce}}}{}n}{{{F`{ce}}}{{f{ce}}}{}n}{Fb{{f{d}}}}{Fd{{f{d}}}}{{{h{{Aj{c}}}}}{{f{c}}}C`}{{{h{b{Aj{c}}}}}{{f{c}}}C`}{{{h{{Df{c}}}}}{{f{c}}}C`}{{{h{b{Df{c}}}}}{{f{c}}}C`}{{{Df{c}}}{{f{c}}}{}}{{{Ff{{Aj{c}}}}}{{f{c}}}{}}{{{Fh{{Aj{c}}e}}}{{f{ce}}}{}n}{{{h{Dl}}}{{f{d}}}}{Dd{{f{d}}}}{Fj{{A`{FlFn}}}}{cc{}}{{{h{Fj}}}{{A`{FlFn}}}}{Bl{{A`{{f{d}}An}}}}{e{{f{c}}}{}{{Eb{}{{E`{c}}}}}}{g{{A`{ie}}}{}{}{{Eb{}{{E`{{A`{ce}}}}}}}{{G`{c}}}}{{}{{A`{ce}}}{}{}}{{jj}{{f{c}}}{}}{{jjc}{{f{ec}}}n{}}{{{Gb{c}}}{{A`{eg}}}{}{}{{Gd{c}}}}{{{A`{Gfc}}}{{A`{eg}}}{}{}{{Gd{c}}}}{{{h{{f{ce}}}}{h{bg}}}lGhnGj}{{{h{{A`{ce}}}}{h{bg}}}lGhGhGj}{{{h{{f{ce}}}}g}h{}n{{Gl{{Aj{c}}}}}}{{{h{b{f{ce}}}}g}{{h{b}}}{}n{{Gl{{Aj{c}}}}}}{{{h{b{f{ce}}}}jc}l{}n}{{{A`{ce}}g}{{A`{ce}}}{}{}{{Ad{{h{c}}}}}}{{{A`{ce}}g}{{A`{ce}}}{}{}{{Ad{{h{e}}}}}}{{}c{}}00000{{{f{ce}}}{{Fh{{Aj{c}}e}}}{}n}{{{A`{ce}}}e{{H`{Gn}}}{}}{{{f{{Df{c}}e}}}{{f{ce}}}{}n}{{{h{b{f{ce}}}}}{}{}n}{{{h{{f{ce}}}}}{}{}n}{{{f{ce}}}{}{}n}{{{h{{A`{ce}}}}}{{Hb{c}}}{}{}}{{{h{b{A`{ce}}}}}{{Hd{c}}}{}{}}{{{A`{ce}}}{{Hf{c}}}{}{}}{{{A`{ce}}}c{}{{H`{Gn}}}}{{{f{ce}}}{{Hh{jj}}}{}n}{{{f{ce}}}{{Hh{jje}}}{}n}{{{h{bBn}}{h{{Aj{d}}}}}{{A`{{f{d}}c}}}{}}{{{h{bB`}}{h{{Aj{d}}}}}{{Hl{{Fh{Hj}}}}}}{{{h{{f{ce}}}}}Cj{}n}{{{h{{A`{ce}}}}}Cj{}{}}{{{A`{ce}}g}Cj{}{}{{Ad{e}{{Ab{Cj}}}}}}1{{{A`{ce}}g}Cj{}{}{{Ad{c}{{Ab{Cj}}}}}}{{{h{{f{dc}}}}}Cjn}<;{{{f{ce}}}{{h{b{Aj{c}}}}}{}n}{{{h{{f{ce}}}}}j{}n}{{{A`{ce}}i}{{A`{ge}}}{}{}{}{{Ad{c}{{Ab{g}}}}}}{{{A`{ce}}i}{{A`{cg}}}{}{}{}{{Ad{e}{{Ab{g}}}}}}{{{A`{ce}}gi}g{}{}{}{{Ad{c}{{Ab{g}}}}}}{{{A`{ce}}ik}g{}{}{}{{Ad{e}{{Ab{g}}}}}{{Ad{c}{{Ab{g}}}}}}``{{{h{{f{eg}}}}{h{{h{b{Aj{c}}}}}}}Cj{}{{Ch{c}}}n}{{{h{{f{eg}}}}{h{{Df{c}}}}}Cj{}{{Ch{c}}}n}{{{h{{f{eg}}}}{h{{f{ci}}}}}Cj{}{{Ch{c}}}nn}{{{h{{f{eg}}}}{h{{Aj{c}}}}}Cj{}{{Ch{c}}}n}{{{h{{f{eg}}}}{h{{h{{Df{c}}}}}}}Cj{}{{Ch{c}}}n}{{{h{{f{eg}}}}{h{{h{{Aj{c}}}}}}}Cj{}{{Ch{c}}}n}{DbAn}{{}{{f{c}}}{}}{c{{f{ec}}}n{}}{{Dbc}An{{H`{Fd}}}}{{{A`{ce}}}{{Dj{c}}}{}{}}{{{A`{ce}}{A`{cg}}}{{A`{cg}}}{}{}{}}{{{A`{ce}}i}{{A`{cg}}}{}{}{}{{Ad{e}{{Ab{{A`{cg}}}}}}}}{{{h{{f{ce}}}}{h{{f{cg}}}}}{{Dj{Cb}}}Hnnn}{{{h{{f{d}}}}{h{Dd}}}{{Dj{Cb}}}}{{{h{{f{d}}}}{h{Dh}}}{{Dj{Cb}}}}{{{h{{A`{ce}}}}{h{{A`{ce}}}}}{{Dj{Cb}}}HnHn}{{{h{b{f{ce}}}}}{{Dj{c}}}{}n}{{{h{b{f{ce}}}}g}{{Dj{c}}}{}n{{Ad{{h{bc}}}{{Ab{Cj}}}}}}{g{{A`{ie}}}{}{}{{I`{}{{E`{{A`{ce}}}}}}}{{Ib{c}}}}{{{h{b{f{ce}}}}c}l{}n}{{{h{b{f{ce}}}}c}{{A`{lc}}}{}n}{{{h{b{f{d}}}}c}lId}{{{h{b{f{d}}}}dj}l}{{{h{b{f{d}}}}{h{{Aj{d}}}}}l}{{{h{{f{d}}}}}j}{{{h{b{f{ce}}}}j}c{}n}{{{A`{ce}}}IfIhDn}{{{h{b{f{ce}}}}j}l{}n}0{{{h{b{f{ce}}}}jc}lC`n}{{{h{b{f{ce}}}}jg}l{}n{{Cl{}{{Ab{c}}}}}}``{{{h{b{f{ce}}}}g}l{}n{{Cl{{h{c}}}{{Ab{Cj}}}}}}{{{h{b{f{ce}}}}g}l{}n{{Cl{{h{bc}}}{{Ab{Cj}}}}}}44{{{h{b{f{ce}}}}}l{}n}{{{h{b{f{ce}}}}}{{h{b{Aj{{Ij{c}}}}}}}{}n}{{{h{b{f{ce}}}}gi}{{Il{e}}}{}n{{D`{j}}}{{Eb{}{{E`{c}}}}}}{{{h{b{f{ce}}}}}{{Hh{{h{b{Aj{c}}}}{h{b{Aj{{Ij{c}}}}}}}}}{}n}{{{h{b{f{ce}}}}j}{{f{ce}}}{}{C`n}}{g{{A`{ie}}}{}{}{{I`{}{{E`{{A`{ce}}}}}}}{{In{c}}}}<{hc{}}000{hFd}{{{A`{{Dj{c}}e}}}{{Dj{{A`{ce}}}}}{}{}}={c{{A`{e}}}{}{}}00000{{}{{A`{c}}}{}}00000{{{h{b{f{ce}}}}j}{{A`{lJ`}}}{}n}0{j{{A`{{f{c}}J`}}}{}}{{jc}{{A`{{f{ec}}J`}}}n{}}{hJb}00000{{{A`{ce}}}c{}Dn}{{{A`{ce}}}eDn{}}{{{A`{ce}}}e{}{}}{{{A`{ce}}c}c{}{}}{{{A`{ce}}}cBd{}}{{{A`{ce}}g}c{}{}{{Ad{e}{{Ab{c}}}}}}{{{A`{ce}}}c{}{}}{j{{f{c}}}{}}{{jc}{{f{ec}}}n{}}{{{h{b{f{dc}}}}{h{{Aj{d}}}}}{{A`{jEf}}}n}{{{h{b{f{dc}}}}{h{{Aj{d}}}}}{{A`{lEf}}}n}{{{h{b{f{dc}}}}{h{{Aj{Jd}}}}}{{A`{jEf}}}n}```{h{{h{c}}}{}}{{{h{b}}}{{h{bc}}}{}}{{{h{Jf}}}Jf}{{h{h{bc}}}l{}}{hl}{{{h{Jf}}{h{bc}}}lJh}{{{h{Jf}}}j}{{{h{Jf}}{h{Jf}}}Cj}{{{h{Jf}}{h{bEh}}}Ej}{cc{}}{{}c{}}{{{h{b{Dj{Jf}}}}AlJj{h{bc}}Jl}{{A`{lJn}}}Id}{hc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hJb}","D":"ADl","p":[[0,"mut"],[1,"u8"],[5,"Vec",0,321],[1,"reference"],[1,"usize"],[1,"unit"],[10,"Allocator",322],[6,"Result",0,323],[17,"Output"],[10,"FnOnce",324],[10,"Deref",325],[10,"DerefMut",325],[1,"slice"],[1,"u32"],[5,"Status",0,326],[10,"AsyncTransport",0],[10,"Message",327],[10,"Default",328],[6,"ControlFlow",329],[5,"UninitSlice",330],[5,"RequestWrapper",0,331],[5,"ResponseWrapper",0,331],[10,"Transport",0],[10,"Clone",332],[6,"Ordering",333],[10,"Ord",333],[10,"Copy",334],[10,"PartialEq",333],[1,"bool"],[10,"FnMut",324],[5,"Drain",335],[10,"RangeBounds",336],[6,"StatusCode",0,326],[5,"BytesMut",337],[1,"array"],[5,"Bytes",338],[6,"Option",339],[1,"str"],[10,"Debug",340],[17,"Item"],[10,"IntoIterator",341],[5,"ExtractIf",342],[5,"Error",343],[5,"Formatter",340],[8,"Result",340],[5,"Error",340],[5,"BinaryHeap",344],[5,"VecDeque",345],[5,"CString",346],[5,"String",347],[6,"Cow",348],[5,"Box",349],[5,"StreamResult",350],[6,"MZStatus",350],[6,"MZError",350],[10,"FromIterator",341],[5,"Yeet",351],[10,"From",352],[6,"Infallible",352],[10,"Hash",353],[10,"Hasher",353],[10,"SliceIndex",354],[1,"never"],[10,"Into",352],[5,"Iter",323],[5,"IterMut",323],[5,"IntoIter",323],[1,"tuple"],[10,"Future",355],[5,"Pin",356],[10,"PartialOrd",333],[10,"Iterator",357],[10,"Product",358],[10,"Buf",359],[5,"ExitCode",360],[10,"Termination",360],[20,"MaybeUninit",361],[5,"Splice",362],[10,"Sum",358],[5,"TryReserveError",363],[5,"TypeId",364],[5,"IoSlice",365],[6,"Response",302,366],[10,"BufMut",367],[6,"WireType",368],[5,"DecodeContext",368],[5,"DecodeError",369]],"r":[[6,370],[14,370],[19,331],[21,331],[22,323],[23,326],[24,326],[30,321],[140,371],[249,331],[304,366]],"b":[[38,"impl-AsMut%3CVec%3CT,+A%3E%3E-for-Vec%3CT,+A%3E"],[39,"impl-AsMut%3C%5BT%5D%3E-for-Vec%3CT,+A%3E"],[44,"impl-AsRef%3C%5BT%5D%3E-for-Vec%3CT,+A%3E"],[45,"impl-AsRef%3CVec%3CT,+A%3E%3E-for-Vec%3CT,+A%3E"],[69,"impl-Message-for-Vec%3Cu8%3E"],[70,"impl-Vec%3CT,+A%3E"],[86,"impl-Result%3C%26mut+T,+E%3E"],[87,"impl-Result%3C%26T,+E%3E"],[91,"impl-Result%3C%26mut+T,+E%3E"],[92,"impl-Result%3C%26T,+E%3E"],[110,"impl-PartialEq%3CVec%3CU,+A2%3E%3E-for-Vec%3CT,+A1%3E"],[111,"impl-PartialEq%3CBytesMut%3E-for-Vec%3Cu8%3E"],[112,"impl-PartialEq%3C%26%5BU;+N%5D%3E-for-Vec%3CT,+A%3E"],[113,"impl-PartialEq%3C%5BU;+N%5D%3E-for-Vec%3CT,+A%3E"],[114,"impl-PartialEq%3C%5BU%5D%3E-for-Vec%3CT,+A%3E"],[115,"impl-PartialEq%3CBytes%3E-for-Vec%3Cu8%3E"],[116,"impl-PartialEq%3C%26mut+%5BU%5D%3E-for-Vec%3CT,+A%3E"],[117,"impl-PartialEq%3C%26%5BU%5D%3E-for-Vec%3CT,+A%3E"],[122,"impl-Extend%3C%26T%3E-for-Vec%3CT,+A%3E"],[123,"impl-Extend%3CT%3E-for-Vec%3CT,+A%3E"],[126,"impl-Extend%3CT%3E-for-Vec%3CT,+A%3E"],[127,"impl-Extend%3C%26T%3E-for-Vec%3CT,+A%3E"],[128,"impl-Extend%3CT%3E-for-Vec%3CT,+A%3E"],[129,"impl-Extend%3C%26T%3E-for-Vec%3CT,+A%3E"],[135,"impl-Display-for-Status"],[136,"impl-Debug-for-Status"],[147,"impl-From%3CBytes%3E-for-Vec%3Cu8%3E"],[149,"impl-From%3CBinaryHeap%3CT,+A%3E%3E-for-Vec%3CT,+A%3E"],[150,"impl-From%3CVecDeque%3CT,+A%3E%3E-for-Vec%3CT,+A%3E"],[151,"impl-From%3CCString%3E-for-Vec%3Cu8%3E"],[152,"impl-From%3CString%3E-for-Vec%3Cu8%3E"],[153,"impl-From%3C%26%5BT%5D%3E-for-Vec%3CT%3E"],[154,"impl-From%3C%26mut+%5BT%5D%3E-for-Vec%3CT%3E"],[155,"impl-From%3C%26%5BT;+N%5D%3E-for-Vec%3CT%3E"],[156,"impl-From%3C%26mut+%5BT;+N%5D%3E-for-Vec%3CT%3E"],[157,"impl-From%3C%5BT;+N%5D%3E-for-Vec%3CT%3E"],[158,"impl-From%3CCow%3C\'a,+%5BT%5D%3E%3E-for-Vec%3CT%3E"],[159,"impl-From%3CBox%3C%5BT%5D,+A%3E%3E-for-Vec%3CT,+A%3E"],[160,"impl-From%3C%26str%3E-for-Vec%3Cu8%3E"],[161,"impl-From%3CBytesMut%3E-for-Vec%3Cu8%3E"],[162,"impl-From%3CStreamResult%3E-for-Result%3CMZStatus,+MZError%3E"],[164,"impl-From%3C%26StreamResult%3E-for-Result%3CMZStatus,+MZError%3E"],[165,"impl-From%3CResponseWrapper%3E-for-Result%3CVec%3Cu8%3E,+Status%3E"],[171,"impl-FromResidual%3CYeet%3CE%3E%3E-for-Result%3CT,+F%3E"],[172,"impl-FromResidual%3CResult%3CInfallible,+E%3E%3E-for-Result%3CT,+F%3E"],[189,"impl-IntoIterator-for-%26mut+Vec%3CT,+A%3E"],[190,"impl-IntoIterator-for-%26Vec%3CT,+A%3E"],[191,"impl-IntoIterator-for-Vec%3CT,+A%3E"],[192,"impl-IntoIterator-for-%26Result%3CT,+E%3E"],[193,"impl-IntoIterator-for-%26mut+Result%3CT,+E%3E"],[194,"impl-IntoIterator-for-Result%3CT,+E%3E"],[216,"impl-PartialEq%3C%26mut+%5BU%5D%3E-for-Vec%3CT,+A%3E"],[217,"impl-PartialEq%3C%5BU;+N%5D%3E-for-Vec%3CT,+A%3E"],[218,"impl-PartialEq%3CVec%3CU,+A2%3E%3E-for-Vec%3CT,+A1%3E"],[219,"impl-PartialEq%3C%5BU%5D%3E-for-Vec%3CT,+A%3E"],[220,"impl-PartialEq%3C%26%5BU;+N%5D%3E-for-Vec%3CT,+A%3E"],[221,"impl-PartialEq%3C%26%5BU%5D%3E-for-Vec%3CT,+A%3E"],[229,"impl-PartialOrd%3CVec%3CT,+A2%3E%3E-for-Vec%3CT,+A1%3E"],[230,"impl-PartialOrd%3CBytesMut%3E-for-Vec%3Cu8%3E"],[231,"impl-PartialOrd%3CBytes%3E-for-Vec%3Cu8%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJsAKgAAAAAABwAAAA8AAAAYAAAAIAAAACcAAQAtAAEAMwAOAEMAAwBJAAMATgAIAFkAAgBhAAEAZAABAGcAEAB7AAEAfwADAIUABwCQAAAAkgAAAJQAAACiAAEApQACAKkAAACsAAUAvgABAMEAAQDHAAAAzgAAANkABgDiAAAA5gADAO8AAwD0AAAA+QAAAAYBBAANAQsAHQEFACwBAgAxAQUAOQEBAD4BAwA="}],["micro_rpc_build",{"t":"FFFGPPFNNNNNNNNNNONNNNNNNNNHNNNOONNNNNNNNNNHOONNNNNOOONOONNNNNNNNNNNNNNNNNN","n":["CompileOptions","ExternPath","Method","ReceiverType","RefMutSelf","RefSelf","Service","borrow","","","","","borrow_mut","","","","","bytes","clone","","","clone_into","","","clone_to_uninit","","","compile","default","","","enable_type_names","extern_paths","fmt","","","from","","","","","","","generate_file","id","input_type","into","","","","","methods","name","","new","output_type","receiver_type","to_owned","","","try_from","","","","","try_into","","","","","type_id","","","",""],"q":[[0,"micro_rpc_build"],[75,"std::path"],[76,"core::convert"],[77,"core::fmt"],[78,"prost_build::ast"],[79,"alloc::string"],[80,"core::result"],[81,"core::any"],[82,"micro_rpc_build::prost"]],"i":"````h0`f1jAhAj342102342342342`342224103421100`0034210110302342342103421034210","f":"```````{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000`{{{b{f}}}f}{{{b{h}}}h}{{{b{j}}}j}{{b{b{dc}}}l{}}00{bl}00{{{b{{n{c}}}}{b{{n{e}}}}j}l{{Ab{A`}}}{{Ab{A`}}}}{{}f}{{}h}{{}j}``{{{b{h}}{b{dAd}}}Af}{{{b{Ah}}{b{dAd}}}Af}{{{b{Aj}}{b{dAd}}}Af}{cc{}}000{{{b{Al}}}Ah}{{{b{An}}}Aj}2{{{b{Ah}}h{b{dB`}}}l}``{{}c{}}0000```{{{b{Bb}}{b{Bb}}}f}``{bc{}}00{c{{Bd{e}}}{}{}}0000{{}{{Bd{c}}}{}}0000{bBf}0000","D":"Bd","p":[[1,"reference"],[0,"mut"],[5,"ExternPath",0],[6,"ReceiverType",0],[5,"CompileOptions",0],[1,"unit"],[1,"slice"],[5,"Path",75],[10,"AsRef",76],[5,"Formatter",77],[8,"Result",77],[5,"Service",0],[5,"Method",0],[5,"Service",78],[5,"Method",78],[5,"String",79],[1,"str"],[6,"Result",80],[5,"TypeId",81]],"r":[[27,82]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADkACQAAAAQACAAJABMACAAdAAIAIgACACkAAQAsAAIANAAEADoAEQA="}],["oak_attestation",{"t":"KEKMCMFFNONNNNNOHNNNNNNNHNNNNNNN","n":["ApplicationKeysAttester","LayerData","MeasureDigest","add_application_keys","dice","measure_digest","DiceAttester","LayerData","add_application_keys","additional_claims","borrow","","borrow_mut","","deserialize","encoded_event","evidence_and_event_log_to_proto","extend","from","","into","","quote","serialize","stage0_dice_data_and_event_log_to_proto","try_from","","","try_into","","type_id",""],"q":[[0,"oak_attestation"],[6,"oak_attestation::dice"],[32,"p256::ecdsa"],[33,"core::option"],[34,"oak_proto_rust::oak::attestation::v1"],[35,"anyhow"],[36,"oak_proto_rust::oak"],[37,"oak_dice::evidence"],[38,"alloc::vec"],[39,"core::result"],[40,"core::any"]],"i":"```b`Ad``Ahd010110`1010111`0110101","f":"```{{bd{j{{h{f}}}}{j{l}}{n{{j{{h{f}}}}}}{n{{j{l}}}}}{{Ab{A`}}}}`{{{j{Ad}}}Af}``{{Ahd{j{{h{f}}}}{j{l}}{n{{j{{h{f}}}}}}{n{{j{l}}}}}{{Ab{A`}}}}`{j{{j{c}}}{}}0{{{j{Aj}}}{{j{Ajc}}}{}}0{{{j{{h{f}}}}}{{Ab{Ah}}}}`{{Al{n{{j{{h{f}}}}}}}{{Ab{A`}}}}{{{j{AjAh}}{j{{h{f}}}}}{{Ab{An}}}}{cc{}}0{{}c{}}0{{{j{Ah}}}{{Ab{A`}}}}{Ah{{B`{f}}}}{{BbBd}{{Ab{Bf}}}}{c{{Bh{e}}}{}{}}0{Bf{{Ab{Ah}}}}{{}{{Bh{c}}}{}}0{jBj}0","D":"Af","p":[[10,"ApplicationKeysAttester",0],[5,"LayerData",6],[1,"u8"],[1,"slice"],[1,"reference"],[8,"VerifyingKey",32],[6,"Option",33],[5,"Evidence",34],[8,"Result",35],[10,"MeasureDigest",0],[5,"RawDigest",36],[5,"DiceAttester",6],[0,"mut"],[5,"Evidence",37],[1,"unit"],[5,"Vec",38],[5,"Stage0DiceData",37],[5,"EventLog",34],[5,"DiceData",34],[6,"Result",39],[5,"TypeId",40]],"r":[[1,6]],"b":[],"c":"OjAAAAEAAAAAAAEAEAAAAAEABAA=","e":"OzAAAAEAABUABgAAAAAAAgABAAUAAQALAAQAEQABABcACQA="}],["oak_attestation_explain",{"t":"KKMM","n":["HumanReadableExplanation","HumanReadableTitle","description","title"],"q":[[0,"oak_attestation_explain"],[4,"alloc::string"],[5,"anyhow"]],"i":"``bl","f":"``{{{d{b}}}{{j{fh}}}}{{{d{l}}}{{j{fh}}}}","D":"f","p":[[10,"HumanReadableExplanation",0],[1,"reference"],[5,"String",4],[5,"Error",5],[8,"Result",5],[10,"HumanReadableTitle",0]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA="}],["oak_attestation_explain_wasm",{"t":"H","n":["explain"],"q":[[0,"oak_attestation_explain_wasm"],[1,"alloc::string"]],"i":"`","f":"{{{f{{d{b}}}}}h}","D":"`","p":[[1,"u8"],[1,"slice"],[1,"reference"],[5,"String",1]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA="}],["oak_attestation_types",{"t":"CCCKFNNMNNNNMNNNNKFNNMNNNNNNNKMHMH","n":["attester","endorser","util","Attester","SimpleAttester","borrow","borrow_mut","extend","","from","into","new","quote","","try_from","try_into","type_id","Endorser","SimpleEndorser","borrow","borrow_mut","endorse","","from","into","new","try_from","try_into","type_id","Serializable","deserialize","encode_length_delimited_proto","serialize","try_decode_length_delimited_proto"],"q":[[0,"oak_attestation_types"],[3,"oak_attestation_types::attester"],[17,"oak_attestation_types::endorser"],[29,"oak_attestation_types::util"],[34,"anyhow"],[35,"oak_proto_rust::oak::attestation::v1"],[36,"core::result"],[37,"core::any"],[38,"core::option"],[39,"alloc::vec"],[40,"prost::message"],[41,"core::default"]],"i":"`````A`0f111101111``An0Ah1111111`B``0`","f":"`````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{df}}{b{{j{h}}}}}{{n{l}}}}{{{b{dA`}}{b{{j{h}}}}}{{n{l}}}}{cc{}}{{}c{}}{AbA`}{{{b{f}}}{{n{Ab}}}}{{{b{A`}}}{{n{Ab}}}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}``;:{{{b{Ah}}{Aj{{b{Ab}}}}}{{n{Al}}}}{{{b{An}}{Aj{{b{Ab}}}}}{{n{Al}}}}98{AlAn}543`{{{b{{j{h}}}}}{{n{B`}}}}{{{b{c}}}{{Bb{h}}}Bd}{B`{{Bb{h}}}}{{{b{{j{h}}}}}{{n{c}}}{BdBf}}","D":"Al","p":[[1,"reference"],[0,"mut"],[10,"Attester",3],[1,"u8"],[1,"slice"],[1,"unit"],[8,"Result",34],[5,"SimpleAttester",3],[5,"Evidence",35],[6,"Result",36],[5,"TypeId",37],[10,"Endorser",17],[6,"Option",38],[5,"Endorsements",35],[5,"SimpleEndorser",17],[10,"Serializable",29],[5,"Vec",39],[10,"Message",40],[10,"Default",41]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABQACgAAAAMABgABAAkAAAAMAAAADgADABQAAQAXAAAAGgADAB8AAAAhAAAA"}],["oak_attestation_verification",{"t":"KHCCHCHHMCHHHCCCCCCCFNNNNNNNNNNFNNNNNNNNNNFNNNNNNNNNNFNNNNNNNNNNFNNNNNNNNNNFNNNNNNNNNNFNNNNNNNNNNFNNNNNHNNNHNHHHN","n":["UnixTimestampMillis","convert_pem_to_raw","expect","extract","hex_to_raw_digest","policy","raw_to_hex_digest","reference_values_from_evidence","unix_timestamp_millis","verifier","verify_endorsement","get_expected_values","extract_evidence","application","binary","container","firmware","kernel","platform","system","ApplicationPolicy","borrow","borrow_mut","from","into","new","try_from","try_into","type_id","verify","vzip","BinaryPolicy","borrow","borrow_mut","from","into","new","try_from","try_into","type_id","verify","vzip","ContainerPolicy","borrow","borrow_mut","from","into","new","try_from","try_into","type_id","verify","vzip","FirmwarePolicy","borrow","borrow_mut","from","into","new","try_from","try_into","type_id","verify","vzip","KernelPolicy","borrow","borrow_mut","from","into","new","try_from","try_into","type_id","verify","vzip","AmdSevSnpPolicy","borrow","borrow_mut","from","into","new","try_from","try_into","type_id","verify","vzip","SystemPolicy","borrow","borrow_mut","from","into","new","try_from","try_into","type_id","verify","vzip","AmdSevSnpDiceAttestationVerifier","borrow","borrow_mut","from","into","new","to_attestation_results","try_from","try_into","type_id","verify","","verify_dice_chain","verify_dice_chain_and_extract_evidence","verify_with_expected_values","vzip"],"q":[[0,"oak_attestation_verification"],[11,"oak_attestation_verification::expect"],[12,"oak_attestation_verification::extract"],[13,"oak_attestation_verification::policy"],[20,"oak_attestation_verification::policy::application"],[31,"oak_attestation_verification::policy::binary"],[42,"oak_attestation_verification::policy::container"],[53,"oak_attestation_verification::policy::firmware"],[64,"oak_attestation_verification::policy::kernel"],[75,"oak_attestation_verification::policy::platform"],[86,"oak_attestation_verification::policy::system"],[97,"oak_attestation_verification::verifier"],[113,"alloc::vec"],[114,"anyhow"],[115,"oak_proto_rust::oak"],[116,"oak_proto_rust::oak::attestation::v1"],[117,"oak_attestation_verification::util"],[118,"core::result"],[119,"core::any"],[120,"oak_sev_snp_attestation_report"],[121,"oak_attestation_verification_types::policy"],[122,"alloc::boxed"],[123,"oak_attestation_verification_types::util"],[124,"p256::ecdsa"]],"i":"````````Ad````````````Bh000000000`Cf000000000`Cj000000000`Cn000000000`Db000000000`Df000000000`Dl000000000`Ed0000`000`0```0","f":"`{{{d{b}}}{{j{{h{f}}}}}}``{{{d{l}}}{{j{n}}}}`{{{d{n}}}l}{A`Ab}{{{d{Ad}}}Af}`{{Af{d{Ah}}{d{Aj}}}{{j{Al}}}}{{Af{d{An}}{d{Ab}}}{{j{B`}}}}{{{d{Bb}}}{{j{A`}}}}````````{d{{d{c}}}{}}{{{d{Bd}}}{{d{Bdc}}}{}}{cc{}}{{}c{}}{{{d{Bf}}}Bh}{c{{Bj{e}}}{}{}}{{}{{Bj{c}}}{}}{dBl}{{{d{Bh}}{d{{Bn{f}}}}{d{C`}}Af}{{j{Cb}}}}5`8765{{{d{Cd}}}Cf}432{{{d{Cf}}{d{{Bn{f}}}}{d{C`}}Af}{{j{Cb}}}}7`:987{{{d{Ch}}}Cj}654{{{d{Cj}}{d{{Bn{f}}}}{d{C`}}Af}{{j{Cb}}}}9`<;:9{{{d{Cl}}}Cn}876{{{d{Cn}}{d{{Bn{f}}}}{d{C`}}Af}{{j{Cb}}}};`>=<;{{{d{D`}}}Db}:98{{{d{Db}}{d{{Bn{f}}}}{d{C`}}Af}{{j{Cb}}}}=`{d{{d{c}}}{}}{{{d{Bd}}}{{d{Bdc}}}{}}{cc{}}{{}c{}}{{{d{Dd}}}Df}{c{{Bj{e}}}{}{}}{{}{{Bj{c}}}{}}{dBl}{{{d{Df}}{d{Dh}}{d{C`}}Af}{{j{Cb}}}}5`8765{{{d{Dj}}}Dl}432{{{d{Dl}}{d{{Bn{f}}}}{d{C`}}Af}{{j{Cb}}}}7`:987{{Df{E`{Dn}}{h{{E`{Dn}}}}{E`{Eb}}}Ed}{{{d{{j{A`}}}}}Ef}765{{Af{d{Bb}}{d{An}}{d{Ab}}}{{j{A`}}}}{{{d{Ed}}{d{Bb}}{d{An}}}{{j{Ef}}}}{{{d{Bb}}}{{j{Eh}}}}{{{d{Bb}}}{{j{A`}}}}{{Af{d{Bb}}{d{An}}{d{B`}}}{{j{A`}}}}>","D":"Cf","p":[[1,"str"],[1,"reference"],[1,"u8"],[5,"Vec",113],[8,"Result",114],[5,"HexDigest",115],[5,"RawDigest",115],[5,"ExtractedEvidence",116],[5,"ReferenceValues",116],[10,"UnixTimestampMillis",0,117],[1,"i64"],[5,"SignedEndorsement",116],[5,"EndorsementReferenceValue",116],[5,"EndorsementDetails",116],[5,"Endorsements",116],[5,"ExpectedValues",116],[5,"Evidence",116],[0,"mut"],[5,"ApplicationLayerReferenceValues",116],[5,"ApplicationPolicy",20],[6,"Result",118],[5,"TypeId",119],[1,"slice"],[5,"Variant",115],[5,"EventAttestationResults",116],[5,"EventReferenceValues",116],[5,"BinaryPolicy",31],[5,"ContainerLayerReferenceValues",116],[5,"ContainerPolicy",42],[5,"BinaryReferenceValue",116],[5,"FirmwarePolicy",53],[5,"KernelLayerReferenceValues",116],[5,"KernelPolicy",64],[5,"AmdSevReferenceValues",116],[5,"AmdSevSnpPolicy",75],[5,"AttestationReport",120],[5,"SystemLayerReferenceValues",116],[5,"SystemPolicy",86],[25,"EventPolicy",121],[5,"Box",122],[10,"Clock",123],[5,"AmdSevSnpDiceAttestationVerifier",97],[5,"AttestationResults",116],[8,"VerifyingKey",124]],"r":[[0,117],[1,117],[4,117],[6,117],[7,117]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFYAEAAAAAAAAwABAAYAAAAIAAEADAAAAA4ACQAaAAgAJQAIADAACAA7AAgARgAIAFEACABcAAgAZwAEAG0AAABxAAAA"}],["oak_attestation_verification_types",{"t":"CCCZKMKMKM","n":["policy","util","verifier","EventPolicy","Policy","verify","Clock","get_milliseconds_since_epoch","AttestationVerifier","verify"],"q":[[0,"oak_attestation_verification_types"],[3,"oak_attestation_verification_types::policy"],[6,"oak_attestation_verification_types::util"],[8,"oak_attestation_verification_types::verifier"],[10,"oak_proto_rust::oak::attestation::v1"],[11,"anyhow"],[12,"core::marker"]],"i":"`````b`n`A`","f":"`````{{{d{b}}{d{c}}{d{e}}f}{{j{h}}}ll}`{{{d{n}}}f}`{{{d{A`}}{d{Ab}}{d{Ad}}}{{j{Af}}}}","D":"j","p":[[10,"Policy",3],[1,"reference"],[1,"i64"],[5,"EventAttestationResults",10],[8,"Result",11],[10,"Sized",12],[10,"Clock",6],[10,"AttestationVerifier",8],[5,"Evidence",10],[5,"Endorsements",10],[5,"AttestationResults",10]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAUAAwAAAAMABgAAAAoAAAA="}],["oak_channel",{"t":"KKKCMCMCMHHSSSISSIKFFOONNNNNNNNNNMNNMNNNNNNNNNNOOMNNNNNNNNNNFNNNNNNNNNN","n":["Channel","Read","Write","basic_framed","flush","message","read_exact","server","write_all","receive_raw","send_raw","BODY_OFFSET","INVOCATION_ID_OFFSET","INVOCATION_ID_SIZE","InvocationId","LENGTH_OFFSET","LENGTH_SIZE","Length","Message","RequestMessage","ResponseMessage","body","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","decode","","","encode","","","eq","","fmt","","from","","into","","invocation_id","","len","","","to_owned","","try_from","","try_into","","type_id","","ServerChannelHandle","borrow","borrow_mut","from","into","new","read_request","try_from","try_into","type_id","write_response"],"q":[[0,"oak_channel"],[9,"oak_channel::basic_framed"],[11,"oak_channel::message"],[60,"oak_channel::server"],[71,"anyhow"],[72,"alloc::vec"],[73,"core::marker"],[74,"core::fmt"],[75,"core::result"],[76,"core::any"],[77,"alloc::boxed"],[78,"oak_core::timer"]],"i":"````d`l`1````````````AhAj1010101010Al21021212121212102121212121`Bl000000000","f":"````{{{f{bd}}}{{j{h}}}}`{{{f{bl}}{f{b{A`{n}}}}}{{j{h}}}}`{{{f{bd}}{f{{A`{n}}}}}{{j{h}}}}{{{f{bc}}}{{j{{Ab{n}}}}}{AdAf}}{{{f{bc}}{f{{A`{n}}}}}{{j{h}}}{AdAf}}````````````{f{{f{c}}}{}}0{{{f{b}}}{{f{bc}}}{}}0{{{f{Ah}}}Ah}{{{f{Aj}}}Aj}{{f{f{bc}}}h{}}0{fh}0{{{f{{A`{n}}}}}Al}{{{f{{A`{n}}}}}Ah}{{{f{{A`{n}}}}}Aj}{Al{{Ab{n}}}}{Ah{{Ab{n}}}}{Aj{{Ab{n}}}}{{{f{Ah}}{f{Ah}}}An}{{{f{Aj}}{f{Aj}}}An}{{{f{Ah}}{f{bB`}}}Bb}{{{f{Aj}}{f{bB`}}}Bb}{cc{}}0{{}c{}}0``{{{f{Al}}}Bd}{{{f{Ah}}}Bd}{{{f{Aj}}}Bd}{fc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{fBh}0`{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}:9{{{Bj{Ad}}}Bl}{{{f{bBl}}}{{j{{C`{AhBn}}}}}}654{{{f{bBl}}Aj}{{j{h}}}}","D":"Ah","p":[[0,"mut"],[10,"Write",0],[1,"reference"],[1,"unit"],[8,"Result",71],[10,"Read",0],[1,"u8"],[1,"slice"],[5,"Vec",72],[10,"Channel",0],[10,"Sized",73],[5,"RequestMessage",11],[5,"ResponseMessage",11],[10,"Message",11],[1,"bool"],[5,"Formatter",74],[8,"Result",74],[1,"usize"],[6,"Result",75],[5,"TypeId",76],[5,"Box",77],[5,"ServerChannelHandle",60],[5,"Timer",78],[1,"tuple"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADsABgAAAAEABQAAAAcADAAWABUAMAAPAEIABQA="}],["oak_client",{"t":"CCCFNNNNNNNNNNKKMMKFNNHNNNNNMNN","n":["client","transport","verifier","OakClient","borrow","borrow_mut","create","from","into","invoke","try_from","try_into","type_id","vzip","EvidenceProvider","Transport","get_endorsed_evidence","invoke","AttestationVerifier","InsecureAttestationVerifier","borrow","borrow_mut","extract_encryption_public_key","from","into","try_from","try_into","type_id","verify","","vzip"],"q":[[0,"oak_client"],[3,"oak_client::client"],[14,"oak_client::transport"],[18,"oak_client::verifier"],[31,"anyhow"],[32,"alloc::vec"],[33,"core::result"],[34,"core::any"],[35,"core::future::future"],[36,"alloc::boxed"],[37,"core::pin"],[38,"oak_proto_rust::oak::crypto::v1"],[39,"oak_proto_rust::oak::attestation::v1"]],"i":"````h000000000``nl``Bh0`00000f11","f":"````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{c{b{f}}}{{j{{h{c}}}}}{ln}}{cc{}}{{}c{}}{{{b{d{h{c}}}}{b{{Ab{A`}}}}}{{j{{Ad{A`}}}}}{ln}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAh}4``{{{b{dn}}}{{An{{Al{Aj}}}}}}{{{b{dl}}{b{B`}}}{{An{{Al{Aj}}}}}}``:9{{{b{Bb}}}{{j{{Ad{A`}}}}}}87543{{{b{f}}{b{Bb}}{b{Bd}}}{{j{Bf}}}}{{{b{Bh}}{b{Bb}}{b{Bd}}}{{j{Bf}}}}9","D":"l","p":[[1,"reference"],[0,"mut"],[10,"AttestationVerifier",18],[5,"OakClient",3],[8,"Result",31],[10,"Transport",14],[10,"EvidenceProvider",14],[1,"u8"],[1,"slice"],[5,"Vec",32],[6,"Result",33],[5,"TypeId",34],[10,"Future",35],[5,"Box",36],[5,"Pin",37],[5,"EncryptedRequest",38],[5,"Evidence",39],[5,"Endorsements",39],[5,"ExtractedEvidence",39],[5,"InsecureAttestationVerifier",18]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABkABQAAAAMABQACAAoACQAVAAIAGgAFAA=="}],["oak_client_tonic",{"t":"CFNNNNNNNNNNNN","n":["transport","GrpcStreamingTransport","borrow","borrow_mut","from","get_endorsed_evidence","into","into_request","invoke","new","try_from","try_into","type_id","vzip"],"q":[[0,"oak_client_tonic"],[1,"oak_client_tonic::transport"],[14,"core::future::future"],[15,"alloc::boxed"],[16,"core::pin"],[17,"tonic::request"],[18,"oak_proto_rust::oak::crypto::v1"],[19,"anyhow"],[20,"oak_proto_rust::oak::session::v1"],[21,"tonic::codec::decode"],[22,"tonic::response"],[23,"tonic"],[24,"futures_channel::mpsc"],[25,"core::ops::function"],[26,"core::result"],[27,"core::any"]],"i":"``f00000000000","f":"``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{cc{}}{{{b{df}}}{{l{{j{h}}}}}}{{}c{}}{{}{{n{c}}}{}}{{{b{df}}{b{A`}}}{{l{{j{h}}}}}}{e{{Ab{f}}}{{h{}{{Ad{{Al{{Aj{{Ah{Af}}}}}}}}}}}{{Bb{{B`{An}}}{{Ad{c}}}}}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{bBf}6","D":"h","p":[[1,"reference"],[0,"mut"],[5,"GrpcStreamingTransport",1],[10,"Future",14],[5,"Box",15],[5,"Pin",16],[5,"Request",17],[5,"EncryptedRequest",18],[8,"Result",19],[17,"Output"],[5,"ResponseWrapper",20],[5,"Streaming",21],[5,"Response",22],[8,"Result",23],[5,"RequestWrapper",20],[5,"Receiver",24],[10,"FnOnce",25],[6,"Result",26],[5,"TypeId",27]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAoABQAAAAEAAwABAAYAAAAIAAEACwADAA=="}],["oak_containers_agent",{"t":"CHPPPPPPPPPGFFFFPPPPNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNONNOONNNNONNNNNNNNNNNNNNNNNNNNNN","n":["metrics","set_error_handler","F64Counter","F64Histogram","F64ObservableCounter","F64ObservableGauge","F64ObservableUpDownCounter","F64UpDownCounter","I64ObservableGauge","I64ObservableUpDownCounter","I64UpDownCounter","MeterInstrument","MetricsConfig","MonitoringLayer","MonitoringService","OakObserver","U64Counter","U64Histogram","U64ObservableCounter","U64ObservableGauge","borrow","","","","","borrow_mut","","","","","call","","clone","","clone_into","","clone_to_uninit","","create_monitoring_layer","excluded_metrics","from","","","","","","","","","","","","","","","","","","from_ref","","init_metrics","into","","","","","into_make_service","into_request","","","","","launcher_addr","layer","make_service","meter","metric_registry","poll_ready","","","register_metric","scope","to_owned","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","",""],"q":[[0,"oak_containers_agent"],[2,"oak_containers_agent::metrics"],[104,"opentelemetry::global::error_handler"],[105,"core::result"],[106,"core::ops::function"],[107,"core::marker"],[108,"http::request"],[109,"tower_service"],[110,"core::clone"],[111,"opentelemetry::metrics::instruments::up_down_counter"],[112,"opentelemetry::metrics::instruments::gauge"],[113,"opentelemetry::metrics::instruments::counter"],[114,"opentelemetry::metrics::instruments::histogram"],[115,"axum::routing::into_make_service"],[116,"tonic::request"],[117,"core::task::wake"],[118,"core::task::poll"],[119,"core::convert"],[120,"core::any"]],"i":"``Bb00000000`````00000AlCbAjAb43210001010103244444444444444321010`4321004321021033000321043210432104321043210","f":"`{c{{f{bd}}}{{h{d}}jl}}``````````````````{n{{n{c}}}{}}0000{{{n{A`}}}{{n{A`c}}}{}}0000{{{n{A`{Ab{e}}}}{Ad{c}}}gj{{Af{{Ad{c}}}}Ahj}{}}{{{n{A`}}{Ad{c}}}{}{}}{{{n{Aj}}}Aj}{{{n{{Ab{c}}}}}{{Ab{c}}}Ah}{{n{n{A`c}}}b{}}0{nb}0{{{n{Al}}}Aj}`{{{B`{An}}}Bb}{{{Bd{An}}}Bb}{{{Bh{Bf}}}Bb}{{{Bj{Bf}}}Bb}{{{Bj{Bl}}}Bb}{{{Bn{Bl}}}Bb}{{{Bn{Bf}}}Bb}{{{C`{Bl}}}Bb}{cc{}}{{{C`{Bf}}}Bb}{{{B`{Bf}}}Bb}{{{Bd{Bl}}}Bb}{{{Bd{Bf}}}Bb}{{{Bh{An}}}Bb}5555{{{n{c}}}c{}}0{CbAl}{{}c{}}0000{{}{{Cd{c}}}{}}{{}{{Cf{c}}}{}}0000`{{{n{Aj}}c}e{}{}}{{{n{A`}}c}{}{}}``{{{n{A`}}{n{A`Ch}}}{{Cj{{f{b}}}}}}0{{{n{A`{Ab{e}}}}{n{A`Ch}}}{{Cj{{f{bg}}}}}j{{Af{{Ad{c}}}}Ahj}{}}{{{n{A`Al}}c}b{{Cl{Bb}}}}`{nc{}}0{c{{f{e}}}{}{}}0000{{}{{f{c}}}{}}0000{nCn}0000;;;;;","D":"Af","p":[[1,"unit"],[6,"Error",104],[6,"Result",105],[10,"Fn",106],[10,"Send",107],[10,"Sync",107],[1,"reference"],[0,"mut"],[5,"MonitoringService",2],[5,"Request",108],[10,"Service",109],[10,"Clone",110],[5,"MonitoringLayer",2],[5,"OakObserver",2],[1,"i64"],[5,"ObservableUpDownCounter",111],[6,"MeterInstrument",2],[5,"ObservableGauge",112],[1,"f64"],[5,"UpDownCounter",111],[5,"Counter",113],[1,"u64"],[5,"Histogram",114],[5,"ObservableCounter",113],[5,"MetricsConfig",2],[5,"IntoMakeService",115],[5,"Request",116],[5,"Context",117],[6,"Poll",118],[10,"Into",119],[5,"TypeId",120]],"r":[[1,104]],"b":[[40,"impl-From%3CObservableUpDownCounter%3Ci64%3E%3E-for-MeterInstrument"],[41,"impl-From%3CObservableGauge%3Ci64%3E%3E-for-MeterInstrument"],[42,"impl-From%3CUpDownCounter%3Cf64%3E%3E-for-MeterInstrument"],[43,"impl-From%3CCounter%3Cf64%3E%3E-for-MeterInstrument"],[44,"impl-From%3CCounter%3Cu64%3E%3E-for-MeterInstrument"],[45,"impl-From%3CHistogram%3Cu64%3E%3E-for-MeterInstrument"],[46,"impl-From%3CHistogram%3Cf64%3E%3E-for-MeterInstrument"],[47,"impl-From%3CObservableCounter%3Cu64%3E%3E-for-MeterInstrument"],[49,"impl-From%3CObservableCounter%3Cf64%3E%3E-for-MeterInstrument"],[50,"impl-From%3CObservableUpDownCounter%3Cf64%3E%3E-for-MeterInstrument"],[51,"impl-From%3CObservableGauge%3Cu64%3E%3E-for-MeterInstrument"],[52,"impl-From%3CObservableGauge%3Cf64%3E%3E-for-MeterInstrument"],[53,"impl-From%3CUpDownCounter%3Ci64%3E%3E-for-MeterInstrument"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAF0ABQAAAAEAAwAtADIABAA7AAIAQwAlAA=="}],["oak_containers_attestation",{"t":"FFFFNNNNNNNNHHHNOOOONNNNNHNNNNNOOOONNNNNNNNNNNNNNNN","n":["GroupKeys","GroupPublicKeys","InstanceKeys","InstancePublicKeys","borrow","","","","borrow_mut","","","","create_container_dice_layer","create_container_event","create_system_layer_event","encrypted_group_encryption_key","encryption_key","","encryption_public_key","","from","","","","generate_group_keys","generate_instance_keys","into","","","","provide_group_keys","session_binding_key","session_binding_public_key","signing_key","signing_public_key","try_from","","","","try_into","","","","type_id","","","","vzip","","",""],"q":[[0,"oak_containers_attestation"],[51,"oak_proto_rust::oak::attestation::v1"],[52,"oak_attestation::dice"],[53,"oak_proto_rust::oak::crypto::v1"],[54,"anyhow"],[55,"oak_proto_rust::oak::key_provisioning::v1"],[56,"core::result"],[57,"core::any"]],"i":"````AfnA`Ah3210```1312032103`3210332323210321032103210","f":"````{b{{b{c}}}{}}000{{{b{d}}}{{b{dc}}}{}}000{{{b{f}}}h}{{{b{{l{j}}}}{b{{l{j}}}}{b{n}}}f}{{{b{{l{j}}}}}f}{{{b{A`}}{b{{l{j}}}}}{{Ad{Ab}}}}````{cc{}}000{{{b{Af}}}{{Aj{A`Ah}}}}{{}{{Aj{Afn}}}}{{}c{}}000{{{b{Af}}Al}{{Ad{A`}}}}````{c{{An{e}}}{}{}}000{{}{{An{c}}}{}}000{bB`}0004444","D":"Ah","p":[[1,"reference"],[0,"mut"],[5,"Event",51],[5,"LayerData",52],[1,"u8"],[1,"slice"],[5,"InstancePublicKeys",0],[5,"GroupKeys",0],[5,"EncryptedRequest",53],[8,"Result",54],[5,"InstanceKeys",0],[5,"GroupPublicKeys",0],[1,"tuple"],[5,"GroupKeys",55],[6,"Result",56],[5,"TypeId",57]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACcABAAAAAwAEQADABkAAQAfABQA"}],["oak_containers_channel",{"t":"H","n":["create_channel"],"q":[[0,"oak_containers_channel"],[1,"http::uri"],[2,"tonic::transport::channel"],[3,"anyhow"]],"i":"`","f":"{b{{f{d}}}}","D":"`","p":[[5,"Uri",1],[5,"Channel",2],[8,"Result",3]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA="}],["oak_containers_hello_world_web_client",{"t":"FFNNNNNNNHNNNNNNNNNNNNNN","n":["DemoRestBasedTransport","GreeterClient","borrow","","borrow_mut","","from","","get_endorsed_evidence","greet","","into","","invoke","new","","try_from","","try_into","","type_id","","vzip",""],"q":[[0,"oak_containers_hello_world_web_client"],[24,"core::future::future"],[25,"alloc::boxed"],[26,"core::pin"],[27,"alloc::string"],[28,"wasm_bindgen"],[29,"core::result"],[30,"anyhow"],[31,"oak_proto_rust::oak::crypto::v1"],[32,"core::any"]],"i":"``fAf10101`01011010101010","f":"``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{cc{}}0{{{b{df}}}{{l{{j{h}}}}}}{{nA`}{{Ad{A`Ab}}}}{{{b{dAf}}{b{Ah}}}{{Aj{A`}}}}{{}c{}}0{{{b{df}}{b{Al}}}{{l{{j{h}}}}}}{nf}{n{{Aj{Af}}}}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{bAn}066","D":"j","p":[[1,"reference"],[0,"mut"],[5,"DemoRestBasedTransport",0],[10,"Future",24],[5,"Box",25],[5,"Pin",26],[1,"u16"],[5,"String",27],[5,"JsValue",28],[6,"Result",29],[5,"GreeterClient",0],[1,"str"],[8,"Result",30],[5,"EncryptedRequest",31],[5,"TypeId",32]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABMABAAAAAAAAgAEAAkAAgAOAAoA"}],["oak_containers_launcher",{"t":"FGGPFPPPFGPPPPGPPPONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNONOOHOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNOOO","n":["Args","Channel","ChannelType","Default","Launcher","Network","","","QemuParams","QemuVmType","Sev","SevEs","SevSnp","Tdx","TrustedApplicationAddress","VirtioVsock","","","application_config","augment_args","","augment_args_for_update","","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","command","","command_for_update","","communication_channel","container_bundle","create","default","","eq","","","equivalent","","","","fmt","","","","","from","","","","","","","from_arg_matches","","from_arg_matches_mut","","from_ref","","","","get_endorsed_evidence","get_group_keys","get_trusted_app_address","group_id","","initrd","into","","","","","","","into_request","","","","","","","kernel","kill","memory_size","num_cpus","path_exists","pci_passthrough","qemu_params","ramdrive_size","stage0_binary","system_image","telnet_console","to_owned","","","","to_possible_value","","to_string","try_from","","","","","","","","try_into","","","","","","","type_id","","","","","","","update_from_arg_matches","","update_from_arg_matches_mut","","value_variants","","virtio_guest_cid","vm_type","vmm_binary","vzip","","","","","","","wait","host_proxy_port","trusted_app_address",""],"q":[[0,"oak_containers_launcher"],[162,"oak_containers_launcher::Channel"],[165,"clap_builder::builder::command"],[166,"anyhow"],[167,"core::result"],[168,"core::fmt"],[169,"clap_builder::parser::matches::arg_matches"],[170,"clap_builder"],[171,"oak_proto_rust::oak::session::v1"],[172,"oak_proto_rust::oak::key_provisioning::v1"],[173,"clap_builder::util::id"],[174,"core::option"],[175,"tonic::request"],[176,"std::path"],[177,"alloc::string"],[178,"clap_builder::builder::possible_value"],[179,"core::any"]],"i":"```h`Alln``3333`210Abj1014Ad614235061423614361436143121222064614444456142506142312126143000121506142350614231011`1211216143645550614235061423506142312126411150614230D`0Db","f":"```````````````````{bb}000{d{{d{c}}}{}}000000{{{d{f}}}{{d{fc}}}{}}000000{{{d{h}}}h}{{{d{j}}}j}{{{d{l}}}l}{{{d{n}}}n}{{d{d{fc}}}A`{}}000{dA`}000{{}b}000``{Ab{{Ah{AdAf}}}}{{}h}{{}l}{{{d{h}}{d{h}}}Aj}{{{d{j}}{d{j}}}Aj}{{{d{l}}{d{l}}}Aj}{{d{d{c}}}Aj{}}000{{{d{Al}}{d{fAn}}}B`}{{{d{h}}{d{fAn}}}B`}{{{d{j}}{d{fAn}}}B`}{{{d{l}}{d{fAn}}}B`}{{{d{Ab}}{d{fAn}}}B`}{cc{}}000000{{{d{Bb}}}{{Ah{jBd}}}}{{{d{Bb}}}{{Ah{AbBd}}}}{{{d{fBb}}}{{Ah{jBd}}}}{{{d{fBb}}}{{Ah{AbBd}}}}{{{d{c}}}c{}}000{{{d{fAd}}}{{Bh{Bf}}}}{{{d{fAd}}Bj}{{Bh{Bl}}}}{{{d{fAd}}}{{Ah{AlAf}}}}{{}{{C`{Bn}}}}0`{{}c{}}000000{{}{{Cb{c}}}{}}000000`{{{d{fAd}}}A`}``{{{d{Cd}}}{{Ah{CfCh}}}}``````{dc{}}000{{{d{h}}}{{C`{Cj}}}}{{{d{l}}}{{C`{Cj}}}}{dCh}{n{{Ah{Alc}}}{}}{c{{Ah{e}}}{}{}}000000{{}{{Ah{c}}}{}}000000{dCl}000000{{{d{fj}}{d{Bb}}}{{Ah{A`Bd}}}}{{{d{fAb}}{d{Bb}}}{{Ah{A`Bd}}}}{{{d{fj}}{d{fBb}}}{{Ah{A`Bd}}}}{{{d{fAb}}{d{fBb}}}{{Ah{A`Bd}}}}{{}{{d{{Cn{h}}}}}}{{}{{d{{Cn{l}}}}}}```{{}c{}}000000{{{d{fAd}}}{{Ah{A`Af}}}}```","D":"Cn","p":[[5,"Command",165],[1,"reference"],[0,"mut"],[6,"QemuVmType",0],[5,"QemuParams",0],[6,"ChannelType",0],[6,"Channel",0],[1,"unit"],[5,"Args",0],[5,"Launcher",0],[5,"Error",166],[6,"Result",167],[1,"bool"],[6,"TrustedApplicationAddress",0],[5,"Formatter",168],[8,"Result",168],[5,"ArgMatches",169],[8,"Error",170],[5,"EndorsedEvidence",171],[8,"Result",166],[5,"GetGroupKeysRequest",172],[5,"GetGroupKeysResponse",172],[5,"Id",173],[6,"Option",174],[5,"Request",175],[1,"str"],[5,"PathBuf",176],[5,"String",177],[5,"PossibleValue",178],[5,"TypeId",179],[1,"slice"],[15,"Network",162],[15,"VirtioVsock",162]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIYADgAAAAYACAAAAAsAAwAQADYATgAHAFcAAABZAAEAYwAGAGsAAABuAAAAcAAAAHMAAAB1ACIAmwAKAA=="}],["oak_containers_orchestrator",{"t":"CCCCCCHHHFFNNNNHNNNNNNNNNNNHNNNNNNNNNHFNNNNNNNNNNNNNNNNNNH","n":["container_runtime","dice","ipc_server","key_provisioning","launcher_client","logging","main","run","load_stage1_dice_data","CryptoService","ServiceImplementation","borrow","","borrow_mut","","create_services","derive_session_keys","from","","get_application_config","get_endorsed_evidence","into","","into_request","","new","notify_app_ready","server","sign","try_from","","try_into","","type_id","","vzip","","create","LauncherClient","borrow","borrow_mut","create","from","get_application_config","get_container_bundle","get_endorsements","get_group_keys","get_key_provisioning_role","into","into_request","notify_app_ready","openmetrics_builder","send_attestation_evidence","try_from","try_into","type_id","vzip","setup"],"q":[[0,"oak_containers_orchestrator"],[7,"oak_containers_orchestrator::container_runtime"],[8,"oak_containers_orchestrator::dice"],[9,"oak_containers_orchestrator::ipc_server"],[37,"oak_containers_orchestrator::key_provisioning"],[38,"oak_containers_orchestrator::launcher_client"],[57,"oak_containers_orchestrator::logging"],[58,"anyhow"],[59,"std::path"],[60,"nix::unistd"],[61,"tokio_util::sync::cancellation_token"],[62,"core::result"],[63,"oak_attestation_types::attester"],[64,"oak_attestation_types::util"],[65,"oak_attestation"],[66,"oak_proto_rust::oak::attestation::v1"],[67,"oak_containers_attestation"],[68,"alloc::sync"],[69,"alloc::vec"],[70,"oak_grpc::oak::containers::orchestrator_server"],[71,"oak_grpc::oak::containers::v1::orchestrator_crypto_server"],[72,"oak_proto_rust::oak::containers::v1"],[73,"tonic::request"],[74,"core::future::future"],[75,"alloc::boxed"],[76,"core::pin"],[77,"core::convert"],[78,"core::clone"],[79,"core::any"],[80,"http::uri"],[81,"core::error"],[82,"oak_proto_rust::oak::key_provisioning::v1"],[83,"opentelemetry_otlp::exporter::tonic"]],"i":"```````````CbBn10`11000101010`110101010``Bl00000000000000000`","f":"``````{{}{{d{b}}}}{{{j{{h{f}}}}{j{l}}nA`{j{l}}Ab}{{Af{bAd}}}}{{}{{d{c}}}{AhAjAl}}``{j{{j{c}}}{}}0{{{j{An}}}{{j{Anc}}}{}}0{{B`BbBd{Bh{Bf}}{Bj{f}}{Bh{Bl}}}{{Cf{{C`{Bn}}{Cd{Cb}}}}}}{{{j{Cb}}{Cj{Ch}}}{{D`{{Cn{Cl}}}}}}{cc{}}0{{{j{Bn}}{Cj{b}}}{{D`{{Cn{Cl}}}}}}0{{}c{}}0{{}{{Cj{c}}}{}}0{{Bd{Bh{Bf}}}Cb}3{{c{C`{Bn}}{Cd{Cb}}Ab}{{Af{bAd}}}{{Db{l}}Dd}}{{{j{Cb}}{Cj{Df}}}{{D`{{Cn{Cl}}}}}}{c{{Af{e}}}{}{}}0{{}{{Af{c}}}{}}0{jDh}077{{{j{Dj}}{Bh{Bf}}Ab}{{Af{bAd}}}}`>={Dl{{Af{Bl{Cn{Dn}}}}}};{{{j{Bl}}}{{Af{{Bj{f}}{Cn{Dn}}}}}}0{{{j{Bl}}}{{Af{Bb{Cn{Dn}}}}}}{{{j{Bl}}}{{d{E`}}}}{{{j{Bl}}}{{d{Eb}}}}=<{{{j{Bl}}}{{Af{b{Cn{Dn}}}}}}{{{j{Bl}}}Ed}{{{j{Bl}}B`}{{Af{b{Cn{Dn}}}}}};:9{{}c{}}{{}{{d{b}}}}","D":"Ab","p":[[1,"unit"],[8,"Result",58],[1,"u8"],[1,"slice"],[1,"reference"],[5,"Path",59],[5,"Uid",60],[5,"Gid",60],[5,"CancellationToken",61],[5,"Error",58],[6,"Result",62],[10,"Attester",63],[10,"Serializable",64],[10,"ApplicationKeysAttester",65],[0,"mut"],[5,"Evidence",66],[5,"Endorsements",66],[5,"InstanceKeys",67],[5,"GroupKeys",67],[5,"Arc",68],[5,"Vec",69],[5,"LauncherClient",38],[5,"ServiceImplementation",9],[5,"OrchestratorServer",70],[5,"CryptoService",9],[5,"OrchestratorCryptoServer",71],[1,"tuple"],[5,"DeriveSessionKeysRequest",72],[5,"Request",73],[10,"Future",74],[5,"Box",75],[5,"Pin",76],[10,"AsRef",77],[10,"Clone",78],[5,"SignRequest",72],[5,"TypeId",79],[1,"str"],[5,"Uri",80],[10,"Error",81],[5,"GroupKeys",82],[6,"KeyProvisioningRole",72],[5,"TonicExporterBuilder",83]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADEABwAAAAgACgAHABQAAQAYAA4AKAACACwABAAyAAcA"}],["oak_containers_syslogd",{"t":"FNNNNNNNNNNNNNOCHHCNNNNNNHTTTFFTTTTTNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNCONNNNNNNNNNNNOONNNNNFHHHHHHNNNN","n":["Args","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","into_request","launcher_addr","log_relay","main","signal_handler","systemd_journal","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","run","ALL_NAMESPACES","CURRENT_USER","INCLUDE_DEFAULT_NAMESPACE","Journal","JournalOpenFlags","LOCAL_ONLY","OS_ROOT","RUNTIME_ONLY","SYSTEM","TAKE_DIRECTORY_FD","all","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","cmp","compare","complement","contains","difference","drop","empty","eq","equivalent","","","","extend","fmt","","","","","from","","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_ref","get_hash","hash","insert","intersection","intersects","into","","into_iter","into_request","","is_all","is_empty","journal","new","next","","next_data","not","partial_cmp","remove","seek_head","set","sub","sub_assign","symmetric_difference","systemd_sys","terminate","to_owned","toggle","try_from","","try_into","","type_id","","union","vzip","","wait","_data","_marker","borrow","borrow_mut","from","into","into_request","sd_journal","sd_journal_close","sd_journal_enumerate_data","sd_journal_next","sd_journal_open","sd_journal_seek_head","sd_journal_wait","try_from","try_into","type_id","vzip"],"q":[[0,"oak_containers_syslogd"],[25,"oak_containers_syslogd::log_relay"],[26,"oak_containers_syslogd::systemd_journal"],[116,"oak_containers_syslogd::systemd_journal::systemd_sys"],[134,"clap_builder::builder::command"],[135,"core::fmt"],[136,"clap_builder::parser::matches::arg_matches"],[137,"clap_builder"],[138,"core::result"],[139,"clap_builder::util::id"],[140,"core::option"],[141,"tonic::request"],[142,"core::error"],[143,"alloc::boxed"],[144,"signal_hook_tokio"],[145,"tokio::sync::once_cell"],[146,"alloc::sync"],[147,"core::any"],[148,"oak_containers_orchestrator::launcher_client"],[149,"anyhow"],[150,"core::ffi"],[151,"core::cmp"],[152,"core::iter::traits::collect"],[153,"core::hash"],[154,"core::marker"],[155,"nix::errno::consts"],[156,"alloc::string"],[157,"std::collections::hash::map"]],"i":"`h0000000000000````000000`Bl00``00000000000000Cd10111111111011111111111101111111111101001110000011101111`0110101011010Dn000000```````0000","f":"`{bb}0{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{}b}0{{{d{h}}{d{fj}}}l}{cc{}}{{{d{n}}}{{Ab{hA`}}}}{{{d{fn}}}{{Ab{hA`}}}}{{}{{Af{Ad}}}}{{}c{}}{{}{{Ah{c}}}{}}``{{}{{Ab{Aj{An{Al}}}}}}{{B`{Bd{{Bb{Aj}}}}}Aj}`{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{dBf}{{{d{fh}}{d{n}}}{{Ab{AjA`}}}}{{{d{fh}}{d{fn}}}{{Ab{AjA`}}}}8{{Bh{Bd{{Bb{Aj}}}}}{{Bj{Aj}}}}``````````{{}Bl}{{BlBl}Bl}{{{d{fBl}}Bl}Aj}10{{{d{Bl}}}Bn}`21{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{{{d{Bl}}}Bl}{{d{d{fc}}}Aj{}}{dAj}{{{d{Bl}}{d{Bl}}}C`}{{d{d{c}}}C`{}}{BlBl}{{{d{Bl}}Bl}Cb};{{{d{fCd}}}Aj}={{{d{Bl}}{d{Bl}}}Cb}{{d{d{c}}}Cb{}}000{{{d{fBl}}c}Aj{{Ch{}{{Cf{Bl}}}}}}{{{d{Bl}}{d{fj}}}l}0000{cc{}}0{Bn{{Af{Bl}}}}{BnBl}0{cBl{{Ch{}{{Cf{Bl}}}}}}{{{d{c}}}c{}}{{{d{c}}{d{e}}}Cj{ClCn}D`}{{{d{Bl}}{d{fc}}}AjDb}{{{d{fBl}}Bl}Aj}{{BlBl}Bl}>{{}c{}}00{{}{{Ah{c}}}{}}0{{{d{Bl}}}Cb}0`{{Bl{Bd{{Bb{Aj}}}}}{{Ab{CdDd}}}}{{{d{fCd}}}{{Ab{{Af{{Dh{DfDf}}}}Dd}}}}{{{d{fCd}}}{{Af{c}}}{}}{{{d{fCd}}}{{Ab{{Af{{d{{Dl{Dj}}}}}}Dd}}}}{BlBl}{{{d{Bl}}{d{Bl}}}{{Af{C`}}}}:{{{d{fCd}}}{{Ab{AjDd}}}}{{{d{fBl}}BlCb}Aj};<;``{dc{}}={c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{dBf}0?>>{{{d{fCd}}}{{Ab{CbDd}}}}``{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{cc{}}{{}c{}}{{}{{Ah{c}}}{}}```````8761","D":"Eb","p":[[5,"Command",134],[1,"reference"],[0,"mut"],[5,"Args",0],[5,"Formatter",135],[8,"Result",135],[5,"ArgMatches",136],[8,"Error",137],[6,"Result",138],[5,"Id",139],[6,"Option",140],[5,"Request",141],[1,"unit"],[10,"Error",142],[5,"Box",143],[8,"Signals",144],[5,"OnceCell",145],[5,"Arc",146],[5,"TypeId",147],[5,"LauncherClient",148],[8,"Result",149],[5,"JournalOpenFlags",26],[8,"c_int",150],[6,"Ordering",151],[1,"bool"],[5,"Journal",26],[17,"Item"],[10,"IntoIterator",152],[1,"u64"],[10,"Hash",153],[10,"Sized",154],[10,"BuildHasher",153],[10,"Hasher",153],[6,"Errno",155],[5,"String",156],[5,"HashMap",157],[1,"u8"],[1,"slice"],[5,"sd_journal",116]],"r":[],"b":[[65,"impl-LowerHex-for-JournalOpenFlags"],[66,"impl-Octal-for-JournalOpenFlags"],[67,"impl-UpperHex-for-JournalOpenFlags"],[68,"impl-Binary-for-JournalOpenFlags"],[69,"impl-Debug-for-JournalOpenFlags"],[91,"impl-Journal"],[92,"impl-Iterator-for-Journal"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAF0AEwAAAAgACgACAA4ADwAfAAUAKwAAAC4ACAA6AAAAPAAKAEwAAwBVAAIAWgABAF0AAQBgAAAAZwACAGsABQByAAEAdQADAHsAAAB9AAkA"}],["oak_core",{"t":"CCCKFNNNNNNNMNMNNNNFNNNNNNNNNNNNFNNNNNNNNHNNNN","n":["samplestore","sync","timer","SampleStore","StaticSampleStore","borrow","borrow_mut","eq","fmt","from","into","new","percentile","","record","","try_from","try_into","type_id","OnceCell","borrow","borrow_mut","default","deinit","from","get","into","new","set","try_from","try_into","type_id","Timer","borrow","borrow_mut","elapsed","fmt","from","into","new","new_rdtsc","rdtsc","timed","try_from","try_into","type_id"],"q":[[0,"oak_core"],[3,"oak_core::samplestore"],[19,"oak_core::sync"],[32,"oak_core::timer"],[46,"core::fmt"],[47,"core::option"],[48,"core::result"],[49,"core::any"],[50,"core::ops::function"]],"i":"`````f000000A`101111`Al00000000000`An0000000`0000","f":"`````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}{b{f}}}h}{{{b{f}}{b{dj}}}l}{cc{}}{{}c{}}{{}{{n{f}}}}{{{b{A`}}Ab}{{n{Ad}}}}{{{b{f}}Ab}{{n{Ad}}}}{{{b{dA`}}Ad}Af}{{{b{df}}Ad}Af}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{bAj}`=<{{}{{Al{c}}}{}}{{{b{{Al{c}}}}}{{n{c}}}{}};{{{b{{Al{c}}}}}{{n{{b{c}}}}}{}};2{{{b{{Al{c}}}}c}{{Ah{Afc}}}{}}654`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{An}}}Ad}{{{b{An}}{b{dj}}}l}{cc{}}{{}c{}}{AdAn}{{}An}{{}Ad}{cAdB`}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{bAj}","D":"Bj","p":[[1,"reference"],[0,"mut"],[5,"StaticSampleStore",3],[1,"bool"],[5,"Formatter",46],[8,"Result",46],[6,"Option",47],[10,"SampleStore",3],[1,"f64"],[1,"u64"],[1,"unit"],[6,"Result",48],[5,"TypeId",49],[5,"OnceCell",19],[5,"Timer",32],[10,"FnOnce",50]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABkADQAAAAAABAAAAAYAAwAMAAAADgAAABAAAwAVAAIAHAAAAB4AAgAiAAEAJQAAACgAAAAsAAIA"}],["oak_crypto",{"t":"SCCCCCCCKFKNNNNNNNNHMMNNNNNNNNNNFKFFONNNNNNNMNNNMNNNNNNNNNNNNONONNNNNNNNNNNNKIRIIFFKNNNNNNNMNNNNMNNNNNNNNFKNNMNNNMNNNNNNFESFFFFSFSSFHHNNNNNNNNNNOCONNHNNONNNNNNNOHNNNNNNNOHHHHHOHHNNNNNNNNNNNNNNNNNNNNNNFFSFSSSSHHNNNNNNNNNHNNNNNNHNNNNNNHNNHHHNNNNNNNNNNNNNNNKMKM","n":["EMPTY_ASSOCIATED_DATA","encryption_key","encryptor","hpke","identity_key","noise_handshake","signer","verifier","AsyncEncryptionKeyHandle","EncryptionKey","EncryptionKeyHandle","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deserialize","encrypted_private_key","from","generate_encryption_key_pair","generate_recipient_context","","","","into","new","serialize","to_owned","try_from","try_into","type_id","vzip","ClientEncryptor","Encryptor","Payload","ServerEncryptor","aad","borrow","","","borrow_mut","","","create","decrypt","","","decrypt_async","encrypt","","","from","","","","","","","into","","","message","new","nonce","try_from","","","try_into","","","type_id","","","vzip","","","Deserializable","Kem","OutputSize","PrivateKey","PublicKey","RecipientContext","SenderContext","Serializable","borrow","","borrow_mut","","deserialize","from","","from_bytes","into","","serialize","size","to_bytes","try_from","","try_into","","type_id","","vzip","","IdentityKey","IdentityKeyHandle","borrow","borrow_mut","derive_dh_secret","","from","generate","get_public_key","","into","try_from","try_into","type_id","vzip","EcdsaKeyPair","IdentityKeyHandle","NONCE_LEN","NoiseMessage","Nonce","OrderedCrypter","P256Scalar","P256_X962_LEN","Response","SHA256_OUTPUT_LEN","SYMMETRIC_KEY_LEN","UnorderedCrypter","aes_256_gcm_open_in_place","aes_256_gcm_seal_in_place","borrow","","","","","borrow_mut","","","","","ciphertext","client","crypter","decrypt","","ecdsa_verify","encrypt","","ephemeral_public_key","from","","","","","","get_nonce_value","handshake_hash","hkdf_sha256","into","","","","","new","next_nonce","nonce","p256_scalar_mult","rand_bytes","respond_kk","respond_nk","respond_nn","response","sha256","sha256_two_part","try_from","","","","","","","try_into","","","","","type_id","","","","","vzip","","","","","EcdsaKeyPair","HandshakeInitiator","NONCE_LEN","P256Scalar","P256_SCALAR_LEN","P256_X962_LEN","SHA256_OUTPUT_LEN","SYMMETRIC_KEY_LEN","aes_256_gcm_open_in_place","aes_256_gcm_seal_in_place","borrow","","","borrow_mut","","","build_initial_message","bytes","compute_public_key","ecdsa_verify","from","","","from_pkcs8","generate","generate_pkcs8","hkdf_sha256","into","","","new_kk","new_nk","new_nn","p256_scalar_mult","process_response","public_key","rand_bytes","sha256","sha256_two_part","sign","try_from","","","","","try_into","","","type_id","","","vzip","","","Signer","sign","Verifier","verify"],"q":[[0,"oak_crypto"],[8,"oak_crypto::encryption_key"],[32,"oak_crypto::encryptor"],[76,"oak_crypto::hpke"],[105,"oak_crypto::identity_key"],[120,"oak_crypto::noise_handshake"],[200,"oak_crypto::noise_handshake::client"],[254,"oak_crypto::signer"],[256,"oak_crypto::verifier"],[258,"anyhow"],[259,"oak_proto_rust::oak::crypto::v1"],[260,"alloc::vec"],[261,"core::future::future"],[262,"alloc::boxed"],[263,"core::pin"],[264,"core::result"],[265,"core::any"],[266,"core::marker"],[267,"oak_proto_rust::oak::session::v1"],[268,"hpke"],[269,"generic_array"],[270,"oak_crypto::noise_handshake::crypto_wrapper"],[271,"core::convert"]],"i":"```````````f0000000`AfAj2222222222````Bl0BhC`2101Bj2110213333321321313321321321321``Db`````FjAh10010Cj2113321212121``Dj0Dh1110111111``````````````EjEfDnE`En432103`021`21343321040`43210144`````0``4322110432104321043210``````````F`ElFb210211`210010`210222`20```021110210210210`Ff`Fh","f":"```````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}f}{{b{b{dc}}}h{}}{bh}{{{b{d{l{j}}}}}{{n{f}}}}{{{b{f}}{b{{l{j}}}}}{{n{A`}}}}{cc{}}{{}{{Ad{f{Ab{j}}}}}}{{{b{Af}}{b{{l{j}}}}}{{n{Ah}}}}{{{b{Aj}}{b{{l{j}}}}}{{B`{{An{Al}}}}}}{{{b{f}}{b{{l{j}}}}}{{B`{{An{Al}}}}}}{{{b{f}}{b{{l{j}}}}}{{n{Ah}}}}{{}c{}}{Bbf}{f{{Ab{j}}}}{bc{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{bBf}6`````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{{l{j}}}}}{{n{Bh}}}}{{{b{dBj}}{b{Bl}}}{{n{Bl}}}}{{{b{Bh}}{b{Bn}}}{{n{{Ad{{Ab{j}}{Ab{j}}}}}}}}{{{b{A`}}{b{c}}}{{n{{Ad{C`{Ab{j}}{Ab{j}}}}}}}{AfCb}}{{{b{A`}}{b{c}}}{{n{{Ad{C`{Ab{j}}{Ab{j}}}}}}}{AjCb}}3{{{b{dBh}}{b{{l{j}}}}{b{{l{j}}}}}{{n{A`}}}}{{C`{b{{l{j}}}}{b{{l{j}}}}}{{n{Bn}}}}{cc{}}{{{Ab{j}}}Bl}{{{Ad{{Ab{j}}{Ab{j}}}}}Bl}{CdBl}{CfBl}44{{}c{}}00`{AhC`}`{c{{Bd{e}}}{}{}}00{{}{{Bd{c}}}{}}00{bBf}00444````````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{Ch{{n{Ah}}}}<<{{{b{{l{j}}}}}{{Bd{CjCl}}}}88{Ah{{n{Ch}}}}{{}Cn}{{{b{{Db{}{{D`{c}}}}}}}{{Dd{jc}}}{{Df{j}}}}998877;;``65{{{b{Dh}}{b{{l{j}}}}}{{n{{Ab{j}}}}}}{{{b{Dj}}{b{{l{j}}}}}{{n{{Ab{j}}}}}}{cc{}}{{}Dj}{{{b{Dh}}}{{n{{Ab{j}}}}}}{{{b{Dj}}}{{n{{Ab{j}}}}}}{{}c{}}{c{{Bd{e}}}{}{}}{{}{{Bd{c}}}{}}{bBf}3````````````{{{b{{Dl{j}}}}{b{{Dl{j}}}}{b{{l{j}}}}{Ab{j}}}{{Bd{{Ab{j}}h}}}}{{{b{{Dl{j}}}}{b{{Dl{j}}}}{b{{l{j}}}}{b{d{Ab{j}}}}}h}{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000```{{{b{dDn}}{b{{l{j}}}}}{{Bd{{Ab{j}}`}}}}{{{b{dE`}}{b{{Dl{j}}}}{b{{l{j}}}}}{{Bd{{Ab{j}}`}}}}{{{b{{l{j}}}}{b{{l{j}}}}{b{{l{j}}}}}Eb}2{{{b{dE`}}{b{{l{j}}}}}{{Bd{{Ad{{Ab{j}}{Ab{j}}}}`}}}}`??{{{b{Ed}}}Ef}{cc{}}00{{{b{{Dl{j}}}}}{{Bd{Eh`}}}}`{{{b{{l{j}}}}{b{{l{j}}}}{b{{l{j}}}}{b{d{l{j}}}}}{{Bd{hh}}}}?????{{{b{{Dl{j}}}}{b{{Dl{j}}}}Eh}E`}{{{b{dEj}}}{{Bd{{Dl{j}}`}}}}`{{{b{El}}{b{{Dl{j}}}}}{{Bd{{Dl{j}}h}}}}{{{b{d{l{j}}}}}h}{{{b{Dh}}{b{{l{j}}}}{b{Ef}}}{{Bd{En`}}}}{{{b{Dh}}{b{Ef}}}{{Bd{En`}}}}{{{b{Ef}}}{{Bd{En`}}}}`{{{b{{l{j}}}}}{{Dl{j}}}}{{{b{{l{j}}}}{b{{l{j}}}}}{{Dl{j}}}}{c{{Bd{e}}}{}{}}00{Ch{{Bd{Dnc}}}{}}1{{{Ad{ChEh}}}{{Bd{E`c}}}{}}2{{}{{Bd{c}}}{}}0000{bBf}0000{{}c{}}0000````````{{{b{{Dl{j}}}}{b{{Dl{j}}}}{b{{l{j}}}}{Ab{j}}}{{Bd{{Ab{j}}h}}}}{{{b{{Dl{j}}}}{b{{Dl{j}}}}{b{{l{j}}}}{b{d{Ab{j}}}}}h}{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{dF`}}}{{Bd{Ef`}}}}{{{b{El}}}{{Dl{j}}}}0{{{b{{l{j}}}}{b{{l{j}}}}{b{{l{j}}}}}Eb}{cc{}}00{{{b{{l{j}}}}}{{Bd{Fbh}}}}{{}El}{{}{{Bd{{`{{Fd{{l{j}}}}}}h}}}}{{{b{{l{j}}}}{b{{l{j}}}}{b{{l{j}}}}{b{d{l{j}}}}}{{Bd{hh}}}}<<<{{{Dl{j}}{An{Dh}}}F`}{{{b{{Dl{j}}}}}F`}{{}F`}{{{b{El}}{b{{Dl{j}}}}}{{Bd{{Dl{j}}h}}}}{{{b{dF`}}{b{Ef}}}{{Bd{{Ad{{Dl{j}}Dn}}`}}}}{{{b{Fb}}}{{`{{Fd{{l{j}}}}}}}}{{{b{d{l{j}}}}}h}{{{b{{l{j}}}}}{{Dl{j}}}}{{{b{{l{j}}}}{b{{l{j}}}}}{{Dl{j}}}}{{{b{Fb}}{b{{l{j}}}}}{{Bd{{`{{Fd{{l{j}}}}}}h}}}}{c{{Bd{e}}}{}{}}0{{{b{{Dl{j}}}}}{{Bd{Elh}}}}{{{b{{l{j}}}}}{{Bd{Elh}}}}2{{}{{Bd{c}}}{}}00{bBf}00{{}c{}}00`{{{b{Ff}}{b{{l{j}}}}}{{Ab{j}}}}`{{{b{Fh}}{b{{l{j}}}}{b{{l{j}}}}}{{n{h}}}}","D":"Gb","p":[[1,"reference"],[0,"mut"],[5,"EncryptionKey",8],[1,"unit"],[1,"u8"],[1,"slice"],[8,"Result",258],[5,"EncryptedRequest",259],[5,"Vec",260],[1,"tuple"],[10,"EncryptionKeyHandle",8],[5,"RecipientContext",76],[10,"AsyncEncryptionKeyHandle",8],[10,"Future",261],[5,"Box",262],[5,"Pin",263],[8,"PrivateKey",76],[6,"Result",264],[5,"TypeId",265],[5,"ClientEncryptor",32],[10,"Encryptor",32],[5,"Payload",32],[5,"EncryptedResponse",259],[5,"ServerEncryptor",32],[10,"Sized",266],[5,"PlaintextMessage",267],[5,"EncryptedMessage",267],[5,"SessionKeys",259],[10,"Deserializable",76,268],[6,"HpkeError",268],[1,"usize"],[17,"OutputSize"],[10,"Serializable",76,268],[5,"GenericArray",269],[10,"ArrayLength",269],[10,"IdentityKeyHandle",105],[5,"IdentityKey",105],[1,"array"],[5,"OrderedCrypter",120],[5,"UnorderedCrypter",120],[1,"bool"],[5,"NoiseHandshakeMessage",267],[5,"NoiseMessage",120],[1,"u32"],[5,"Nonce",120],[5,"P256Scalar",200,270],[5,"Response",120],[5,"HandshakeInitiator",200],[5,"EcdsaKeyPair",200,270],[10,"AsRef",271],[10,"Signer",254],[10,"Verifier",256],[5,"SenderContext",76]],"r":[[76,268],[83,268],[120,270],[121,105],[122,270],[126,270],[127,270],[129,270],[130,270],[132,270],[133,270],[149,270],[161,270],[170,270],[171,270],[176,270],[177,270],[200,270],[202,270],[203,270],[204,270],[205,270],[206,270],[207,270],[208,270],[209,270],[219,270],[226,270],[233,270],[236,270],[237,270],[238,270]],"b":[[22,"impl-AsyncEncryptionKeyHandle-for-EncryptionKey"],[23,"impl-EncryptionKeyHandle-for-EncryptionKey"],[52,"impl-From%3CVec%3Cu8%3E%3E-for-Payload"],[53,"impl-From%3C(Vec%3Cu8%3E,+Vec%3Cu8%3E)%3E-for-Payload"],[54,"impl-From%3CPlaintextMessage%3E-for-Payload"],[55,"impl-From%3CEncryptedMessage%3E-for-Payload"],[242,"impl-TryFrom%3C%26%5Bu8;+P256_SCALAR_LEN%5D%3E-for-P256Scalar"],[243,"impl-TryFrom%3C%26%5Bu8%5D%3E-for-P256Scalar"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAMkAHAAAAAIABAAAAAcAAwAMAAUAFQADABoABgAiAAEAJQAGAC0AAAAxAAAANQADAD4ADgBOAAUAVQADAFwAAABhAA4AcQACAHUACgCBAAIAhQAUAJwAAACgAAEAqAAJALMAGQDPAA0A4AACAOcABwDwABIA"}],["oak_dice",{"t":"CCCSSSTTTTTTSSSSSSSSTTTSSFSSSSSSSNNNNNNNNNNNNNNNNHHHHNNNNNNNNNNNNNNNHHHHHHNNNNNNNNNNNNNNNNNNNNNHPFFSSFFSSSFPFPSSSSFFSSFGPSOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNOOOOONONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOONNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNH","n":["cert","evidence","utils","ACPI_MEASUREMENT_ID","APPLICATION_KEY_ID","CONTAINER_IMAGE_LAYER_ID","CONTENT_COMMITMENT","CRL_SIGN","DATA_ENCIPHERMENT","DECIPHER_ONLY","DIGITAL_SIGNATURE","ENCIPHER_ONLY","ENCLAVE_APPLICATION_LAYER_ID","EVENT_ID","FINAL_LAYER_CONFIG_MEASUREMENT_ID","INITRD_MEASUREMENT_ID","KERNEL_COMMANDLINE_ID","KERNEL_COMMANDLINE_MEASUREMENT_ID","KERNEL_LAYER_ID","KERNEL_MEASUREMENT_ID","KEY_AGREEMENT","KEY_CERT_SIGN","KEY_ENCIPHERMENT","KEY_ID_LENGTH","KEY_USAGE_ID","KeyUsage","LAYER_2_CODE_MEASUREMENT_ID","LAYER_3_CODE_MEASUREMENT_ID","MEMORY_MAP_MEASUREMENT_ID","SETUP_DATA_MEASUREMENT_ID","SHA2_256_ID","SUBJECT_PUBLIC_KEY_ID","SYSTEM_IMAGE_LAYER_ID","all","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","borrow_mut","clone","clone_into","clone_to_uninit","complement","contains","cose_key_to_hpke_public_key","cose_key_to_verifying_key","derive_kem_public_key_id","derive_verifying_key_id","difference","empty","extend","fmt","","","","","from","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","generate_ecdsa_key_pair","generate_kem_certificate","generate_signing_certificate","get_claims_set_from_certificate_bytes","get_public_key_from_claims_set","hpke_public_key_to_cose_key","insert","intersection","intersects","into","into_iter","is_all","is_empty","iter","iter_names","not","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","verifying_key_to_cose_key","AmdSevSnp","ApplicationKeys","ApplicationPrivateKeys","CDI_SIZE","CERTIFICATE_SIZE","CertificateAuthority","CompoundDeviceIdentifier","DICE_DATA_CMDLINE_PARAM","DICE_DATA_LENGTH_CMDLINE_PARAM","EVENTLOG_CMDLINE_PARAM","Evidence","IntelTdx","LayerEvidence","None","P256_PRIVATE_KEY_SIZE","PRIVATE_KEY_SIZE","PUBLIC_KEY_SIZE","REPORT_SIZE","RestrictedKernelDiceData","RootLayerEvidence","STAGE0_DICE_PROTO_MAGIC","STAGE0_MAGIC","Stage0DiceData","TeePlatform","Unspecified","X25519_PRIVATE_KEY_SIZE","application_keys","application_private_keys","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","cdi","claims","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","drop","","","eca_certificate","eca_private_key","eca_public_key","encryption_private_key","encryption_public_key_certificate","eq","evidence","fmt","","from","","","","","","","","","","from_repr","get_eca_public_key","get_remote_attestation_report","get_tee_platform","into","","","","","","","","","","layer_1_cdi","layer_1_certificate_authority","layer_1_evidence","magic","remote_attestation_report","restricted_kernel_evidence","root_layer_evidence","","set_eca_public_key","set_remote_attestation_report","signing_private_key","signing_public_key_certificate","tee_platform","to_owned","","","","","to_string","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","zeroize","","","cbor_encoded_bytes_to_vec"],"q":[[0,"oak_dice"],[3,"oak_dice::cert"],[96,"oak_dice::evidence"],[250,"oak_dice::utils"],[251,"coset::key"],[252,"alloc::vec"],[253,"core::result"],[254,"p256::ecdsa"],[255,"core::iter::traits::collect"],[256,"core::fmt"],[257,"core::option"],[258,"alloc::string"],[259,"coset::cwt"],[260,"ciborium::value"],[261,"coset::sign"],[262,"coset::common"],[263,"bitflags::iter"],[264,"core::any"]],"i":"``````b00000````````000``````````0000000000000000````000000000000000``````000000000000000000000`Db``````````0`0``````````0`DfEb2DdCnDhDjEdD`Dl8796543210873519651896518965184305460197999654321087966696543210872222682866016965189965432108796543210879654321087430`","f":"`````````````````````````````````{{}b}{{bb}b}{{{f{db}}b}h}10{{{f{b}}}j}021{f{{f{c}}}{}}{{{f{d}}}{{f{dc}}}{}}{{{f{b}}}b}{{f{f{dc}}}h{}}{fh}{bb}{{{f{b}}b}l}{{{f{n}}}{{Af{{Ab{A`}}{f{Ad}}}}}}{{{f{n}}}{{Af{Ah{f{Ad}}}}}}{{{f{{Aj{A`}}}}}{{Al{A`}}}}{{{f{Ah}}}{{Al{A`}}}}=>{{{f{db}}c}h{{B`{}{{An{b}}}}}}{{{f{b}}{f{dBb}}}Bd}0000{cc{}}{j{{Bf{b}}}}{jb}00{cb{{B`{}{{An{b}}}}}}{{{f{Ad}}}{{Bf{b}}}}{{}{{Bj{BhAh}}}}{{{f{Bh}}Bl{f{{Aj{A`}}}}{Ab{{Bj{BnC`}}}}}{{Af{CbCd}}}}{{{f{Bh}}Bl{f{Ah}}{Ab{{Bj{BnC`}}}}}{{Af{CbCd}}}}{{{f{{Aj{A`}}}}}{{Af{CfCd}}}}{{{f{Cf}}}{{Af{n{f{Ad}}}}}}{{{f{{Aj{A`}}}}}n}{{{f{db}}b}h}{{bb}b}{{{f{b}}b}l}{{}c{}}{bc{}}{{{f{b}}}l}0{{{f{b}}}{{Ch{b}}}}{{{f{b}}}{{Cj{b}}}}{bb}8{{{f{db}}bl}h}898{fc{}}:{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{fCl}<{{{f{Ah}}}n}````````````````````````````{f{{f{c}}}{}}000000000{{{f{d}}}{{f{dc}}}{}}000000000`{{{f{Cn}}}{{Af{CfBl}}}}{{{f{D`}}}{{Af{CfBl}}}}{{{f{Db}}}Db}{{{f{Dd}}}Dd}{{{f{Cn}}}Cn}{{{f{D`}}}D`}{{{f{Df}}}Df}{{f{f{dc}}}h{}}0000{fh}0000{{{f{dDh}}}h}{{{f{dDj}}}h}{{{f{dDl}}}h}`````{{{f{Db}}{f{Db}}}l}`{{{f{Db}}{f{dBb}}}{{Af{hDn}}}}{{{f{Db}}{f{dBb}}}Bd}{cc{}}000000000{E`{{Bf{Db}}}}{{{f{Dd}}}{{Af{{Ab{A`}}Bl}}}}{{{f{Dd}}}{{Af{{f{{Aj{A`}}}}{f{Ad}}}}}}{{{f{Dd}}}{{Af{Db{f{Ad}}}}}}{{}c{}}000000000````````{{{f{dDd}}{f{{Aj{A`}}}}}{{Af{h{f{Ad}}}}}}0```{fc{}}0000{fBl}{c{{Af{e}}}{}{}}000000000{{}{{Af{c}}}{}}000000000{fCl}000000000{{{f{dDh}}}h}{{{f{dDj}}}h}{{{f{dDl}}}h}{{{f{{Aj{A`}}}}}{{Af{{Ab{A`}}Bl}}}}","D":"AA`","p":[[5,"KeyUsage",3],[0,"mut"],[1,"reference"],[1,"unit"],[1,"u16"],[1,"bool"],[5,"CoseKey",251],[1,"u8"],[5,"Vec",252],[1,"str"],[6,"Result",253],[8,"VerifyingKey",254],[1,"slice"],[1,"array"],[17,"Item"],[10,"IntoIterator",255],[5,"Formatter",256],[8,"Result",256],[6,"Option",257],[8,"SigningKey",254],[1,"tuple"],[5,"String",258],[8,"ClaimName",259],[6,"Value",260],[5,"CoseSign1",261],[6,"CoseError",262],[5,"ClaimsSet",259],[5,"Iter",263],[5,"IterNames",263],[5,"TypeId",264],[5,"LayerEvidence",96],[5,"ApplicationKeys",96],[6,"TeePlatform",96],[5,"RootLayerEvidence",96],[5,"Evidence",96],[5,"CertificateAuthority",96],[5,"CompoundDeviceIdentifier",96],[5,"ApplicationPrivateKeys",96],[5,"Error",256],[1,"u64"],[5,"RestrictedKernelDiceData",96],[5,"Stage0DiceData",96]],"r":[],"b":[[38,"impl-KeyUsage"],[39,"impl-Flags-for-KeyUsage"],[56,"impl-Binary-for-KeyUsage"],[57,"impl-Octal-for-KeyUsage"],[58,"impl-LowerHex-for-KeyUsage"],[59,"impl-UpperHex-for-KeyUsage"],[60,"impl-Debug-for-KeyUsage"],[63,"impl-Flags-for-KeyUsage"],[64,"impl-KeyUsage"],[172,"impl-Display-for-TeePlatform"],[173,"impl-Debug-for-TeePlatform"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHMAEAAHAAUAFQACACgAAAArAAQAOQAEAEAAAABPAAAAWgAAAFwAAgBnAAAAfAAUAJIAEwCrAAMAugACAM8AAQDUACYA"}],["oak_enclave_runtime_support",{"t":"CHFFNNNNNNNNNNNNNNNNNNNNN","n":["heap","init","GrowableHeap","LockedGrowableHeap","alloc","allocate","borrow","","borrow_mut","","dealloc","deallocate","deref","empty","","from","","into","","try_from","","try_into","","type_id",""],"q":[[0,"oak_enclave_runtime_support"],[2,"oak_enclave_runtime_support::heap"],[25,"core::alloc::layout"],[26,"core::ptr::non_null"],[27,"core::result"],[28,"spinning_top::spinlock"],[29,"core::any"]],"i":"````dn0101101010101010101","f":"`{{}b}``{{{f{d}}h}j}{{{f{ln}}h}{{Ab{{A`{j}}b}}}}{f{{f{c}}}{}}0{{{f{l}}}{{f{lc}}}{}}0{{{f{d}}jh}b}{{{f{ln}}{A`{j}}Ad}b}{{{f{d}}}{{f{{Af{n}}}}}}{{}n}{{}d}{cc{}}0{{}c{}}0{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{fAh}0","D":"A`","p":[[1,"unit"],[5,"LockedGrowableHeap",2],[1,"reference"],[5,"Layout",25],[1,"u8"],[0,"mut"],[5,"GrowableHeap",2],[5,"NonNull",26],[6,"Result",27],[1,"usize"],[8,"Spinlock",28],[5,"TypeId",29]],"r":[],"b":[],"c":"OjAAAAEAAAAAAAAAEAAAAAIA","e":"OzAAAAEAABEABQAAAAAAAgAAAAUABgANAAIAFAAFAA=="}],["oak_file_utils",{"t":"H","n":["data_path"],"q":[[0,"oak_file_utils"],[1,"std::path"],[2,"core::convert"]],"i":"`","f":"{cb{{f{d}}}}","D":"b","p":[[5,"PathBuf",1],[5,"Path",1],[10,"AsRef",2]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],["oak_functions_abi",{"t":"PPPPSFFGPPNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHONONNNNNNNNNNNNN","n":["BadRequest","InternalServerError","PolicySizeViolation","PolicyTimeViolation","RESPONSE_BODY_OFFSET","Request","Response","StatusCode","Success","Unspecified","body","","","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","create","decode","encode_to_vec","eq","","","fmt","","","","from","","","from_repr","into","","","invoke","length","pad","status","to_owned","","","to_string","try_from","","","try_into","","","type_id","",""],"q":[[0,"oak_functions_abi"],[62,"core::num::error"],[63,"core::result"],[64,"alloc::vec"],[65,"anyhow"],[66,"core::fmt"],[67,"core::option"],[68,"alloc::string"],[69,"core::any"]],"i":"Ab000````00bA`101201201201201211101201220122012`1110122012012012","f":"``````````{{{d{b}}}{{l{{d{{h{f}}}}j}}}}``{d{{d{c}}}{}}00{{{d{n}}}{{d{nc}}}{}}00{{{d{A`}}}A`}{{{d{b}}}b}{{{d{Ab}}}Ab}{{d{d{nc}}}Ad{}}00{dAd}00{{Ab{Af{f}}}b}{{{d{{h{f}}}}}{{Ah{b}}}}{{{d{b}}}{{Af{f}}}}{{{d{A`}}{d{A`}}}Aj}{{{d{b}}{d{b}}}Aj}{{{d{Ab}}{d{Ab}}}Aj}{{{d{A`}}{d{nAl}}}An}{{{d{b}}{d{nAl}}}An}{{{d{Ab}}{d{nAl}}}An}{{{d{Ab}}{d{nAl}}}{{l{AdB`}}}}{cc{}}00{Bb{{Bd{Ab}}}}{{}c{}}00``{{{d{b}}Bf}{{Ah{b}}}}`{dc{}}00{dBh}{c{{l{e}}}{}{}}00{{}{{l{c}}}{}}00{dBj}00","D":"Bb","p":[[5,"Response",0],[1,"reference"],[1,"u8"],[1,"slice"],[5,"TryFromIntError",62],[6,"Result",63],[0,"mut"],[5,"Request",0],[6,"StatusCode",0],[1,"unit"],[5,"Vec",64],[8,"Result",65],[1,"bool"],[5,"Formatter",66],[8,"Result",66],[5,"Error",66],[1,"u32"],[6,"Option",67],[1,"usize"],[5,"String",68],[5,"TypeId",69]],"r":[],"b":[[36,"impl-Debug-for-StatusCode"],[37,"impl-Display-for-StatusCode"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC0ABgABAAQACQABAAwAAAAOAA4AHgAIADEADQA="}],["oak_functions_client",{"t":"FNNNNNNNNNNN","n":["OakFunctionsClient","borrow","borrow_mut","from","into","into_request","invoke","new","try_from","try_into","type_id","vzip"],"q":[[0,"oak_functions_client"],[12,"tonic::request"],[13,"alloc::vec"],[14,"micro_rpc::status"],[15,"core::result"],[16,"oak_client::verifier"],[17,"anyhow"],[18,"core::any"]],"i":"`h0000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{cc{}}{{}c{}}{{}{{f{c}}}{}}{{{b{dh}}{b{{l{j}}}}}{{Ab{{n{j}}A`}}}}{{{b{Ad}}{b{Af}}}{{Ah{h}}}}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bAj}6","D":"d","p":[[1,"reference"],[0,"mut"],[5,"Request",12],[5,"OakFunctionsClient",0],[1,"u8"],[1,"slice"],[5,"Vec",13],[5,"Status",14],[6,"Result",15],[1,"str"],[10,"AttestationVerifier",16],[8,"Result",17],[5,"TypeId",18]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAoAAgAAAAMABgAGAA=="}],["oak_functions_sdk",{"t":"HQHHHHHH","n":["alloc","log","read_request","storage_get_item","storage_get_items","testing","write_log_message","write_response"],"q":[[0,"oak_functions_sdk"],[8,"alloc::vec"],[9,"micro_rpc::status"],[10,"core::result"],[11,"core::option"],[12,"core::iter::traits::collect"],[13,"core::convert"]],"i":"````````","f":"{bd}`{{}{{j{{f{d}}h}}}}{{{n{{l{d}}}}}{{j{{A`{{f{d}}}}h}}}}{c{{j{{f{{A`{{f{d}}}}}}h}}}Ab}{{{n{{l{d}}}}Ad}{{j{{f{d}}h}}}}{c{{j{Afh}}}{{Aj{Ah}}}}{{{n{{l{d}}}}}{{j{Afh}}}}","D":"A`","p":[[1,"u32"],[1,"u8"],[5,"Vec",8],[5,"Status",9],[6,"Result",10],[1,"slice"],[1,"reference"],[6,"Option",11],[10,"IntoIterator",12],[1,"bool"],[1,"unit"],[1,"str"],[10,"AsRef",13]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAEA"}],["oak_functions_sdk_abi_test_get_storage_item",{"t":"H","n":["main"],"q":[[0,"oak_functions_sdk_abi_test_get_storage_item"]],"i":"`","f":"{{}b}","D":"b","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAEA"}],["oak_functions_sdk_abi_test_invoke_testing",{"t":"H","n":["main"],"q":[[0,"oak_functions_sdk_abi_test_invoke_testing"]],"i":"`","f":"{{}b}","D":"b","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAEA"}],["oak_functions_service",{"t":"KRRKMCCCCMCMMFNNNNNNNNNNNNNNNNNNNPPPGKFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNHNNNNNNNNNNNFFNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNSIISSFKKFFCNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNMNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNN","n":["Handler","HandlerConfig","HandlerType","Observer","handle_invoke","instance","logger","lookup","lookup_htbl","new_handler","wasm","wasm_initialization","wasm_invocation","OakFunctionsInstance","abort_next_lookup_data","as_any","as_any_mut","borrow","borrow_mut","extend_lookup_data_chunk","extend_next_lookup_data","finish_next_lookup_data","from","handle_user_request","into","into_any","into_any_arc","into_any_rc","new","reserve","try_from","try_into","type_id","Debug","Error","Info","Level","OakLogger","StandaloneLogger","Trace","Warn","as_any","","as_any_mut","","as_str","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","cmp","eq","","equivalent","fmt","","from","","from_str","hash","into","","into_any","","into_any_arc","","into_any_rc","","iter","log_public","","log_sensitive","","max","partial_cmp","","to_level_filter","to_owned","to_string","try_from","","try_into","","type_id","","LookupData","LookupDataManager","abort_next_lookup_data","as_any","","as_any_mut","","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","create_lookup_data","extend_next_lookup_data","finish_next_lookup_data","for_test","format_bytes","from","","get","insert","into","","into_any","","into_any_arc","","into_any_rc","","is_empty","len","limit","log_debug","log_error","new_empty","reserve","to_owned","try_from","","try_into","","type_id","","LookupHtbl","LookupHtblIter","as_any","","as_any_mut","","borrow","","borrow_mut","","contains_key","default","extend","from","","get","hash","insert","into","","into_any","","into_any_arc","","into_any_rc","","into_iter","","is_empty","iter","len","next","reserve","try_from","","try_into","","type_id","","ALLOC_FUNCTION_NAME","AbiPointer","AbiPointerOffset","MAIN_FUNCTION_NAME","MEMORY_NAME","UserState","WasmApi","WasmApiFactory","WasmConfig","WasmHandler","api","as_any","","","as_any_mut","","","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","create","create_wasm_api","default","from","","","handle_invoke","into","","","into_any","","","into_any_arc","","into_any_rc","","","new_handler","to_owned","transport","try_from","","","try_into","","","type_id","","","StdWasmApiFactory","StdWasmApiImpl","as_any","","as_any_mut","","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","create_wasm_api","from","","into","","into_any","","into_any_arc","into_any_rc","","log","lookup_data","lookup_data_manager","lookup_data_multi","read_request","test","to_owned","transport","try_from","","try_into","","type_id","","write_response"],"q":[[0,"oak_functions_service"],[13,"oak_functions_service::instance"],[33,"oak_functions_service::logger"],[88,"oak_functions_service::lookup"],[133,"oak_functions_service::lookup_htbl"],[172,"oak_functions_service::wasm"],[228,"oak_functions_service::wasm::api"],[266,"oak_functions_abi"],[267,"micro_rpc::status"],[268,"core::result"],[269,"core::default"],[270,"core::marker"],[271,"core::clone"],[272,"alloc::sync"],[273,"core::option"],[274,"anyhow"],[275,"core::time"],[276,"oak_proto_rust::oak::functions"],[277,"core::any"],[278,"alloc::vec"],[279,"alloc::boxed"],[280,"alloc::rc"],[281,"log"],[282,"core::cmp"],[283,"core::fmt"],[284,"core::hash"],[285,"core::iter::traits::iterator"],[286,"alloc::string"],[287,"core::iter::traits::collect"],[288,"core::cell"],[289,"micro_rpc"],[290,"oak_proto_rust::oak::functions::wasm::v1"]],"i":"`f0`0````0`Bb0`Bl000000000000000000Dn00```00Fd101101011111111110111010101011Fb101222222121212``An0Fh1010100001111`10011010101000`00110101010``GdGb101010000100`0101010101000010101010```````````InGjGf2102102100001Gh132123213212132121Gn432432432``HdHb1010100001101010110001000001010100","f":"````{{{h{{f{}{{b{c}}{d{e}}}}}}j}{{A`{ln}}}f{AbAdAfAh}}````{{c{h{{Al{Aj}}}}{B`{An}}{Bd{{B`{Bb}}}}}{{Bf{e}}}{}{}}`{{{h{Bb}}Bh}Bj}0`{{{h{{Bl{c}}}}Bn}{{A`{C`n}}}f}{h{{h{Cb}}}}{{{h{Cd}}}{{h{CdCb}}}}{h{{h{c}}}{}}{{{h{Cd}}}{{h{Cdc}}}{}}{{{h{{Bl{c}}}}Cf}{{A`{Bjn}}}f}{{{h{{Bl{c}}}}Ch}{{A`{Cjn}}}f}{{{h{{Bl{c}}}}Cl}{{A`{Cnn}}}f}{cc{}}{{{h{{Bl{c}}}}{D`{Aj}}}{{A`{{D`{Aj}}n}}}f}{{}c{}}{{{Db{c}}}{{Db{Cb}}}{}}{{{B`{c}}}{{B`{Cb}}}{}}{{{Dd{c}}}{{Dd{Cb}}}{}}{{{h{Df}}{Bd{{B`{Bb}}}}}{{A`{{Bl{c}}n}}}f}{{{h{{Bl{c}}}}Dh}{{A`{Djn}}}f}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{hDl}````````{h{{h{Cb}}}}0{{{h{Cd}}}{{h{CdCb}}}}0{{{h{Dn}}}{{h{E`}}}}{h{{h{c}}}{}}0{{{h{Cd}}}{{h{Cdc}}}{}}0{{{h{Dn}}}Dn}{{h{h{Cdc}}}Bj{}}{hBj}{{{h{Dn}}{h{Dn}}}Eb}{{{h{Dn}}{h{Dn}}}Ed}{{{h{Dn}}{h{Ef}}}Ed}{{h{h{c}}}Ed{}}{{{h{Dn}}{h{CdEh}}}{{A`{BjEj}}}}0{cc{}}0{{{h{E`}}}{{A`{Dn}}}}{{{h{Dn}}{h{Cdc}}}BjEl}{{}c{}}0{{{Db{c}}}{{Db{Cb}}}{}}0{{{B`{c}}}{{B`{Cb}}}{}}0{{{Dd{c}}}{{Dd{Cb}}}{}}0{{}{{`{{F`{}{{En{Dn}}}}}}}}{{{h{Fb}}Dn{h{E`}}}Bj}{{{h{Fd}}Dn{h{E`}}}Bj}10{{}Dn}{{{h{Dn}}{h{Dn}}}{{Bd{Eb}}}}{{{h{Dn}}{h{Ef}}}{{Bd{Eb}}}}{{{h{Dn}}}Ef}{hc{}}{hFf}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hDl}0``{{{h{An}}}Bj}{h{{h{Cb}}}}0{{{h{Cd}}}{{h{CdCb}}}}0{h{{h{c}}}{}}0{{{h{Cd}}}{{h{Cdc}}}{}}0{{{h{Fh}}}Fh}{{h{h{Cdc}}}Bj{}}{hBj}{{{h{An}}}Fh}{{{h{An}}c}Bj{{Fl{}{{En{{Fj{{h{{Al{Aj}}}}{h{{Al{Aj}}}}}}}}}}}}9{{{D`{{Fj{{D`{Aj}}{D`{Aj}}}}}}{B`{Fb}}}An}{{{h{{Al{Aj}}}}}Ff}{cc{}}0{{{h{Fh}}{h{{Al{Aj}}}}}{{Bd{{h{{Al{Aj}}}}}}}}{{{h{An}}{h{{Al{Aj}}}}{h{{Al{Aj}}}}}Bj}{{}c{}}0{{{Db{c}}}{{Db{Cb}}}{}}0{{{B`{c}}}{{B`{Cb}}}{}}0{{{Dd{c}}}{{Dd{Cb}}}{}}0{{{h{Fh}}}Ed}{{{h{Fh}}}Fn}{{{h{{Al{c}}}}Fn}{{h{{Al{c}}}}}{}}{{{h{Fh}}{h{E`}}}Bj}0{{{B`{Fb}}}An}{{{h{An}}G`}{{Bf{Bj}}}}{hc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hDl}0``{h{{h{Cb}}}}0{{{h{Cd}}}{{h{CdCb}}}}0{h{{h{c}}}{}}0{{{h{Cd}}}{{h{Cdc}}}{}}0{{{h{Gb}}{h{{Al{Aj}}}}}Ed}{{}Gb}{{{h{CdGb}}c}Bj{{Fl{}{{En{{Fj{{h{{Al{Aj}}}}{h{{Al{Aj}}}}}}}}}}}}{cc{}}0{{{h{Gb}}{h{{Al{Aj}}}}}{{Bd{{h{{Al{Aj}}}}}}}}{{{h{{Al{Aj}}}}G`}G`}{{{h{CdGb}}{h{{Al{Aj}}}}{h{{Al{Aj}}}}}{{Bd{{h{{Al{Aj}}}}}}}}{{}c{}}0{{{Db{c}}}{{Db{Cb}}}{}}0{{{B`{c}}}{{B`{Cb}}}{}}0{{{Dd{c}}}{{Dd{Cb}}}{}}03{{{h{Gb}}}c{}}{{{h{Gb}}}Ed}{{{h{Gb}}}Gd}{{{h{Gb}}}Fn}{{{h{CdGd}}}{{Bd{c}}}{}}{{{h{CdGb}}Fn}Bj}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hDl}0```````````{h{{h{Cb}}}}00{{{h{Cd}}}{{h{CdCb}}}}00{h{{h{c}}}{}}00{{{h{Cd}}}{{h{Cdc}}}{}}00{{{h{Gf}}}Gf}{{h{h{Cdc}}}Bj{}}{hBj}{{{h{{Al{Aj}}}}{B`{Gh}}{B`{Fb}}{Bd{{B`{Bb}}}}}{{Bf{Gj}}}}{{{h{Gh}}{D`{Aj}}{Dd{{Gl{{D`{Aj}}}}}}}{{Db{Gn}}}}{{}Gf}{cc{}}00{{{h{Gj}}j}{{A`{ln}}}}{{}c{}}00{{{Db{c}}}{{Db{Cb}}}{}}00{{{B`{c}}}{{B`{Cb}}}{}}0{{{Dd{c}}}{{Dd{Cb}}}{}}00{{Gf{h{{Al{Aj}}}}{B`{An}}{Bd{{B`{Bb}}}}}{{Bf{Gj}}}}{hc{}}{{{h{CdGn}}}{{Db{H`}}}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{hDl}00``{h{{h{Cb}}}}0{{{h{Cd}}}{{h{CdCb}}}}0{h{{h{c}}}{}}0{{{h{Cd}}}{{h{Cdc}}}{}}0{{{h{Hb}}}Hb}{{h{h{Cdc}}}Bj{}}{hBj}{{{h{Hd}}{D`{Aj}}{Dd{{Gl{{D`{Aj}}}}}}}{{Db{Gn}}}}{cc{}}0{{}c{}}0{{{Db{c}}}{{Db{Cb}}}{}}0{{{B`{c}}}{{B`{Cb}}}{}}{{{Dd{c}}}{{Dd{Cb}}}{}}0{{{h{CdHb}}Hf}{{A`{Hhn}}}}{{{h{CdHb}}Hj}{{A`{Hln}}}}`{{{h{CdHb}}Hn}{{A`{I`n}}}}{{{h{CdHb}}Ib}{{A`{Idn}}}}{{{h{CdHb}}If}{{A`{Ihn}}}}{hc{}}{{{h{CdHb}}}{{Db{H`}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{hDl}0{{{h{CdHb}}Ij}{{A`{Iln}}}}","D":"If","p":[[17,"HandlerType"],[17,"HandlerConfig"],[10,"Handler",0],[1,"reference"],[5,"Request",266],[5,"Response",266],[5,"Status",267],[6,"Result",268],[10,"Default",269],[10,"Send",270],[10,"Sync",270],[10,"Clone",271],[1,"u8"],[1,"slice"],[5,"LookupDataManager",88],[5,"Arc",272],[10,"Observer",0],[6,"Option",273],[8,"Result",274],[5,"Duration",275],[1,"unit"],[5,"OakFunctionsInstance",13],[5,"Empty",276],[5,"AbortNextLookupDataResponse",276],[10,"Any",277],[0,"mut"],[5,"LookupDataChunk",276],[5,"ExtendNextLookupDataRequest",276],[5,"ExtendNextLookupDataResponse",276],[5,"FinishNextLookupDataRequest",276],[5,"FinishNextLookupDataResponse",276],[5,"Vec",278],[5,"Box",279],[5,"Rc",280],[5,"InitializeRequest",276],[5,"ReserveRequest",276],[5,"ReserveResponse",276],[5,"TypeId",277],[6,"Level",33,281],[1,"str"],[6,"Ordering",282],[1,"bool"],[6,"LevelFilter",281],[5,"Formatter",283],[5,"Error",283],[10,"Hasher",284],[17,"Item"],[10,"Iterator",285],[10,"OakLogger",33],[5,"StandaloneLogger",33],[5,"String",286],[5,"LookupData",88],[1,"tuple"],[10,"IntoIterator",287],[1,"usize"],[1,"u64"],[5,"LookupHtbl",133],[5,"LookupHtblIter",133],[5,"WasmConfig",172],[10,"WasmApiFactory",172],[5,"WasmHandler",172],[5,"Cell",288],[10,"WasmApi",172],[10,"Transport",289],[5,"StdWasmApiImpl",228],[5,"StdWasmApiFactory",228],[5,"LogRequest",290],[5,"LogResponse",290],[5,"LookupDataRequest",290],[5,"LookupDataResponse",290],[5,"LookupDataMultiRequest",290],[5,"LookupDataMultiResponse",290],[5,"ReadRequestRequest",290],[5,"ReadRequestResponse",290],[5,"TestRequest",290],[5,"TestResponse",290],[5,"WriteResponseRequest",290],[5,"WriteResponseResponse",290],[5,"UserState",172]],"r":[[36,281]],"b":[[54,"impl-PartialEq-for-Level"],[55,"impl-PartialEq%3CLevelFilter%3E-for-Level"],[57,"impl-Display-for-Level"],[58,"impl-Debug-for-Level"],[77,"impl-PartialOrd-for-Level"],[78,"impl-PartialOrd%3CLevelFilter%3E-for-Level"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAL8AHwAAAAQABgACAAoAAAAMAAIAEAAEABoAAgAeAAMAJgAAACoAAwAvAAwAPgABAEIABQBKAAAATAAAAE4AAQBRAAcAWwALAGgAAQBvAAAAcgAFAH4AEQCRAAAAlgAAAJoABwClAAAApwAFALUAFADNAAAA0QATAOcACwD3ABMA"}],["oak_functions_test_utils",{"t":"FFJJJFHHNNNNNNHHNHNNNNNNNNNNHNHHHHHHHHNNNNNNNNNNNNNHH","n":["Background","BackgroundHandle","MOCK_LOOKUP_DATA_PATH","OAK_RESTRICTED_KERNEL_WRAPPER_BIN","STAGE0","Term","assert_response_body","background","borrow","","","borrow_mut","","","create_client","create_test_lookup_data","drop","free_port","from","","","into","","","into_future","into_request","","","make_request","poll","run_cc_client","run_java_client","run_oak_functions_containers_example_in_background","run_oak_functions_example_in_background","rust_crate_enclave_out_path","rust_crate_wasm_out_path","serialize_entries","skip_test","terminate_and_join","try_from","","","try_into","","","type_id","","","vzip","","","workspace_path","write_to_temp_file"],"q":[[0,"oak_functions_test_utils"],[53,"oak_functions_abi"],[54,"core::future::future"],[55,"core::marker"],[56,"core::ops::function"],[57,"core::time"],[58,"oak_functions_client"],[59,"ubyte::byte_unit"],[60,"alloc::vec"],[61,"std::collections::hash::map"],[62,"tonic::request"],[63,"core::pin"],[64,"core::task::wake"],[65,"core::task::poll"],[66,"std::process"],[67,"std::io::error"],[68,"std::path"],[69,"core::convert"],[70,"std::ffi::os_str"],[71,"alloc::string"],[72,"core::result"],[73,"core::any"],[74,"tempfile::file"]],"i":"````````jA`Bh210``0`2102101210`1````````2210210210210``","f":"``````{{b{f{d}}}h}{ej{ln}{{Ad{A`}{{Ab{c}}}}}}{f{{f{c}}}{}}00{{{f{Af}}}{{f{Afc}}}{}}00{{AhAj}Al}{{AnB`}{{Bf{{Bd{Bb}}{Bd{Bb}}}}}}{{{f{AfBh}}}h}{{}Ah}{cc{}}00{{}c{}}00{{}}{{}{{Bj{c}}}{}}00{{Ah{f{{Bl{Bb}}}}}{{Bd{Bb}}}}{{{Bn{{f{AfA`}}}}{f{AfC`}}}{{Cb{h}}}}{{{f{d}}{f{d}}}{{Cf{Cd}}}}{{{f{d}}}{{Cf{Cd}}}}{{ceg}{{Ch{BhAh}}}{{Cl{Cj}}}{{Cl{Cj}}}{{Cl{Cn}}}}{{{f{d}}{f{d}}}{{Ch{BhAh}}}}{{{f{d}}}D`}0{{{Bf{{Bd{Bb}}{Bd{Bb}}}}}{{Bd{Bb}}}}{{}Db}{{{j{c}}}c{}}{c{{Dd{e}}}{}{}}00{{}{{Dd{c}}}{}}00{fDf}00???{{{f{{Bl{{f{d}}}}}}}Dh}{{{f{{Bl{Bb}}}}}Dj}","D":"Bb","p":[[5,"Response",53],[1,"str"],[1,"reference"],[1,"unit"],[5,"Background",0],[10,"Future",54],[10,"Send",55],[5,"Term",0],[17,"Output"],[10,"FnOnce",56],[0,"mut"],[1,"u16"],[5,"Duration",57],[5,"OakFunctionsClient",58],[5,"ByteUnit",59],[1,"u32"],[1,"u8"],[5,"Vec",60],[5,"HashMap",61],[5,"BackgroundHandle",0],[5,"Request",62],[1,"slice"],[5,"Pin",63],[5,"Context",64],[6,"Poll",65],[5,"Output",66],[8,"Result",67],[1,"tuple"],[5,"Path",68],[10,"AsRef",69],[5,"OsStr",70],[5,"String",71],[1,"bool"],[6,"Result",72],[5,"TypeId",73],[5,"PathBuf",68],[5,"NamedTempFile",74]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACQABwADAAIABwAAAAkABQAQAAIAGQAHACMAAQAoAA0A"}],["oak_grpc",{"t":"CCCCCCCCCCCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNRRKFNNNNNNNNNNNNMMMMNNNNNNMNNMNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNKFNNNNNNNNNNNNMMNNNNNNMNNNNNNNNNCCCCFNNNNNNNNNNNNNNNNNNNNNNNNNKFNNNNNNNNNNNNMMNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNKFNNNNNNNNMNNNNNNNNNNNNNMNNNNNNCCFNNNNNNNNNNNNNNNNNNNNNNNNKFNNNNNNNNMNNNNNNNNNNNNNNNNNNNCCFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFMNNNNNNNNMMNNNNMMNNNNNNNNMNMNNNNNNCCCFNNNNNNNNNNNNNNNNNNNNNNNNKFNNNNNNNNNNNNMNNNNNNNNNNNNNNNCCCFNNNNNNNNNNNNNNNNNNNNNNNNRKFNNNNNNNNNNNNNNNNNNNNNMNNNNNN","n":["oak","containers","debug","functions","key_provisioning","session","launcher_client","launcher_server","orchestrator_client","orchestrator_server","v1","LauncherClient","accept_compressed","borrow","borrow_mut","clone","clone_into","clone_to_uninit","connect","fmt","from","from_ref","get_application_config","get_container_bundle","get_endorsements","get_oak_system_image","into","into_request","max_decoding_message_size","max_encoding_message_size","new","notify_app_ready","send_attestation_evidence","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","GetContainerBundleStream","GetOakSystemImageStream","Launcher","LauncherServer","accept_compressed","borrow","borrow_mut","call","","clone","clone_into","clone_to_uninit","fmt","from","from_arc","from_ref","get_application_config","get_container_bundle","get_endorsements","get_oak_system_image","into","into_make_service","into_request","max_decoding_message_size","max_encoding_message_size","new","notify_app_ready","poll_ready","","send_attestation_evidence","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","OrchestratorClient","accept_compressed","borrow","borrow_mut","clone","clone_into","clone_to_uninit","connect","fmt","from","from_ref","get_application_config","get_endorsed_evidence","into","into_request","max_decoding_message_size","max_encoding_message_size","new","notify_app_ready","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","Orchestrator","OrchestratorServer","accept_compressed","borrow","borrow_mut","call","","clone","clone_into","clone_to_uninit","fmt","from","from_arc","from_ref","get_application_config","get_endorsed_evidence","into","into_make_service","into_request","max_decoding_message_size","max_encoding_message_size","new","notify_app_ready","poll_ready","","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","hostlib_key_provisioning_client","hostlib_key_provisioning_server","orchestrator_crypto_client","orchestrator_crypto_server","HostlibKeyProvisioningClient","accept_compressed","borrow","borrow_mut","clone","clone_into","clone_to_uninit","connect","fmt","from","from_ref","get_group_keys","get_key_provisioning_role","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","HostlibKeyProvisioning","HostlibKeyProvisioningServer","accept_compressed","borrow","borrow_mut","call","","clone","clone_into","clone_to_uninit","fmt","from","from_arc","from_ref","get_group_keys","get_key_provisioning_role","into","into_make_service","into_request","max_decoding_message_size","max_encoding_message_size","new","poll_ready","","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","OrchestratorCryptoClient","accept_compressed","borrow","borrow_mut","clone","clone_into","clone_to_uninit","connect","derive_session_keys","fmt","from","from_ref","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","sign","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","OrchestratorCrypto","OrchestratorCryptoServer","accept_compressed","borrow","borrow_mut","call","","clone","clone_into","clone_to_uninit","derive_session_keys","fmt","from","from_arc","from_ref","into","into_make_service","into_request","max_decoding_message_size","max_encoding_message_size","new","poll_ready","","send_compressed","sign","to_owned","try_from","try_into","type_id","vzip","with_interceptor","debug_service_client","debug_service_server","DebugServiceClient","accept_compressed","borrow","borrow_mut","clone","clone_into","clone_to_uninit","connect","cpu_profile","fmt","from","from_ref","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","DebugService","DebugServiceServer","accept_compressed","borrow","borrow_mut","call","","clone","clone_into","clone_to_uninit","cpu_profile","fmt","from","from_arc","from_ref","into","into_make_service","into_request","max_decoding_message_size","max_encoding_message_size","new","poll_ready","","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","oak_functions_client","oak_functions_server","OakFunctionsClient","abort_next_lookup_data","accept_compressed","borrow","borrow_mut","clone","clone_into","clone_to_uninit","connect","extend_next_lookup_data","finish_next_lookup_data","fmt","from","from_ref","handle_user_request","initialize","into","into_request","max_decoding_message_size","max_encoding_message_size","new","reserve","send_compressed","stream_lookup_data","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","OakFunctions","OakFunctionsServer","abort_next_lookup_data","accept_compressed","borrow","borrow_mut","call","","clone","clone_into","clone_to_uninit","extend_next_lookup_data","finish_next_lookup_data","fmt","from","from_arc","from_ref","handle_user_request","initialize","into","into_make_service","into_request","max_decoding_message_size","max_encoding_message_size","new","poll_ready","","reserve","send_compressed","stream_lookup_data","to_owned","try_from","try_into","type_id","vzip","with_interceptor","v1","key_provisioning_client","key_provisioning_server","KeyProvisioningClient","accept_compressed","borrow","borrow_mut","clone","clone_into","clone_to_uninit","connect","fmt","from","from_ref","get_group_keys","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","KeyProvisioning","KeyProvisioningServer","accept_compressed","borrow","borrow_mut","call","","clone","clone_into","clone_to_uninit","fmt","from","from_arc","from_ref","get_group_keys","into","into_make_service","into_request","max_decoding_message_size","max_encoding_message_size","new","poll_ready","","send_compressed","to_owned","try_from","try_into","type_id","vzip","with_interceptor","v1","streaming_session_client","streaming_session_server","StreamingSessionClient","accept_compressed","borrow","borrow_mut","clone","clone_into","clone_to_uninit","connect","fmt","from","from_ref","into","into_request","max_decoding_message_size","max_encoding_message_size","new","send_compressed","stream","to_owned","try_from","try_into","type_id","vzip","with_interceptor","with_origin","StreamStream","StreamingSession","StreamingSessionServer","accept_compressed","borrow","borrow_mut","call","","clone","clone_into","clone_to_uninit","fmt","from","from_arc","from_ref","into","into_make_service","into_request","max_decoding_message_size","max_encoding_message_size","new","poll_ready","","send_compressed","stream","to_owned","try_from","try_into","type_id","vzip","with_interceptor"],"q":[[0,"oak_grpc"],[1,"oak_grpc::oak"],[6,"oak_grpc::oak::containers"],[11,"oak_grpc::oak::containers::launcher_client"],[41,"oak_grpc::oak::containers::launcher_server"],[78,"oak_grpc::oak::containers::orchestrator_client"],[105,"oak_grpc::oak::containers::orchestrator_server"],[137,"oak_grpc::oak::containers::v1"],[141,"oak_grpc::oak::containers::v1::hostlib_key_provisioning_client"],[167,"oak_grpc::oak::containers::v1::hostlib_key_provisioning_server"],[198,"oak_grpc::oak::containers::v1::orchestrator_crypto_client"],[224,"oak_grpc::oak::containers::v1::orchestrator_crypto_server"],[255,"oak_grpc::oak::debug"],[257,"oak_grpc::oak::debug::debug_service_client"],[282,"oak_grpc::oak::debug::debug_service_server"],[312,"oak_grpc::oak::functions"],[314,"oak_grpc::oak::functions::oak_functions_client"],[345,"oak_grpc::oak::functions::oak_functions_server"],[381,"oak_grpc::oak::key_provisioning"],[382,"oak_grpc::oak::key_provisioning::v1"],[384,"oak_grpc::oak::key_provisioning::v1::key_provisioning_client"],[409,"oak_grpc::oak::key_provisioning::v1::key_provisioning_server"],[439,"oak_grpc::oak::session"],[440,"oak_grpc::oak::session::v1"],[442,"oak_grpc::oak::session::v1::streaming_session_client"],[467,"oak_grpc::oak::session::v1::streaming_session_server"],[498,"tonic::codec::compression"],[499,"tonic::body"],[500,"tonic::client::service"],[501,"core::clone"],[502,"tonic::transport::channel"],[503,"tonic::transport::error"],[504,"core::result"],[505,"tonic::transport::channel::endpoint"],[506,"core::convert"],[507,"core::fmt"],[508,"oak_proto_rust::oak::containers"],[509,"tonic::response"],[510,"tonic::status"],[511,"tonic::request"],[512,"tonic::codec::decode"],[513,"oak_proto_rust::oak::attestation::v1"],[514,"core::any"],[515,"tonic::service::interceptor"],[516,"http::request"],[517,"http::response"],[518,"tower_service"],[519,"http::uri"],[520,"http_body"],[521,"core::marker"],[522,"alloc::sync"],[523,"core::future::future"],[524,"alloc::boxed"],[525,"core::pin"],[526,"futures_core::stream"],[527,"axum::routing::into_make_service"],[528,"core::task::wake"],[529,"core::task::poll"],[530,"oak_proto_rust::oak::session::v1"],[531,"oak_proto_rust::oak::containers::v1"],[532,"oak_proto_rust::oak::debug"],[533,"oak_proto_rust::oak::functions"],[534,"oak_proto_rust::oak::key_provisioning::v1"]],"i":"````````````b0000000000000000000000000000Dh0``Df00000000000111100000010010000000`Fd0000000000000000000000000``Fh00000000000Fj01111110111111111`````Fl000000000000000000000000``Gb00000000000Gd0111111111111111`Gf000000000000000000000000``H`0000000Hb11111111111110111111```Hd00000000000000000000000``Hj0000000Hl1111111111111111111```Hn00000000000000000000000000000``JnK`00000001100001100000000101000000````Kb00000000000000000000000``Kh00000000000Kj111111111111111````Kl00000000000000000000000Ld``Lb000000000000000000001000000","f":"````````````{{{b{c}}d}{{b{c}}}{{h{f}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{b{c}}}}}{{b{c}}}n}{{j{j{lc}}}A`{}}{jA`}{c{{Af{{b{Ab}}Ad}}}{{Aj{Ah}}}}{{{j{{b{c}}}}{j{lAl}}}AnB`}{cc{}}{{{j{c}}}c{}}{{{j{l{b{c}}}}e}{{Af{{Bd{Bb}}Bf}}}{{h{f}}}{{Bh{A`}}}}{{{j{l{b{c}}}}e}{{Af{{Bd{{Bl{Bj}}}}Bf}}}{{h{f}}}{{Bh{A`}}}}{{{j{l{b{c}}}}e}{{Af{{Bd{Bn}}Bf}}}{{h{f}}}{{Bh{A`}}}}1{{}c{}}{{}{{C`{c}}}{}}{{{b{c}}Cb}{{b{c}}}{{h{f}}}}0{c{{b{c}}}{{h{f}}}}{{{j{l{b{c}}}}e}{{Af{{Bd{A`}}Bf}}}{{h{f}}}{{Bh{A`}}}}{{{j{l{b{c}}}}e}{{Af{{Bd{A`}}Bf}}}{{h{f}}}{{Bh{Cd}}}}{{{b{c}}d}{{b{c}}}{{h{f}}}}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}:{{ce}{{b{{Ch{ce}}}}}{{D`{{Cj{f}}}{{Cl{Cn}}}}{h{f}}}Db}{{cDd}{{b{c}}}{{h{f}}}}````{{{Df{c}}d}{{Df{c}}}Dh}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{l}}{Cj{c}}}{}{}}{{{j{l{Df{c}}}}{Cj{e}}}gDh{DjDl}{}}{{{j{{Df{c}}}}}{{Df{c}}}Dh}{{j{j{lc}}}A`{}}{jA`}{{{j{{Df{c}}}}{j{lAl}}}An{B`Dh}}{cc{}}{{{Dn{c}}}{{Df{c}}}Dh}{{{j{c}}}c{}}{{{j{{Dh{}{{E`{c}}{Eb{e}}}}}}{C`{A`}}}{{Eh{{Ef{Ed}}}}}{{El{}{{Ej{{Af{BjBf}}}}}}Dl}{{El{}{{Ej{{Af{BjBf}}}}}}Dl}}000{{}c{}}{{}{{En{c}}}{}}{{}{{C`{c}}}{}}{{{Df{c}}Cb}{{Df{c}}}Dh}0{c{{Df{c}}}Dh}5{{{j{l}}{j{lF`}}}{{Fb{{Af{A`}}}}}}{{{j{l{Df{c}}}}{j{lF`}}}{{Fb{{Af{A`e}}}}}Dh{}}{{{j{{Dh{}{{E`{c}}{Eb{e}}}}}}{C`{Cd}}}{{Eh{{Ef{Ed}}}}}{{El{}{{Ej{{Af{BjBf}}}}}}Dl}{{El{}{{Ej{{Af{BjBf}}}}}}Dl}}{{{Df{c}}d}{{Df{c}}}Dh}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}<{{ce}{{Ch{{Df{c}}e}}}DhDb}`{{{Fd{c}}d}{{Fd{c}}}{{h{f}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Fd{c}}}}}{{Fd{c}}}n}{{j{j{lc}}}A`{}}{jA`}{c{{Af{{Fd{Ab}}Ad}}}{{Aj{Ah}}}}{{{j{{Fd{c}}}}{j{lAl}}}AnB`}{cc{}}{{{j{c}}}c{}}{{{j{l{Fd{c}}}}e}{{Af{{Bd{Bb}}Bf}}}{{h{f}}}{{Bh{A`}}}}{{{j{l{Fd{c}}}}e}{{Af{{Bd{Ff}}Bf}}}{{h{f}}}{{Bh{A`}}}}{{}c{}}{{}{{C`{c}}}{}}{{{Fd{c}}Cb}{{Fd{c}}}{{h{f}}}}0{c{{Fd{c}}}{{h{f}}}}{{{j{l{Fd{c}}}}e}{{Af{{Bd{A`}}Bf}}}{{h{f}}}{{Bh{A`}}}}{{{Fd{c}}d}{{Fd{c}}}{{h{f}}}}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}9{{ce}{{Fd{{Ch{ce}}}}}{{D`{{Cj{f}}}{{Cl{Cn}}}}{h{f}}}Db}{{cDd}{{Fd{c}}}{{h{f}}}}``{{{Fh{c}}d}{{Fh{c}}}Fj}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{l{Fh{c}}}}{Cj{e}}}gFj{DjDl}{}}{{{j{l}}{Cj{c}}}{}{}}{{{j{{Fh{c}}}}}{{Fh{c}}}Fj}{{j{j{lc}}}A`{}}{jA`}{{{j{{Fh{c}}}}{j{lAl}}}An{B`Fj}}{cc{}}{{{Dn{c}}}{{Fh{c}}}Fj}{{{j{c}}}c{}}{{{j{Fj}}{C`{A`}}}{{Eh{{Ef{Ed}}}}}}0{{}c{}}{{}{{En{c}}}{}}{{}{{C`{c}}}{}}{{{Fh{c}}Cb}{{Fh{c}}}Fj}0{c{{Fh{c}}}Fj}5{{{j{l{Fh{c}}}}{j{lF`}}}{{Fb{{Af{A`e}}}}}Fj{}}{{{j{l}}{j{lF`}}}{{Fb{{Af{A`}}}}}}{{{Fh{c}}d}{{Fh{c}}}Fj}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf};{{ce}{{Ch{{Fh{c}}e}}}FjDb}`````{{{Fl{c}}d}{{Fl{c}}}{{h{f}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Fl{c}}}}}{{Fl{c}}}n}{{j{j{lc}}}A`{}}{jA`}{c{{Af{{Fl{Ab}}Ad}}}{{Aj{Ah}}}}{{{j{{Fl{c}}}}{j{lAl}}}AnB`}{cc{}}{{{j{c}}}c{}}{{{j{l{Fl{c}}}}e}{{Af{{Bd{Fn}}Bf}}}{{h{f}}}{{Bh{A`}}}}{{{j{l{Fl{c}}}}e}{{Af{{Bd{G`}}Bf}}}{{h{f}}}{{Bh{A`}}}}{{}c{}}{{}{{C`{c}}}{}}{{{Fl{c}}Cb}{{Fl{c}}}{{h{f}}}}0{c{{Fl{c}}}{{h{f}}}}?{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}7{{ce}{{Fl{{Ch{ce}}}}}{{D`{{Cj{f}}}{{Cl{Cn}}}}{h{f}}}Db}{{cDd}{{Fl{c}}}{{h{f}}}}``{{{Gb{c}}d}{{Gb{c}}}Gd}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{l{Gb{c}}}}{Cj{e}}}gGd{DjDl}{}}{{{j{l}}{Cj{c}}}{}{}}{{{j{{Gb{c}}}}}{{Gb{c}}}Gd}{{j{j{lc}}}A`{}}{jA`}{{{j{{Gb{c}}}}{j{lAl}}}An{B`Gd}}{cc{}}{{{Dn{c}}}{{Gb{c}}}Gd}{{{j{c}}}c{}}{{{j{Gd}}{C`{A`}}}{{Eh{{Ef{Ed}}}}}}0{{}c{}}{{}{{En{c}}}{}}{{}{{C`{c}}}{}}{{{Gb{c}}Cb}{{Gb{c}}}Gd}0{c{{Gb{c}}}Gd}{{{j{l}}{j{lF`}}}{{Fb{{Af{A`}}}}}}{{{j{l{Gb{c}}}}{j{lF`}}}{{Fb{{Af{A`e}}}}}Gd{}}{{{Gb{c}}d}{{Gb{c}}}Gd}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf};{{ce}{{Ch{{Gb{c}}e}}}GdDb}`{{{Gf{c}}d}{{Gf{c}}}{{h{f}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Gf{c}}}}}{{Gf{c}}}n}{{j{j{lc}}}A`{}}{jA`}{c{{Af{{Gf{Ab}}Ad}}}{{Aj{Ah}}}}{{{j{l{Gf{c}}}}e}{{Af{{Bd{Gh}}Bf}}}{{h{f}}}{{Bh{Gj}}}}{{{j{{Gf{c}}}}{j{lAl}}}AnB`}{cc{}}{{{j{c}}}c{}}{{}c{}}{{}{{C`{c}}}{}}{{{Gf{c}}Cb}{{Gf{c}}}{{h{f}}}}0{c{{Gf{c}}}{{h{f}}}}>{{{j{l{Gf{c}}}}e}{{Af{{Bd{Gl}}Bf}}}{{h{f}}}{{Bh{Gn}}}}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}8{{ce}{{Gf{{Ch{ce}}}}}{{D`{{Cj{f}}}{{Cl{Cn}}}}{h{f}}}Db}{{cDd}{{Gf{c}}}{{h{f}}}}``{{{H`{c}}d}{{H`{c}}}Hb}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{l{H`{c}}}}{Cj{e}}}gHb{DjDl}{}}{{{j{l}}{Cj{c}}}{}{}}{{{j{{H`{c}}}}}{{H`{c}}}Hb}{{j{j{lc}}}A`{}}{jA`}{{{j{Hb}}{C`{Gj}}}{{Eh{{Ef{Ed}}}}}}{{{j{{H`{c}}}}{j{lAl}}}An{B`Hb}}{cc{}}{{{Dn{c}}}{{H`{c}}}Hb}{{{j{c}}}c{}}{{}c{}}{{}{{En{c}}}{}}{{}{{C`{c}}}{}}{{{H`{c}}Cb}{{H`{c}}}Hb}0{c{{H`{c}}}Hb}{{{j{l}}{j{lF`}}}{{Fb{{Af{A`}}}}}}{{{j{l{H`{c}}}}{j{lF`}}}{{Fb{{Af{A`e}}}}}Hb{}}{{{H`{c}}d}{{H`{c}}}Hb}{{{j{Hb}}{C`{Gn}}}{{Eh{{Ef{Ed}}}}}}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}<{{ce}{{Ch{{H`{c}}e}}}HbDb}```{{{Hd{c}}d}{{Hd{c}}}{{h{f}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Hd{c}}}}}{{Hd{c}}}n}{{j{j{lc}}}A`{}}{jA`}{c{{Af{{Hd{Ab}}Ad}}}{{Aj{Ah}}}}{{{j{l{Hd{c}}}}e}{{Af{{Bd{Hf}}Bf}}}{{h{f}}}{{Bh{Hh}}}}{{{j{{Hd{c}}}}{j{lAl}}}AnB`}{cc{}}{{{j{c}}}c{}}{{}c{}}{{}{{C`{c}}}{}}{{{Hd{c}}Cb}{{Hd{c}}}{{h{f}}}}0{c{{Hd{c}}}{{h{f}}}}>{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}7{{ce}{{Hd{{Ch{ce}}}}}{{D`{{Cj{f}}}{{Cl{Cn}}}}{h{f}}}Db}{{cDd}{{Hd{c}}}{{h{f}}}}``{{{Hj{c}}d}{{Hj{c}}}Hl}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{l{Hj{c}}}}{Cj{e}}}gHl{DjDl}{}}{{{j{l}}{Cj{c}}}{}{}}{{{j{{Hj{c}}}}}{{Hj{c}}}Hl}{{j{j{lc}}}A`{}}{jA`}{{{j{Hl}}{C`{Hh}}}{{Eh{{Ef{Ed}}}}}}{{{j{{Hj{c}}}}{j{lAl}}}An{B`Hl}}{cc{}}{{{Dn{c}}}{{Hj{c}}}Hl}{{{j{c}}}c{}}{{}c{}}{{}{{En{c}}}{}}{{}{{C`{c}}}{}}{{{Hj{c}}Cb}{{Hj{c}}}Hl}0{c{{Hj{c}}}Hl}{{{j{l{Hj{c}}}}{j{lF`}}}{{Fb{{Af{A`e}}}}}Hl{}}{{{j{l}}{j{lF`}}}{{Fb{{Af{A`}}}}}}{{{Hj{c}}d}{{Hj{c}}}Hl}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf};{{ce}{{Ch{{Hj{c}}e}}}HlDb}```{{{j{l{Hn{c}}}}e}{{Af{{Bd{I`}}Bf}}}{{h{f}}}{{Bh{Ib}}}}{{{Hn{c}}d}{{Hn{c}}}{{h{f}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Hn{c}}}}}{{Hn{c}}}n}{{j{j{lc}}}A`{}}{jA`}{c{{Af{{Hn{Ab}}Ad}}}{{Aj{Ah}}}}{{{j{l{Hn{c}}}}e}{{Af{{Bd{Id}}Bf}}}{{h{f}}}{{Bh{If}}}}{{{j{l{Hn{c}}}}e}{{Af{{Bd{Ih}}Bf}}}{{h{f}}}{{Bh{Ij}}}}{{{j{{Hn{c}}}}{j{lAl}}}AnB`}{cc{}}{{{j{c}}}c{}}{{{j{l{Hn{c}}}}e}{{Af{{Bd{Il}}Bf}}}{{h{f}}}{{Bh{In}}}}{{{j{l{Hn{c}}}}e}{{Af{{Bd{J`}}Bf}}}{{h{f}}}{{Bh{Jb}}}}{{}c{}}{{}{{C`{c}}}{}}{{{Hn{c}}Cb}{{Hn{c}}}{{h{f}}}}0{c{{Hn{c}}}{{h{f}}}}{{{j{l{Hn{c}}}}e}{{Af{{Bd{Jd}}Bf}}}{{h{f}}}{{Bh{Jf}}}}{{{Hn{c}}d}{{Hn{c}}}{{h{f}}}}{{{j{l{Hn{c}}}}e}{{Af{{Bd{Ih}}Bf}}}{{h{f}}}{{Jl{}{{Jh{Jj}}}}}}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}:{{ce}{{Hn{{Ch{ce}}}}}{{D`{{Cj{f}}}{{Cl{Cn}}}}{h{f}}}Db}{{cDd}{{Hn{c}}}{{h{f}}}}``{{{j{Jn}}{C`{Ib}}}{{Eh{{Ef{Ed}}}}}}{{{K`{c}}d}{{K`{c}}}Jn}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{l{K`{c}}}}{Cj{e}}}gJn{DjDl}{}}{{{j{l}}{Cj{c}}}{}{}}{{{j{{K`{c}}}}}{{K`{c}}}Jn}{{j{j{lc}}}A`{}}{jA`}{{{j{Jn}}{C`{If}}}{{Eh{{Ef{Ed}}}}}}{{{j{Jn}}{C`{Ij}}}{{Eh{{Ef{Ed}}}}}}{{{j{{K`{c}}}}{j{lAl}}}An{B`Jn}}{cc{}}{{{Dn{c}}}{{K`{c}}}Jn}{{{j{c}}}c{}}{{{j{Jn}}{C`{In}}}{{Eh{{Ef{Ed}}}}}}{{{j{Jn}}{C`{Jb}}}{{Eh{{Ef{Ed}}}}}}{{}c{}}{{}{{En{c}}}{}}{{}{{C`{c}}}{}}{{{K`{c}}Cb}{{K`{c}}}Jn}0{c{{K`{c}}}Jn}{{{j{l}}{j{lF`}}}{{Fb{{Af{A`}}}}}}{{{j{l{K`{c}}}}{j{lF`}}}{{Fb{{Af{A`e}}}}}Jn{}}{{{j{Jn}}{C`{Jf}}}{{Eh{{Ef{Ed}}}}}}{{{K`{c}}d}{{K`{c}}}Jn}{{{j{Jn}}{C`{{Bl{Jj}}}}}{{Eh{{Ef{Ed}}}}}}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}={{ce}{{Ch{{K`{c}}e}}}JnDb}````{{{Kb{c}}d}{{Kb{c}}}{{h{f}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Kb{c}}}}}{{Kb{c}}}n}{{j{j{lc}}}A`{}}{jA`}{c{{Af{{Kb{Ab}}Ad}}}{{Aj{Ah}}}}{{{j{{Kb{c}}}}{j{lAl}}}AnB`}{cc{}}{{{j{c}}}c{}}{{{j{l{Kb{c}}}}e}{{Af{{Bd{Kd}}Bf}}}{{h{f}}}{{Bh{Kf}}}}{{}c{}}{{}{{C`{c}}}{}}{{{Kb{c}}Cb}{{Kb{c}}}{{h{f}}}}0{c{{Kb{c}}}{{h{f}}}}>{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}7{{ce}{{Kb{{Ch{ce}}}}}{{D`{{Cj{f}}}{{Cl{Cn}}}}{h{f}}}Db}{{cDd}{{Kb{c}}}{{h{f}}}}``{{{Kh{c}}d}{{Kh{c}}}Kj}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{l{Kh{c}}}}{Cj{e}}}gKj{DjDl}{}}{{{j{l}}{Cj{c}}}{}{}}{{{j{{Kh{c}}}}}{{Kh{c}}}Kj}{{j{j{lc}}}A`{}}{jA`}{{{j{{Kh{c}}}}{j{lAl}}}An{B`Kj}}{cc{}}{{{Dn{c}}}{{Kh{c}}}Kj}{{{j{c}}}c{}}{{{j{Kj}}{C`{Kf}}}{{Eh{{Ef{Ed}}}}}}{{}c{}}{{}{{En{c}}}{}}{{}{{C`{c}}}{}}{{{Kh{c}}Cb}{{Kh{c}}}Kj}0{c{{Kh{c}}}Kj}{{{j{l}}{j{lF`}}}{{Fb{{Af{A`}}}}}}{{{j{l{Kh{c}}}}{j{lF`}}}{{Fb{{Af{A`e}}}}}Kj{}}{{{Kh{c}}d}{{Kh{c}}}Kj}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf};{{ce}{{Ch{{Kh{c}}e}}}KjDb}````{{{Kl{c}}d}{{Kl{c}}}{{h{f}}}}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{{Kl{c}}}}}{{Kl{c}}}n}{{j{j{lc}}}A`{}}{jA`}{c{{Af{{Kl{Ab}}Ad}}}{{Aj{Ah}}}}{{{j{{Kl{c}}}}{j{lAl}}}AnB`}{cc{}}{{{j{c}}}c{}}{{}c{}}{{}{{C`{c}}}{}}{{{Kl{c}}Cb}{{Kl{c}}}{{h{f}}}}0{c{{Kl{c}}}{{h{f}}}}={{{j{l{Kl{c}}}}e}{{Af{{Bd{{Bl{Kn}}}}Bf}}}{{h{f}}}{{Jl{}{{Jh{L`}}}}}}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}8{{ce}{{Kl{{Ch{ce}}}}}{{D`{{Cj{f}}}{{Cl{Cn}}}}{h{f}}}Db}{{cDd}{{Kl{c}}}{{h{f}}}}```{{{Lb{c}}d}{{Lb{c}}}Ld}{j{{j{c}}}{}}{{{j{l}}}{{j{lc}}}{}}{{{j{l}}{Cj{c}}}{}{}}{{{j{l{Lb{c}}}}{Cj{e}}}gLd{DjDl}{}}{{{j{{Lb{c}}}}}{{Lb{c}}}Ld}{{j{j{lc}}}A`{}}{jA`}{{{j{{Lb{c}}}}{j{lAl}}}An{B`Ld}}{cc{}}{{{Dn{c}}}{{Lb{c}}}Ld}{{{j{c}}}c{}}{{}c{}}{{}{{En{c}}}{}}{{}{{C`{c}}}{}}{{{Lb{c}}Cb}{{Lb{c}}}Ld}0{c{{Lb{c}}}Ld}{{{j{l}}{j{lF`}}}{{Fb{{Af{A`}}}}}}{{{j{l{Lb{c}}}}{j{lF`}}}{{Fb{{Af{A`e}}}}}Ld{}}{{{Lb{c}}d}{{Lb{c}}}Ld}{{{j{{Ld{}{{Lf{c}}}}}}{C`{{Bl{L`}}}}}{{Eh{{Ef{Ed}}}}}{{El{}{{Ej{{Af{KnBf}}}}}}Dl}}{jc{}}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{jCf}<{{ce}{{Ch{{Lb{c}}e}}}LdDb}","D":"AGf","p":[[5,"LauncherClient",11],[6,"CompressionEncoding",498],[8,"BoxBody",499],[10,"GrpcService",500],[1,"reference"],[0,"mut"],[10,"Clone",501],[1,"unit"],[5,"Channel",502],[5,"Error",503],[6,"Result",504],[5,"Endpoint",505],[10,"TryInto",506],[5,"Formatter",507],[8,"Result",507],[10,"Debug",507],[5,"GetApplicationConfigResponse",508],[5,"Response",509],[5,"Status",510],[10,"IntoRequest",511],[5,"GetImageResponse",508],[5,"Streaming",512],[5,"Endorsements",513],[5,"Request",511],[1,"usize"],[5,"SendAttestationEvidenceRequest",508],[5,"TypeId",514],[5,"InterceptedService",515],[5,"Request",516],[17,"Response"],[5,"Response",517],[10,"Service",518],[10,"Interceptor",515],[5,"Uri",519],[5,"LauncherServer",41],[10,"Launcher",41],[10,"Body",520],[10,"Send",521],[5,"Arc",522],[17,"GetOakSystemImageStream"],[17,"GetContainerBundleStream"],[10,"Future",523],[5,"Box",524],[5,"Pin",525],[17,"Item"],[10,"Stream",526],[5,"IntoMakeService",527],[5,"Context",528],[6,"Poll",529],[5,"OrchestratorClient",78],[5,"EndorsedEvidence",530],[5,"OrchestratorServer",105],[10,"Orchestrator",105],[5,"HostlibKeyProvisioningClient",141],[5,"GetGroupKeysResponse",531],[5,"GetKeyProvisioningRoleResponse",531],[5,"HostlibKeyProvisioningServer",167],[10,"HostlibKeyProvisioning",167],[5,"OrchestratorCryptoClient",198],[5,"DeriveSessionKeysResponse",531],[5,"DeriveSessionKeysRequest",531],[5,"SignResponse",531],[5,"SignRequest",531],[5,"OrchestratorCryptoServer",224],[10,"OrchestratorCrypto",224],[5,"DebugServiceClient",257],[5,"CpuProfileResponse",532],[5,"CpuProfileRequest",532],[5,"DebugServiceServer",282],[10,"DebugService",282],[5,"OakFunctionsClient",314],[5,"AbortNextLookupDataResponse",533],[5,"Empty",533],[5,"ExtendNextLookupDataResponse",533],[5,"ExtendNextLookupDataRequest",533],[5,"FinishNextLookupDataResponse",533],[5,"FinishNextLookupDataRequest",533],[5,"InvokeResponse",533],[5,"InvokeRequest",533],[5,"InitializeResponse",533],[5,"InitializeRequest",533],[5,"ReserveResponse",533],[5,"ReserveRequest",533],[17,"Message"],[5,"LookupDataChunk",533],[10,"IntoStreamingRequest",511],[10,"OakFunctions",345],[5,"OakFunctionsServer",345],[5,"KeyProvisioningClient",384],[5,"GetGroupKeysResponse",534],[5,"GetGroupKeysRequest",534],[5,"KeyProvisioningServer",409],[10,"KeyProvisioning",409],[5,"StreamingSessionClient",442],[5,"ResponseWrapper",530],[5,"RequestWrapper",530],[5,"StreamingSessionServer",467],[10,"StreamingSession",467],[17,"StreamStream"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADcBYgAAAAYACwAAAA4ABAAUAAAAFgAAABwAAAAfAAAAIwAGAC8ABwA4AAEAPwABAEMAAABFAAEASQAFAFEABABXAAAAWQAAAF0AAABgAAAAYwAGAG0ABwB2AAEAewABAH8AAACBAAEAhAAFAJAABACWAAAAmAAAAJwAAACfAAAAoQAGAKsABwC0AAEAuQABAL0AAgDBAAUAyQAEANAAAADSAAAA1AAAANcAAADaAAYA5AAGAOwAAADuAAEA8QABAPUAAgD6AAUAAgEAAAQBBAAKAQEADQEAAA8BAAASAQAAFAEGABwBAAAeAQgAKAEBACsBAQAvAQIAMwEFADsBAAA+AQQARgEAAEgBAABMAQAATwEAAFMBBgBbAQAAXgEGAGcBAABpAQEAbgEBAHIBAgB4AQYAgwEEAIkBAACLAQAAjgEAAJEBAACTAQYAnQEHAKYBAQCqAQEArgECALIBBgC9AQQAwwEAAMUBAADHAQAAygEAAM0BBgDYAQcA4QEBAOQBAQDoAQIA7QEFAA=="}],["oak_grpc_utils",{"t":"FFNNNNOONNONNHNNNNNNNNN","n":["CodegenOptions","ExternPath","borrow","","borrow_mut","","build_client","build_server","default","","extern_paths","from","","generate_grpc_code","into","","new","try_from","","try_into","","type_id",""],"q":[[0,"oak_grpc_utils"],[23,"std::io::error"],[24,"std::path"],[25,"core::convert"],[26,"core::result"],[27,"core::any"]],"i":"``fh101110110`100101010","f":"``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0``{{}f}{{}h}`{cc{}}0{{{b{{j{c}}}}{b{{j{e}}}}f}{{n{l}}}{{Ab{A`}}}{{Ab{A`}}}}{{}c{}}0{{{b{Ad}}{b{Ad}}}h}{c{{Af{e}}}{}{}}0{{}{{Af{c}}}{}}0{bAh}0","D":"Ab","p":[[1,"reference"],[0,"mut"],[5,"CodegenOptions",0],[5,"ExternPath",0],[1,"slice"],[1,"unit"],[8,"Result",23],[5,"Path",24],[10,"AsRef",25],[1,"str"],[6,"Result",26],[5,"TypeId",27]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA4ABAAAAAAAAgAEAAkAAQARAAYA"}],["oak_micro_rpc",{"t":"CCKFFFMNNNNNNNNNNNMNNMNNNNNMNNMNNNNNNNNNMNNMNNCNNNNNNNNNNCKFFFNNNNNNNNNMNNNNNNNNNMNNNNNNNNNNNNNNNCKFFFNNNNNNNNNNNNNNNNMNNMNNMNNNNNMNNMNNNNNNNNNNNNMNN","n":["oak","functions","OakFunctions","OakFunctionsAsyncClient","OakFunctionsClient","OakFunctionsServer","abort_next_lookup_data","","","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","extend_next_lookup_data","","","finish_next_lookup_data","","","from","","","handle_user_request","","","initialize","","","into","","","invoke","new","","","reserve","","","stream_lookup_data","","","testing","to_owned","try_from","","","try_into","","","type_id","","","wasm","TestModule","TestModuleAsyncClient","TestModuleClient","TestModuleServer","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","echo_and_panic","","","from","","","into","","","invoke","lookup","","","new","","","to_owned","try_from","","","try_into","","","type_id","","","v1","StdWasmApi","StdWasmApiAsyncClient","StdWasmApiClient","StdWasmApiServer","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","from","","","into","","","invoke","log","","","lookup_data","","","lookup_data_multi","","","new","","","read_request","","","test","","","to_owned","try_from","","","try_into","","","type_id","","","write_response","",""],"q":[[0,"oak_micro_rpc"],[1,"oak_micro_rpc::oak"],[2,"oak_micro_rpc::oak::functions"],[58,"oak_micro_rpc::oak::functions::testing"],[97,"oak_micro_rpc::oak::functions::wasm"],[98,"oak_micro_rpc::oak::functions::wasm::v1"],[149,"oak_proto_rust::oak::functions"],[150,"micro_rpc::status"],[151,"core::result"],[152,"micro_rpc"],[153,"core::clone"],[154,"alloc::vec"],[155,"core::any"],[156,"oak_proto_rust::oak::functions::testing"],[157,"oak_proto_rust::oak::functions::wasm::v1"]],"i":"``````bA`Ad10Ah2100003213212103213212100210321321`0210210210`````DfDhCn210000D`3232132110323211321321321`````EfEhDn2100002102100E`320320323210320321321321321032","f":"``````{{{d{b}}f}{{l{hj}}}}{{{d{n{A`{c}}}}{d{f}}}{{l{{l{hj}}}}}Ab}{{{d{n{Ad{c}}}}{d{f}}}{{l{{l{hj}}}}}Af}{d{{d{c}}}{}}00{{{d{n}}}{{d{nc}}}{}}00{{{d{{Ah{c}}}}}{{Ah{c}}}Aj}{{d{d{nc}}}Al{}}{dAl}{{{d{b}}An}{{l{B`j}}}}{{{d{n{A`{c}}}}{d{An}}}{{l{{l{B`j}}}}}Ab}{{{d{n{Ad{c}}}}{d{An}}}{{l{{l{B`j}}}}}Af}{{{d{b}}Bb}{{l{Bdj}}}}{{{d{n{A`{c}}}}{d{Bb}}}{{l{{l{Bdj}}}}}Ab}{{{d{n{Ad{c}}}}{d{Bb}}}{{l{{l{Bdj}}}}}Af}{cc{}}00{{{d{b}}Bf}{{l{Bhj}}}}{{{d{n{A`{c}}}}{d{Bf}}}{{l{{l{Bhj}}}}}Ab}{{{d{n{Ad{c}}}}{d{Bf}}}{{l{{l{Bhj}}}}}Af}{{{d{b}}Bj}{{l{Blj}}}}{{{d{n{A`{c}}}}{d{Bj}}}{{l{{l{Blj}}}}}Ab}{{{d{n{Ad{c}}}}{d{Bj}}}{{l{{l{Blj}}}}}Af}{{}c{}}00{{{d{n{Ah{c}}}}{d{{C`{Bn}}}}}{{l{{Cb{Bn}}Cd}}}b}{c{{A`{c}}}Ab}{c{{Ad{c}}}Af}{c{{Ah{c}}}b}{{{d{b}}Cf}{{l{Chj}}}}{{{d{n{A`{c}}}}{d{Cf}}}{{l{{l{Chj}}}}}Ab}{{{d{n{Ad{c}}}}{d{Cf}}}{{l{{l{Chj}}}}}Af}{{{d{b}}Cj}{{l{Bdj}}}}{{{d{n{A`{c}}}}{d{Cj}}}{{l{{l{Bdj}}}}}Ab}{{{d{n{Ad{c}}}}{d{Cj}}}{{l{{l{Bdj}}}}}Af}`{dc{}}{c{{l{e}}}{}{}}00{{}{{l{c}}}{}}00{dCl}00`````{d{{d{c}}}{}}00{{{d{n}}}{{d{nc}}}{}}00{{{d{{Cn{c}}}}}{{Cn{c}}}Aj}{{d{d{nc}}}Al{}}{dAl}{{{d{nD`}}Db}{{l{Ddj}}}}{{{d{n{Df{c}}}}{d{Db}}}{{l{{l{Ddj}}}}}Ab}{{{d{n{Dh{c}}}}{d{Db}}}{{l{{l{Ddj}}}}}Af}{cc{}}00{{}c{}}00{{{d{n{Cn{c}}}}{d{{C`{Bn}}}}}{{l{{Cb{Bn}}Cd}}}D`}{{{d{nD`}}Dj}{{l{Dlj}}}}{{{d{n{Df{c}}}}{d{Dj}}}{{l{{l{Dlj}}}}}Ab}{{{d{n{Dh{c}}}}{d{Dj}}}{{l{{l{Dlj}}}}}Af}{c{{Df{c}}}Ab}{c{{Dh{c}}}Af}{c{{Cn{c}}}D`}{dc{}}{c{{l{e}}}{}{}}00{{}{{l{c}}}{}}00{dCl}00`````{d{{d{c}}}{}}00{{{d{n}}}{{d{nc}}}{}}00{{{d{{Dn{c}}}}}{{Dn{c}}}Aj}{{d{d{nc}}}Al{}}{dAl}{cc{}}00{{}c{}}00{{{d{n{Dn{c}}}}{d{{C`{Bn}}}}}{{l{{Cb{Bn}}Cd}}}E`}{{{d{nE`}}Eb}{{l{Edj}}}}{{{d{n{Ef{c}}}}{d{Eb}}}{{l{{l{Edj}}}}}Ab}{{{d{n{Eh{c}}}}{d{Eb}}}{{l{{l{Edj}}}}}Af}{{{d{nE`}}Ej}{{l{Elj}}}}{{{d{n{Ef{c}}}}{d{Ej}}}{{l{{l{Elj}}}}}Ab}{{{d{n{Eh{c}}}}{d{Ej}}}{{l{{l{Elj}}}}}Af}{{{d{nE`}}En}{{l{F`j}}}}{{{d{n{Ef{c}}}}{d{En}}}{{l{{l{F`j}}}}}Ab}{{{d{n{Eh{c}}}}{d{En}}}{{l{{l{F`j}}}}}Af}{c{{Ef{c}}}Ab}{c{{Eh{c}}}Af}{c{{Dn{c}}}E`}{{{d{nE`}}Fb}{{l{Fdj}}}}{{{d{n{Ef{c}}}}{d{Fb}}}{{l{{l{Fdj}}}}}Ab}{{{d{n{Eh{c}}}}{d{Fb}}}{{l{{l{Fdj}}}}}Af}{{{d{nE`}}Ff}{{l{Fhj}}}}{{{d{n{Ef{c}}}}{d{Ff}}}{{l{{l{Fhj}}}}}Ab}{{{d{n{Eh{c}}}}{d{Ff}}}{{l{{l{Fhj}}}}}Af}{dc{}}{c{{l{e}}}{}{}}00{{}{{l{c}}}{}}00{dCl}00{{{d{nE`}}Fj}{{l{Flj}}}}{{{d{n{Ef{c}}}}{d{Fj}}}{{l{{l{Flj}}}}}Ab}{{{d{n{Eh{c}}}}{d{Fj}}}{{l{{l{Flj}}}}}Af}","D":"Bd","p":[[10,"OakFunctions",2],[1,"reference"],[5,"Empty",149],[5,"AbortNextLookupDataResponse",149],[5,"Status",150],[6,"Result",151],[0,"mut"],[5,"OakFunctionsClient",2],[10,"Transport",152],[5,"OakFunctionsAsyncClient",2],[10,"AsyncTransport",152],[5,"OakFunctionsServer",2],[10,"Clone",153],[1,"unit"],[5,"ExtendNextLookupDataRequest",149],[5,"ExtendNextLookupDataResponse",149],[5,"FinishNextLookupDataRequest",149],[5,"FinishNextLookupDataResponse",149],[5,"InvokeRequest",149],[5,"InvokeResponse",149],[5,"InitializeRequest",149],[5,"InitializeResponse",149],[1,"u8"],[1,"slice"],[5,"Vec",154],[1,"never"],[5,"ReserveRequest",149],[5,"ReserveResponse",149],[5,"LookupDataChunk",149],[5,"TypeId",155],[5,"TestModuleServer",58],[10,"TestModule",58],[5,"EchoAndPanicRequest",156],[5,"EchoAndPanicResponse",156],[5,"TestModuleClient",58],[5,"TestModuleAsyncClient",58],[5,"LookupRequest",156],[5,"LookupResponse",156],[5,"StdWasmApiServer",98],[10,"StdWasmApi",98],[5,"LogRequest",157],[5,"LogResponse",157],[5,"StdWasmApiClient",98],[5,"StdWasmApiAsyncClient",98],[5,"LookupDataRequest",157],[5,"LookupDataResponse",157],[5,"LookupDataMultiRequest",157],[5,"LookupDataMultiResponse",157],[5,"ReadRequestRequest",157],[5,"ReadRequestResponse",157],[5,"TestRequest",157],[5,"TestResponse",157],[5,"WriteResponseRequest",157],[5,"WriteResponseResponse",157]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAIMABQAAABgAHAAFACUAJQBRAB4AdgAfAA=="}],["oak_proto_rust",{"t":"CCCFFFCNNNNNNNNNNNNNNNNNNCCCNNNNNNNNNNNNNNNNNNNNNCONNNCOOCCOOOOOOOOOOOOOOOONNNNNNNNNNNNOCFFFPFFFFFFFFFFFFFFFFFFFFFFPFFFFFFFFFFFFFFFFFFFFFFPFFFFFFFFFFFFGFFPFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGFFFPPFFFFFOOOOOOOOOOOOOOOOOONNCOOOOOOOOCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOCOOOCOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOCCCOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOCOOOOOOOOOOOOOOOOOONOOOOOOOOOOOOOOOOOOONNONOOOOOOCOOOOOOOOOOOOOOOOOOOOOOOOCOONNNNOOOOOOOOOOOOONOOOOOOOOOOOOOOOOOOOOOCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOCOPGPPNNNNNNNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNNNNPGPPPNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNNNNPGPPNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNNNNPPPPGNNNNNNNNNNNNNNNNPGPNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNONNNONNNNNNNNNNNNONNNNNNNNNNNNNNNCFFPFFPPGGPFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNOOONNNOOONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCFFFFFONNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNONNNNNNNNNNONNNNNNNNFFFFFFFFFFFFFFCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOONNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCOFFNNNNNNNNNNNNOONNNNNNNNNNNNONNNNNNNNOFPGPPFFFCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNONONNNNNNNNNNNNNNNNNNNNNNONNNNNNNNONOOONNONONNNNNNNNNNNNNNNNNNNNNCOGPPNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNONONONONONONONONONONONONONONNONONONONONNNPGPNNNNNNNNNNNNNNNNFNNNNNNNNNNNNONNNNOFFFFNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNOCNONNNNNNNNNNNNNNNNNOPPGNNNNNNNNNNNNNNNNNNNNNNCFFFFFFFFFFFFFOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCFFFNNNNNNNNNNNNNNNNNNNNNNNNOONNNONNNNNNONNNNNNNNNNNNNNNFONNNNNNNNONNNNNNNNCFFFFFFFFFFFFFFFFFFNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCOONNNNNNNNNNNNNNNNNNNOOOOOCOOCOCCONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPNNNNNNNNNNNNNNNNGPNNNNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNNPPGNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNNNNPPPGNNNNNNNNNNNNNNNNCFFFFFFFFONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNOOONNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNOOOOOOOOONNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNOO","n":["oak","perftools","variant","HexDigest","RawDigest","Variant","attestation","borrow","","","borrow_mut","","","clear","","","clone","","","clone_into","","","clone_to_uninit","","","containers","crypto","debug","default","","","encoded_len","","","eq","","","fmt","","","from","","","","","","","","","functions","id","into","","","key_provisioning","psha2","","restricted_kernel","session","sha1","","sha2_256","","sha2_384","","sha2_512","","sha3_224","","sha3_256","","sha3_384","","sha3_512","","to_owned","","","try_from","","","try_into","","","type_id","","","value","v1","AmdAttestationReport","AmdSevExpectedValues","AmdSevReferenceValues","AmdSevSnp","AmdSevSnpEndorsement","ApplicationEndorsement","ApplicationKeys","ApplicationLayerData","ApplicationLayerEndorsements","ApplicationLayerExpectedValues","ApplicationLayerReferenceValues","AttestationResults","BinaryReferenceValue","CbData","CbEndorsements","CbExpectedValues","CbReferenceValues","CertificateAuthority","ClaimReferenceValue","ContainerEndorsement","ContainerLayerData","ContainerLayerEndorsements","ContainerLayerExpectedValues","ContainerLayerReferenceValues","DiceData","Digests","EcdsaP256Sha256","Endorsement","EndorsementDetails","EndorsementReferenceValue","Endorsements","Event","EventAttestationResults","EventData","EventExpectedValues","EventLog","EventReferenceValues","Evidence","ExpectedDigests","ExpectedRegex","ExpectedStringLiterals","ExpectedValues","ExtractedEvidence","FakeAttestationReport","FileReferenceValue","FirmwareAttachment","FirmwareEndorsement","InsecureExpectedValues","InsecureReferenceValues","IntelTdx","IntelTdxAttestationReport","IntelTdxExpectedValues","IntelTdxReferenceValues","KernelAttachment","KernelBinaryReferenceValue","KernelDigests","KernelEndorsement","KernelExpectedValues","KernelLayerData","KernelLayerEndorsements","KernelLayerExpectedValues","KernelLayerReferenceValues","KeyType","LayerEvidence","MpmAttachment","None","OakContainersData","OakContainersEndorsements","OakContainersExpectedValues","OakContainersReferenceValues","OakRestrictedKernelData","OakRestrictedKernelEndorsements","OakRestrictedKernelExpectedValues","OakRestrictedKernelReferenceValues","OakStandaloneData","OrchestratorMeasurements","RawDigests","ReferenceValues","Regex","RootLayerData","RootLayerEndorsements","RootLayerEvidence","RootLayerExpectedValues","RootLayerReferenceValues","Signature","SignedEndorsement","SkipVerification","Stage0Measurements","Stage1Measurements","StringLiterals","SystemEndorsement","SystemLayerData","SystemLayerEndorsements","SystemLayerExpectedValues","SystemLayerReferenceValues","TcbVersion","TeePlatform","TextExpectedValue","TextReferenceValue","TransparentReleaseEndorsement","Undefined","Unspecified","Validity","VerificationSkipped","VerifyingKey","VerifyingKeyReferenceValue","VerifyingKeySet","acpi","","","","","acpi_digest","allow_debug","","amd_sev","","application_keys","application_layer","","","","","","","as_str_name","","attestation_results","binary","","","","","","","","binary_reference_value","boot_loader","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bundle","","certificate_authority","claim_types","clear","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","","config","","","","configs","configuration","","","","","","","container_image","container_layer","","","","current_tcb","debug","default","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","digests","","","eca_certificate","eca_private_key","eca_public_key","encoded_events","encoded_len","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","encryption_public_key","","","encryption_public_key_certificate","endorsement","","","endorsement_signature","endorsements","endorser","endorser_public_key","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","event","","","","event_attestation_results","event_log","events","","evidence","evidence_values","expected_digests","expected_values","extracted_evidence","","firmware","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","format","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_i32","","from_str_name","","group_encryption_public_key_certificate","group_signing_public_key_certificate","hardware_id","hash","","image","","","init_ram_fs","","","","","initial","initial_measurement","insecure","","intel_tdx","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","is_valid","","kernel","","","","kernel_binary_reference_value","kernel_cmd_line","","kernel_cmd_line_text","","kernel_cmdline","kernel_image","kernel_layer","","","","","","","","","","","kernel_measurement","kernel_raw_cmd_line","","kernel_setup_data","key_id","","keys","layers","memory_map","","","","","memory_map_digest","microcode","min_tcb_version","","not_after","not_before","package_name","package_version","partial_cmp","","path","platform","","","ram_disk_digest","raw","","reason","reference_values","rekor","rekor_log_entry","","rekor_public_key","remote_attestation_report","report","report_data","","","reported_tcb","required_claims","root_layer","","","","","","","","","","","","","root_layer_data","serialized","session_binding_public_key","set_format","set_platform","set_status","set_type","setup_data","","","setup_data_digest","signature","signing_public_key","","","signing_public_key_certificate","snp","stage0","","stage0_expected","status","","subject","","subject_digest","system_image","","","","","","system_layer","","","","","","","tag","tee","tee_certificate","","text_expected_value","text_reference_value","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type","","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_url","validity","","value","","","","verifying_key_reference_value","vmpl","GenericFailure","Status","Success","Unspecified","as_str_name","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","default","eq","fmt","from","from_i32","from_str_name","hash","into","is_valid","partial_cmp","to_owned","try_from","","try_into","type_id","Digests","Endorsement","Skip","Type","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","EndorsementFormatJsonIntoto","EndorsementFormatUndefined","Format","as_str_name","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","default","eq","fmt","from","from_i32","from_str_name","hash","into","is_valid","partial_cmp","to_owned","try_from","","try_into","type_id","Cb","OakContainers","OakRestrictedKernel","Type","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Digests","Skipped","Type","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Cb","OakContainers","OakRestrictedKernel","Type","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Cb","EvidenceValues","OakContainers","OakRestrictedKernel","Standalone","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Digests","Endorsement","Skip","Type","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Cb","OakContainers","OakRestrictedKernel","Type","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Fake","Report","SevSnp","Tdx","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Regex","Skipped","StringLiterals","Type","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Endorsement","Regex","Skip","StringLiterals","Type","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Skip","Type","Verify","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","GetApplicationConfigResponse","GetImageResponse","SendAttestationEvidenceRequest","borrow","","","borrow_mut","","","clear","","","clone","","","clone_into","","","clone_to_uninit","","","config","default","","","dice_evidence","encoded_len","","","eq","","","fmt","","","from","","","image_chunk","into","","","to_owned","","","try_from","","","try_into","","","type_id","","","v1","DeriveSessionKeysRequest","DeriveSessionKeysResponse","Follower","GetGroupKeysResponse","GetKeyProvisioningRoleResponse","Group","Instance","KeyOrigin","KeyProvisioningRole","Leader","SignRequest","SignResponse","Unspecified","","as_str_name","","borrow","","","","","","","","borrow_mut","","","","","","","","clear","","","","","","clone","","","","","","","","clone_into","","","","","","","","clone_to_uninit","","","","","","","","cmp","","default","","","","","","","","encoded_len","","","","","","eq","","","","","","","","fmt","","","","","","","","from","","","","","","","","from_i32","","from_str_name","","group_keys","hash","","into","","","","","","","","is_valid","","key_origin","","","","message","partial_cmp","","role","","serialized_encapsulated_public_key","session_keys","set_key_origin","","set_role","signature","to_owned","","","","","","","","try_from","","","","","","","","","","try_into","","","","","","","","type_id","","","","","","","","v1","AeadEncryptedMessage","EncryptedRequest","EncryptedResponse","SessionKeys","Signature","associated_data","borrow","","","","","borrow_mut","","","","","ciphertext","clear","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","default","","","","","encoded_len","","","","","encrypted_message","","eq","","","","","fmt","","","","","from","","","","","into","","","","","nonce","request_key","response_key","serialized_encapsulated_public_key","","signature","to_owned","","","","","try_from","","","","","try_into","","","","","type_id","","","","","CpuProfileRequest","CpuProfileResponse","borrow","","borrow_mut","","clear","","clone","","clone_into","","clone_to_uninit","","default","","duration","encoded_len","","eq","","fmt","","from","","into","","profile","to_owned","","try_from","","try_into","","type_id","","AbortNextLookupDataResponse","Empty","ExtendNextLookupDataRequest","ExtendNextLookupDataResponse","FinishNextLookupDataRequest","FinishNextLookupDataResponse","InitializeRequest","InitializeResponse","InvokeRequest","InvokeResponse","LookupDataChunk","LookupDataEntry","ReserveRequest","ReserveResponse","abi","additional_entries","borrow","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","clear","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","config","constant_response_size","data","default","","","","","","","","","","","","","","encoded_len","","","","","","","","","","","","","","encrypted_request","encrypted_response","eq","","","","","","","","","","","","","","evidence","extend_next_lookup_data_request","fmt","","","","","","","","","","","","","","from","","","","","","","","","","","","","","into","","","","","","","","","","","","","","items","key","lookup_data","testing","to_owned","","","","","","","","","","","","","","try_from","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","value","wasm","wasm_module","ConfigurationReport","ServerPolicy","borrow","","borrow_mut","","clear","","clone","","clone_into","","clone_to_uninit","","constant_processing_time_ms","constant_response_size_bytes","default","","encoded_len","","eq","","fmt","","from","","into","","policy","to_owned","","try_from","","try_into","","type_id","","wasm_hash","ApplicationConfig","HandlerNative","HandlerType","HandlerUnspecified","HandlerWasm","TcpCommunicationChannel","VsockCommunicationChannel","WasmtimeConfig","application_config","as_str_name","borrow","","","","","borrow_mut","","","","","clear","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","cmp","communication_channel","default","","","","","dynamic_memory_guard_size","","dynamic_memory_reserved_for_growth","","encoded_len","","","","eq","","","","","fmt","","","","","from","","","","","from_i32","from_str_name","handler_type","","hash","into","","","","","is_valid","memory_init_cow","","partial_cmp","pooling_strategy","port","","set_handler_type","static_memory_guard_size","","static_memory_maximum_size","","to_owned","","","","","try_from","","","","","","try_into","","","","","type_id","","","","","wasmtime_config","","CommunicationChannel","TcpChannel","VsockChannel","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","PoolingAllocationConfig","borrow","borrow_mut","clear","clone","clone_into","clone_to_uninit","default","encoded_len","eq","fmt","from","into","linear_memory_keep_resident","","max_component_instance_size","","max_core_instance_size","","max_core_instances_per_component","","max_memories_per_component","","max_memories_per_module","","max_memory_protection_keys","","max_tables_per_component","","max_tables_per_module","","max_unused_warm_slots","","memory_pages","","memory_protection_keys","","table_elements","","table_keep_resident","","to_owned","total_component_instances","","total_core_instances","","total_memories","","total_stacks","","total_tables","","try_from","try_into","type_id","Chunk","Data","LengthDelimitedEntries","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","Entry","borrow","borrow_mut","clear","clone","clone_into","clone_to_uninit","default","encoded_len","eq","fmt","from","into","key","to_owned","try_from","try_into","type_id","value","EchoAndPanicRequest","EchoAndPanicResponse","LookupRequest","LookupResponse","borrow","","","","borrow_mut","","","","clear","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","data","","default","","","","encoded_len","","","","eq","","","","fmt","","","","from","","","","into","","","","keys","lookup_request","mode","","set_mode","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","values","Batch","Individual","Mode","as_str_name","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","default","eq","fmt","from","from_i32","from_str_name","hash","into","is_valid","partial_cmp","to_owned","try_from","","try_into","type_id","v1","BytesValue","LogRequest","LogResponse","LookupDataMultiRequest","LookupDataMultiResponse","LookupDataRequest","LookupDataResponse","ReadRequestRequest","ReadRequestResponse","TestRequest","TestResponse","WriteResponseRequest","WriteResponseResponse","body","","","","borrow","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","clear","","","","","","","","","","","","","clone","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","default","","","","","","","","","","","","","echo","encoded_len","","","","","","","","","","","","","eq","","","","","","","","","","","","","fmt","","","","","","","","","","","","","found","from","","","","","","","","","","","","","into","","","","","","","","","","","","","key","keys","message","to_owned","","","","","","","","","","","","","try_from","","","","","","","","","","","","","try_into","","","","","","","","","","","","","type_id","","","","","","","","","","","","","value","","values","v1","GetGroupKeysRequest","GetGroupKeysResponse","GroupKeys","borrow","","","borrow_mut","","","clear","","","clone","","","clone_into","","","clone_to_uninit","","","default","","","encoded_len","","","encrypted_encryption_private_key","endorsements","eq","","","evidence","fmt","","","from","","","group_keys","into","","","to_owned","","","try_from","","","try_into","","","type_id","","","InitialData","application_bytes","borrow","borrow_mut","clear","clone","clone_into","clone_to_uninit","default","encoded_len","endorsement_bytes","eq","fmt","from","into","to_owned","try_from","try_into","type_id","v1","AttestRequest","AttestResponse","EncryptedMessage","EndorsedEvidence","GetEndorsedEvidenceRequest","GetEndorsedEvidenceResponse","HandshakeRequest","HandshakeResponse","InvokeRequest","InvokeResponse","NoiseHandshakeMessage","PlaintextMessage","RequestWrapper","ResponseWrapper","SessionBinding","SessionRequest","SessionRequestWithSessionId","SessionResponse","associated_data","","attestation_bindings","","binding","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","ciphertext","","clear","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","default","","","","","","","","","","","","","","","","","","encoded_len","","","","","","","","","","","","","","","","","","encrypted_request","encrypted_response","endorsed_evidence","","","endorsements","ephemeral_public_key","eq","","","","","","","","","","","","","","","","","","evidence","fmt","","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","handshake_request","handshake_response","handshake_type","","into","","","","","","","","","","","","","","","","","","nonce","","plaintext","request","","","request_wrapper","response","","response_wrapper","session_id","session_request","session_response","static_public_key","to_owned","","","","","","","","","","","","","","","","","","try_from","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","HandshakeType","NoiseHandshakeMessage","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","HandshakeType","NoiseHandshakeMessage","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","GetEndorsedEvidenceRequest","InvokeRequest","Request","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","GetEndorsedEvidenceResponse","InvokeResponse","Response","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","AttestRequest","EncryptedMessage","HandshakeRequest","Request","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","AttestResponse","EncryptedMessage","HandshakeResponse","Response","borrow","borrow_mut","clone","clone_into","clone_to_uninit","encode","encoded_len","eq","fmt","from","into","merge","to_owned","try_from","try_into","type_id","profiles","Function","Label","Line","Location","Mapping","Profile","Sample","ValueType","address","borrow","","","","","","","","borrow_mut","","","","","","","","build_id","clear","","","","","","","","clone","","","","","","","","clone_into","","","","","","","","clone_to_uninit","","","","","","","","comment","default","","","","","","","","default_sample_type","drop_frames","duration_nanos","encoded_len","","","","","","","","eq","","","","","","","","file_offset","filename","","fmt","","","","","","","","from","","","","","","","","function","function_id","has_filenames","has_functions","has_inline_frames","has_line_numbers","id","","","into","","","","","","","","is_folded","keep_frames","key","label","line","","location","location_id","mapping","mapping_id","memory_limit","memory_start","name","num","num_unit","period","period_type","sample","sample_type","start_line","str","string_table","system_name","time_nanos","to_owned","","","","","","","","try_from","","","","","","","","try_into","","","","","","","","ty","type_id","","","","","","","","unit","value"],"q":[[0,"oak_proto_rust"],[3,"oak_proto_rust::oak"],[88,"oak_proto_rust::oak::attestation"],[89,"oak_proto_rust::oak::attestation::v1"],[2074,"oak_proto_rust::oak::attestation::v1::attestation_results"],[2100,"oak_proto_rust::oak::attestation::v1::binary_reference_value"],[2120,"oak_proto_rust::oak::attestation::v1::endorsement"],[2145,"oak_proto_rust::oak::attestation::v1::endorsements"],[2165,"oak_proto_rust::oak::attestation::v1::expected_digests"],[2184,"oak_proto_rust::oak::attestation::v1::expected_values"],[2204,"oak_proto_rust::oak::attestation::v1::extracted_evidence"],[2225,"oak_proto_rust::oak::attestation::v1::kernel_binary_reference_value"],[2245,"oak_proto_rust::oak::attestation::v1::reference_values"],[2265,"oak_proto_rust::oak::attestation::v1::root_layer_data"],[2285,"oak_proto_rust::oak::attestation::v1::text_expected_value"],[2305,"oak_proto_rust::oak::attestation::v1::text_reference_value"],[2326,"oak_proto_rust::oak::attestation::v1::verifying_key_reference_value"],[2345,"oak_proto_rust::oak::containers"],[2400,"oak_proto_rust::oak::containers::v1"],[2568,"oak_proto_rust::oak::crypto"],[2569,"oak_proto_rust::oak::crypto::v1"],[2664,"oak_proto_rust::oak::debug"],[2700,"oak_proto_rust::oak::functions"],[2954,"oak_proto_rust::oak::functions::abi"],[2992,"oak_proto_rust::oak::functions::config"],[3106,"oak_proto_rust::oak::functions::config::application_config"],[3125,"oak_proto_rust::oak::functions::config::wasmtime_config"],[3180,"oak_proto_rust::oak::functions::extend_next_lookup_data_request"],[3199,"oak_proto_rust::oak::functions::lookup_data"],[3218,"oak_proto_rust::oak::functions::testing"],[3294,"oak_proto_rust::oak::functions::testing::lookup_request"],[3319,"oak_proto_rust::oak::functions::wasm"],[3320,"oak_proto_rust::oak::functions::wasm::v1"],[3553,"oak_proto_rust::oak::key_provisioning"],[3554,"oak_proto_rust::oak::key_provisioning::v1"],[3609,"oak_proto_rust::oak::restricted_kernel"],[3628,"oak_proto_rust::oak::session"],[3629,"oak_proto_rust::oak::session::v1"],[3968,"oak_proto_rust::oak::session::v1::handshake_request"],[3986,"oak_proto_rust::oak::session::v1::handshake_response"],[4004,"oak_proto_rust::oak::session::v1::request_wrapper"],[4023,"oak_proto_rust::oak::session::v1::response_wrapper"],[4042,"oak_proto_rust::oak::session::v1::session_request"],[4062,"oak_proto_rust::oak::session::v1::session_response"],[4082,"oak_proto_rust::perftools"],[4083,"oak_proto_rust::perftools::profiles"],[4264,"core::fmt"],[4265,"core::result"],[4266,"core::any"],[4267,"core::cmp"],[4268,"core::option"],[4269,"core::hash"],[4270,"prost::error"],[4271,"alloc::string"],[4272,"bytes::buf::buf_mut"],[4273,"prost::encoding"],[4274,"bytes::buf::buf_impl"]],"i":"```````fjl210210210210210```210210210210210000000`0210`21``21212121212121212102102102100````Bf``````````````````````Bj``````````````````````1```````````````1``````````````````````````````````01`````FnHjAfJlMdCbFfLfFdMbDbGhGlIbKfKjMnNbBfBj`GbGdHnI`AlB`JnMj`DhBlBnC`CbCdCfChCjClCnD`DbBfDdDf?DjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnBjH`HbHdHfHhHjHlHnI`IbIdIfAjAhAfAnAlB`IhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdBlBnC`CbCdCfChCjClCnD`DbBfDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnBjH`HbHdHfHhHjHlHnI`IbIdIfAjAhAfAnAlB`IhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdKb7DfEbBlBnC`CbCdCfChCjClCnD`DbDd>DhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfAjAhAfAnAlB`IhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdBlBnC`CbCdCfChCjClCnD`DbBfDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnBjH`HbHdHfHhHjHlHnI`IbIdIfAjAhAfAnAlB`IhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdBlBnC`CbCdCfChCjClCnD`DbBfDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnBjH`HbHdHfHhHjHlHnI`IbIdIfAjAhAfAnAlB`IhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdBlBnC`CbCdCfChCjClCnD`DbBfDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnBjH`HbHdHfHhHjHlHnI`IbIdIfAjAhAfAnAlB`IhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdBfBjCfJnKb;BlGbGdHnI`AlB`Mj:GjIdKhN`Jf0<BnC`CbCdCfChCjClCnD`DbBfDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnBjH`HbHdHfHhHjHlHnI`IbIdIfAjAhAfAnAlB`IhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdElFlL`CnDdClCjBlBnC`CbCdCfCh78:D`Db;DfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnH`HbHdHfHhHjHlHnI`IbIdIfAjAhAfAnAlB`IhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdIjJbKbD``HdHf0`Ed0BlBnC`CbCdCfChCjClCn=DbBfDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnBjH`HbHdHfHhHjHlHnI`IbIdIfAjAhAfAnAlB`IhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdChGfKd7IjDbCjIhDfJb```5AhBlBnC`CbCdCf?:ClCnD`>BfDd=DhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnBjH`HbHdHfHhHjHlHnI`IbIdIfAjAhAfAnAlB`IhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdH`0BlBnC`CbCdCfChCjClCnD`DbBfDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnBjH`HbHdHfHhHjHlHnI`IbIdIfAjAhAfAnAlB`IhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdBfBj10D`0Jf32BnEhLdFnHjAfJlMdIh9FdMb10Bl;C`CbCdCfChCjClCnD`DbBfDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnBjH`HbHdHfHhHjHlHnI`IbIdIfAjAhAfAnAlB`IhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdBfBjFnHjAf=`102=CbJlGhGjGlIbIdKfKhKjMnN`Nb<;;;DlHbDnDbFnHjAfJlMdCbDhFfLfIn0C`0BfBjElCl0Ih:DlHbIj`EdHdHf27JdJfJhJj26DbGhGjGlIbIdIfKfKhKjMnN`Nb`H`Kb1ClIjDlBnEhLdCbHd6Jb9D`DhFfHhLf<<?HfJ`CdG`HlAnK`MfGjGlIdKhKjN`NbChDhHhAj``BlBnC`CbCdCf9CjClCnD`DbBfDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnBjH`HbHdHfHhHjHlHnI`IbIdIfAjAhAfAnAlB`IhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdBlBnC`CbCdCfChCjClCnD`DbBf0DdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnBj0H`HbHdHfHhHjHlHnI`IbIdIfAj0Ah0Af0An0Al0B`0IhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdBlBnC`CbCdCfChCjClCnD`DbBfDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnBjH`HbHdHfHhHjHlHnI`IbIdIfAjAhAfAnAlB`IhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdDl0E`EfEjFbGnIhLbM`9BlBnC`CbCdCfChCjClCnD`DbBfDdDfDhDjDlDnE`EbEdEfEhEjElEnF`FbFdFfFhFjFlFnG`GbGdGfGhGjGlGnBjH`HbHdHfHhHjHlHnI`IbIdIfAjAhAfAnAlB`IhIjIlInJ`JbJdJfJhJjJlJnK`KbKdKfKhKjKlKnL`LbLdLfLhLjLlLnM`MbMdMfMhMjMlMnN`NbNdCbJ`L`EnF`LlLn`JfO``000000000000000000000000Of00`0000000000000000Nh0`0000000000000000000000A@b00`0000000000000000A@d0`0000000000000000A@f00`0000000000000000A@h`0000000000000000000A@j00`0000000000000000A@l00`0000000000000000A@n`000000000000000000AA`00`0000000000000000AAb000`0000000000000000AAd`00000000000000000```AAfAAhAAj210210210210210121002102102102102210210210210210```AAl``AAn0``1``1010AB`ABb3ABdABfABhABj6547321065432105473210654732106547321067654732106543210547321065473210654732106767647654732106763131176553231505473210654773210665473210654732106``````AC`ABlABn2ACbACd324104324103241032410324103241032410323241032410324103241041133032410324103241032410``ACjACl10101010101011010101010010101010```````````````AEfACnAD`ADbADdADfADhADjADlADnAE`AEbAEd<AEh<;:987654321=0<;:987654321=0<;:987654321=0<;:987654321=0<;:987654321=0`<6<;:987654321=0<;:987654321=0:9<;:987654321=0;`<;:987654321=0<;:987654321=0<;:987654321=078``<;:987654321=0<;:987654321=0<;:987654321=0<;:987654321=08`<``AEjAEl1010101010001010101010101101010101`AEn`00````0AF`AFbAFdAFf43210432103210432104321044032104111132103210432104321044400432104411413201111321043210443210432104`0`AFj00000000000000000`AFl00000000000000000000000000000000000000000000000000000AFn`00000000000000000`AG`00000000000000000````AGbAGdAGfAGh32103210321032103210103210321032103210321032103`33332103210321032102AGj0`0000000000000000000000``````````````AGnAH`AI`AIbAGl43AHbAHdAHfAHhAHjAHlAHn98AId8<;7654321:908<;7654321:908<;7654321:908<;7654321:908<;7654321:908<;7654321:90:8<;7654321:908<;7654321:908<;7654321:9008<;7654321:908<;7654321:904268<;7654321:908<;7654321:908<;7654321:908<;7654321:90301````AIfAIhAIj2102102102102102102102121012102100210210210210210`AIl00000000000000000```````````````````AIn0AKfAKhAKdAJ`AJbAJdAJfAJhAJjAJlAJnAK`AKb:<;=AKjAKlAKnAL`=<;:987654>AKfAKhAIn654370AJ`AJbAJdAJfAJhAJjAJlAJnAK`AKbAKd=<;AKjAKlAKnAL`>=<;:987654AKfAKhAIn6543AJ`AJbAJdAJfAJhAJjAJlAJnAK`AKbAKd=<;AKjAKlAKnAL`>=<;:987654AKfAKhAIn6543AJ`AJbAJdAJfAJhAJjAJlAJnAK`AKbAKd=<;AKjAKlAKnAL`>=<;:987654AKfAKhAIn6543>=?:9AJ`90AJbAJdAJfAJhAJjAJlAJnAK`AKbAKd=<;AKjAKlAKnAL`>>=<;:987654AKfAKhAIn6543AJ`AJbAJdAJfAJhAJjAJlAJnAK`AKbAKd=<;AKjAKlAKnAL```AKfAKhAJ`AJbAJdAJfAJhAJjAJlAJnAK`AKbAKd<;AInAKjAKlAKnAL`443:21`90`1``6?>=<;:98765AKfAKh65432AJ`AJbAJdAJfAJhAJjAJlAJnAK`AKbAKd<;AInAKjAKlAKnAL`?>=<;:98765AKfAKh65432AJ`AJbAJdAJfAJhAJjAJlAJnAK`AKbAKd<;AInAKjAKlAKnAL``ALb0000000000000000`ALd0000000000000000ALf0`0000000000000000ALh0`0000000000000000ALj00`0000000000000000ALl00`0000000000000000`````````AMhALnAM`AMbAMdAMf5AMjAMl65432710265432710654327106543271065432710665432710666654327106543271022065432710654327106122222706543271076347164672203366660360665432710654327106543271056543271054","f":"```````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{df}}}h}{{{b{dj}}}h}{{{b{dl}}}h}{{{b{f}}}f}{{{b{j}}}j}{{{b{l}}}l}{{b{b{dc}}}h{}}00{bh}00```{{}f}{{}j}{{}l}{{{b{f}}}n}{{{b{j}}}n}{{{b{l}}}n}{{{b{f}}{b{f}}}A`}{{{b{j}}{b{j}}}A`}{{{b{l}}{b{l}}}A`}{{{b{f}}{b{dAb}}}Ad}{{{b{j}}{b{dAb}}}Ad}{{{b{l}}{b{dAb}}}Ad}{cc{}}0{Afl}{Ahl}{Ajl}{All}{Anl}5{B`l}``{{}c{}}00`````````````````````{bc{}}00{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{bBd}00```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{Bf}}}{{b{Bh}}}}{{{b{Bj}}}{{b{Bh}}}}```````````{b{{b{c}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{b{d}}}{{b{dc}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{b{dBl}}}h}{{{b{dBn}}}h}{{{b{dC`}}}h}{{{b{dCb}}}h}{{{b{dCd}}}h}{{{b{dCf}}}h}{{{b{dCh}}}h}{{{b{dCj}}}h}{{{b{dCl}}}h}{{{b{dCn}}}h}{{{b{dD`}}}h}{{{b{dDb}}}h}{{{b{dDd}}}h}{{{b{dDf}}}h}{{{b{dDh}}}h}{{{b{dDj}}}h}{{{b{dDl}}}h}{{{b{dDn}}}h}{{{b{dE`}}}h}{{{b{dEb}}}h}{{{b{dEd}}}h}{{{b{dEf}}}h}{{{b{dEh}}}h}{{{b{dEj}}}h}{{{b{dEl}}}h}{{{b{dEn}}}h}{{{b{dF`}}}h}{{{b{dFb}}}h}{{{b{dFd}}}h}{{{b{dFf}}}h}{{{b{dFh}}}h}{{{b{dFj}}}h}{{{b{dFl}}}h}{{{b{dFn}}}h}{{{b{dG`}}}h}{{{b{dGb}}}h}{{{b{dGd}}}h}{{{b{dGf}}}h}{{{b{dGh}}}h}{{{b{dGj}}}h}{{{b{dGl}}}h}{{{b{dGn}}}h}{{{b{dH`}}}h}{{{b{dHb}}}h}{{{b{dHd}}}h}{{{b{dHf}}}h}{{{b{dHh}}}h}{{{b{dHj}}}h}{{{b{dHl}}}h}{{{b{dHn}}}h}{{{b{dI`}}}h}{{{b{dIb}}}h}{{{b{dId}}}h}{{{b{dIf}}}h}{{{b{dAj}}}h}{{{b{dAh}}}h}{{{b{dAf}}}h}{{{b{dAn}}}h}{{{b{dAl}}}h}{{{b{dB`}}}h}{{{b{dIh}}}h}{{{b{dIj}}}h}{{{b{dIl}}}h}{{{b{dIn}}}h}{{{b{dJ`}}}h}{{{b{dJb}}}h}{{{b{dJd}}}h}{{{b{dJf}}}h}{{{b{dJh}}}h}{{{b{dJj}}}h}{{{b{dJl}}}h}{{{b{dJn}}}h}{{{b{dK`}}}h}{{{b{dKb}}}h}{{{b{dKd}}}h}{{{b{dKf}}}h}{{{b{dKh}}}h}{{{b{dKj}}}h}{{{b{dKl}}}h}{{{b{dKn}}}h}{{{b{dL`}}}h}{{{b{dLb}}}h}{{{b{dLd}}}h}{{{b{dLf}}}h}{{{b{dLh}}}h}{{{b{dLj}}}h}{{{b{dLl}}}h}{{{b{dLn}}}h}{{{b{dM`}}}h}{{{b{dMb}}}h}{{{b{dMd}}}h}{{{b{dMf}}}h}{{{b{dMh}}}h}{{{b{dMj}}}h}{{{b{dMl}}}h}{{{b{dMn}}}h}{{{b{dN`}}}h}{{{b{dNb}}}h}{{{b{dNd}}}h}{{{b{Bl}}}Bl}{{{b{Bn}}}Bn}{{{b{C`}}}C`}{{{b{Cb}}}Cb}{{{b{Cd}}}Cd}{{{b{Cf}}}Cf}{{{b{Ch}}}Ch}{{{b{Cj}}}Cj}{{{b{Cl}}}Cl}{{{b{Cn}}}Cn}{{{b{D`}}}D`}{{{b{Db}}}Db}{{{b{Bf}}}Bf}{{{b{Dd}}}Dd}{{{b{Df}}}Df}{{{b{Dh}}}Dh}{{{b{Dj}}}Dj}{{{b{Dl}}}Dl}{{{b{Dn}}}Dn}{{{b{E`}}}E`}{{{b{Eb}}}Eb}{{{b{Ed}}}Ed}{{{b{Ef}}}Ef}{{{b{Eh}}}Eh}{{{b{Ej}}}Ej}{{{b{El}}}El}{{{b{En}}}En}{{{b{F`}}}F`}{{{b{Fb}}}Fb}{{{b{Fd}}}Fd}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{Bj}}}Bj}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{Hn}}}Hn}{{{b{I`}}}I`}{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Aj}}}Aj}{{{b{Ah}}}Ah}{{{b{Af}}}Af}{{{b{An}}}An}{{{b{Al}}}Al}{{{b{B`}}}B`}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{{b{Il}}}Il}{{{b{In}}}In}{{{b{J`}}}J`}{{{b{Jb}}}Jb}{{{b{Jd}}}Jd}{{{b{Jf}}}Jf}{{{b{Jh}}}Jh}{{{b{Jj}}}Jj}{{{b{Jl}}}Jl}{{{b{Jn}}}Jn}{{{b{K`}}}K`}{{{b{Kb}}}Kb}{{{b{Kd}}}Kd}{{{b{Kf}}}Kf}{{{b{Kh}}}Kh}{{{b{Kj}}}Kj}{{{b{Kl}}}Kl}{{{b{Kn}}}Kn}{{{b{L`}}}L`}{{{b{Lb}}}Lb}{{{b{Ld}}}Ld}{{{b{Lf}}}Lf}{{{b{Lh}}}Lh}{{{b{Lj}}}Lj}{{{b{Ll}}}Ll}{{{b{Ln}}}Ln}{{{b{M`}}}M`}{{{b{Mb}}}Mb}{{{b{Md}}}Md}{{{b{Mf}}}Mf}{{{b{Mh}}}Mh}{{{b{Mj}}}Mj}{{{b{Ml}}}Ml}{{{b{Mn}}}Mn}{{{b{N`}}}N`}{{{b{Nb}}}Nb}{{{b{Nd}}}Nd}{{b{b{dc}}}h{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{bh}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{b{Bf}}{b{Bf}}}Nf}{{{b{Bj}}{b{Bj}}}Nf}```````````````````{{}Bl}{{}Bn}{{}C`}{{}Cb}{{}Cd}{{}Cf}{{}Ch}{{}Cj}{{}Cl}{{}Cn}{{}D`}{{}Db}{{}Bf}{{}Dd}{{}Df}{{}Dh}{{}Dj}{{}Dl}{{}Dn}{{}E`}{{}Eb}{{}Ed}{{}Ef}{{}Eh}{{}Ej}{{}El}{{}En}{{}F`}{{}Fb}{{}Fd}{{}Ff}{{}Fh}{{}Fj}{{}Fl}{{}Fn}{{}G`}{{}Gb}{{}Gd}{{}Gf}{{}Gh}{{}Gj}{{}Gl}{{}Gn}{{}Bj}{{}H`}{{}Hb}{{}Hd}{{}Hf}{{}Hh}{{}Hj}{{}Hl}{{}Hn}{{}I`}{{}Ib}{{}Id}{{}If}{{}Aj}{{}Ah}{{}Af}{{}An}{{}Al}{{}B`}{{}Ih}{{}Ij}{{}Il}{{}In}{{}J`}{{}Jb}{{}Jd}{{}Jf}{{}Jh}{{}Jj}{{}Jl}{{}Jn}{{}K`}{{}Kb}{{}Kd}{{}Kf}{{}Kh}{{}Kj}{{}Kl}{{}Kn}{{}L`}{{}Lb}{{}Ld}{{}Lf}{{}Lh}{{}Lj}{{}Ll}{{}Ln}{{}M`}{{}Mb}{{}Md}{{}Mf}{{}Mh}{{}Mj}{{}Ml}{{}Mn}{{}N`}{{}Nb}{{}Nd}```````{{{b{Bl}}}n}{{{b{Bn}}}n}{{{b{C`}}}n}{{{b{Cb}}}n}{{{b{Cd}}}n}{{{b{Cf}}}n}{{{b{Ch}}}n}{{{b{Cj}}}n}{{{b{Cl}}}n}{{{b{Cn}}}n}{{{b{D`}}}n}{{{b{Db}}}n}{{{b{Dd}}}n}{{{b{Df}}}n}{{{b{Dh}}}n}{{{b{Dj}}}n}{{{b{Dl}}}n}{{{b{Dn}}}n}{{{b{E`}}}n}{{{b{Eb}}}n}{{{b{Ed}}}n}{{{b{Ef}}}n}{{{b{Eh}}}n}{{{b{Ej}}}n}{{{b{El}}}n}{{{b{En}}}n}{{{b{F`}}}n}{{{b{Fb}}}n}{{{b{Fd}}}n}{{{b{Ff}}}n}{{{b{Fh}}}n}{{{b{Fj}}}n}{{{b{Fl}}}n}{{{b{Fn}}}n}{{{b{G`}}}n}{{{b{Gb}}}n}{{{b{Gd}}}n}{{{b{Gf}}}n}{{{b{Gh}}}n}{{{b{Gj}}}n}{{{b{Gl}}}n}{{{b{Gn}}}n}{{{b{H`}}}n}{{{b{Hb}}}n}{{{b{Hd}}}n}{{{b{Hf}}}n}{{{b{Hh}}}n}{{{b{Hj}}}n}{{{b{Hl}}}n}{{{b{Hn}}}n}{{{b{I`}}}n}{{{b{Ib}}}n}{{{b{Id}}}n}{{{b{If}}}n}{{{b{Aj}}}n}{{{b{Ah}}}n}{{{b{Af}}}n}{{{b{An}}}n}{{{b{Al}}}n}{{{b{B`}}}n}{{{b{Ih}}}n}{{{b{Ij}}}n}{{{b{Il}}}n}{{{b{In}}}n}{{{b{J`}}}n}{{{b{Jb}}}n}{{{b{Jd}}}n}{{{b{Jf}}}n}{{{b{Jh}}}n}{{{b{Jj}}}n}{{{b{Jl}}}n}{{{b{Jn}}}n}{{{b{K`}}}n}{{{b{Kb}}}n}{{{b{Kd}}}n}{{{b{Kf}}}n}{{{b{Kh}}}n}{{{b{Kj}}}n}{{{b{Kl}}}n}{{{b{Kn}}}n}{{{b{L`}}}n}{{{b{Lb}}}n}{{{b{Ld}}}n}{{{b{Lf}}}n}{{{b{Lh}}}n}{{{b{Lj}}}n}{{{b{Ll}}}n}{{{b{Ln}}}n}{{{b{M`}}}n}{{{b{Mb}}}n}{{{b{Md}}}n}{{{b{Mf}}}n}{{{b{Mh}}}n}{{{b{Mj}}}n}{{{b{Ml}}}n}{{{b{Mn}}}n}{{{b{N`}}}n}{{{b{Nb}}}n}{{{b{Nd}}}n}```````````{{{b{Bl}}{b{Bl}}}A`}{{{b{Bn}}{b{Bn}}}A`}{{{b{C`}}{b{C`}}}A`}{{{b{Cb}}{b{Cb}}}A`}{{{b{Cd}}{b{Cd}}}A`}{{{b{Cf}}{b{Cf}}}A`}{{{b{Ch}}{b{Ch}}}A`}{{{b{Cj}}{b{Cj}}}A`}{{{b{Cl}}{b{Cl}}}A`}{{{b{Cn}}{b{Cn}}}A`}{{{b{D`}}{b{D`}}}A`}{{{b{Db}}{b{Db}}}A`}{{{b{Bf}}{b{Bf}}}A`}{{{b{Dd}}{b{Dd}}}A`}{{{b{Df}}{b{Df}}}A`}{{{b{Dh}}{b{Dh}}}A`}{{{b{Dj}}{b{Dj}}}A`}{{{b{Dl}}{b{Dl}}}A`}{{{b{Dn}}{b{Dn}}}A`}{{{b{E`}}{b{E`}}}A`}{{{b{Eb}}{b{Eb}}}A`}{{{b{Ed}}{b{Ed}}}A`}{{{b{Ef}}{b{Ef}}}A`}{{{b{Eh}}{b{Eh}}}A`}{{{b{Ej}}{b{Ej}}}A`}{{{b{El}}{b{El}}}A`}{{{b{En}}{b{En}}}A`}{{{b{F`}}{b{F`}}}A`}{{{b{Fb}}{b{Fb}}}A`}{{{b{Fd}}{b{Fd}}}A`}{{{b{Ff}}{b{Ff}}}A`}{{{b{Fh}}{b{Fh}}}A`}{{{b{Fj}}{b{Fj}}}A`}{{{b{Fl}}{b{Fl}}}A`}{{{b{Fn}}{b{Fn}}}A`}{{{b{G`}}{b{G`}}}A`}{{{b{Gb}}{b{Gb}}}A`}{{{b{Gd}}{b{Gd}}}A`}{{{b{Gf}}{b{Gf}}}A`}{{{b{Gh}}{b{Gh}}}A`}{{{b{Gj}}{b{Gj}}}A`}{{{b{Gl}}{b{Gl}}}A`}{{{b{Gn}}{b{Gn}}}A`}{{{b{Bj}}{b{Bj}}}A`}{{{b{H`}}{b{H`}}}A`}{{{b{Hb}}{b{Hb}}}A`}{{{b{Hd}}{b{Hd}}}A`}{{{b{Hf}}{b{Hf}}}A`}{{{b{Hh}}{b{Hh}}}A`}{{{b{Hj}}{b{Hj}}}A`}{{{b{Hl}}{b{Hl}}}A`}{{{b{Hn}}{b{Hn}}}A`}{{{b{I`}}{b{I`}}}A`}{{{b{Ib}}{b{Ib}}}A`}{{{b{Id}}{b{Id}}}A`}{{{b{If}}{b{If}}}A`}{{{b{Aj}}{b{Aj}}}A`}{{{b{Ah}}{b{Ah}}}A`}{{{b{Af}}{b{Af}}}A`}{{{b{An}}{b{An}}}A`}{{{b{Al}}{b{Al}}}A`}{{{b{B`}}{b{B`}}}A`}{{{b{Ih}}{b{Ih}}}A`}{{{b{Ij}}{b{Ij}}}A`}{{{b{Il}}{b{Il}}}A`}{{{b{In}}{b{In}}}A`}{{{b{J`}}{b{J`}}}A`}{{{b{Jb}}{b{Jb}}}A`}{{{b{Jd}}{b{Jd}}}A`}{{{b{Jf}}{b{Jf}}}A`}{{{b{Jh}}{b{Jh}}}A`}{{{b{Jj}}{b{Jj}}}A`}{{{b{Jl}}{b{Jl}}}A`}{{{b{Jn}}{b{Jn}}}A`}{{{b{K`}}{b{K`}}}A`}{{{b{Kb}}{b{Kb}}}A`}{{{b{Kd}}{b{Kd}}}A`}{{{b{Kf}}{b{Kf}}}A`}{{{b{Kh}}{b{Kh}}}A`}{{{b{Kj}}{b{Kj}}}A`}{{{b{Kl}}{b{Kl}}}A`}{{{b{Kn}}{b{Kn}}}A`}{{{b{L`}}{b{L`}}}A`}{{{b{Lb}}{b{Lb}}}A`}{{{b{Ld}}{b{Ld}}}A`}{{{b{Lf}}{b{Lf}}}A`}{{{b{Lh}}{b{Lh}}}A`}{{{b{Lj}}{b{Lj}}}A`}{{{b{Ll}}{b{Ll}}}A`}{{{b{Ln}}{b{Ln}}}A`}{{{b{M`}}{b{M`}}}A`}{{{b{Mb}}{b{Mb}}}A`}{{{b{Md}}{b{Md}}}A`}{{{b{Mf}}{b{Mf}}}A`}{{{b{Mh}}{b{Mh}}}A`}{{{b{Mj}}{b{Mj}}}A`}{{{b{Ml}}{b{Ml}}}A`}{{{b{Mn}}{b{Mn}}}A`}{{{b{N`}}{b{N`}}}A`}{{{b{Nb}}{b{Nb}}}A`}{{{b{Nd}}{b{Nd}}}A`}```````````````{{{b{Bl}}{b{dAb}}}Ad}{{{b{Bn}}{b{dAb}}}Ad}{{{b{C`}}{b{dAb}}}Ad}{{{b{Cb}}{b{dAb}}}Ad}{{{b{Cd}}{b{dAb}}}Ad}{{{b{Cf}}{b{dAb}}}Ad}{{{b{Ch}}{b{dAb}}}Ad}{{{b{Cj}}{b{dAb}}}Ad}{{{b{Cl}}{b{dAb}}}Ad}{{{b{Cn}}{b{dAb}}}Ad}{{{b{D`}}{b{dAb}}}Ad}{{{b{Db}}{b{dAb}}}Ad}{{{b{Bf}}{b{dAb}}}Ad}{{{b{Dd}}{b{dAb}}}Ad}{{{b{Df}}{b{dAb}}}Ad}{{{b{Dh}}{b{dAb}}}Ad}{{{b{Dj}}{b{dAb}}}Ad}{{{b{Dl}}{b{dAb}}}Ad}{{{b{Dn}}{b{dAb}}}Ad}{{{b{E`}}{b{dAb}}}Ad}{{{b{Eb}}{b{dAb}}}Ad}{{{b{Ed}}{b{dAb}}}Ad}{{{b{Ef}}{b{dAb}}}Ad}{{{b{Eh}}{b{dAb}}}Ad}{{{b{Ej}}{b{dAb}}}Ad}{{{b{El}}{b{dAb}}}Ad}{{{b{En}}{b{dAb}}}Ad}{{{b{F`}}{b{dAb}}}Ad}{{{b{Fb}}{b{dAb}}}Ad}{{{b{Fd}}{b{dAb}}}Ad}{{{b{Ff}}{b{dAb}}}Ad}{{{b{Fh}}{b{dAb}}}Ad}{{{b{Fj}}{b{dAb}}}Ad}{{{b{Fl}}{b{dAb}}}Ad}{{{b{Fn}}{b{dAb}}}Ad}{{{b{G`}}{b{dAb}}}Ad}{{{b{Gb}}{b{dAb}}}Ad}{{{b{Gd}}{b{dAb}}}Ad}{{{b{Gf}}{b{dAb}}}Ad}{{{b{Gh}}{b{dAb}}}Ad}{{{b{Gj}}{b{dAb}}}Ad}{{{b{Gl}}{b{dAb}}}Ad}{{{b{Gn}}{b{dAb}}}Ad}{{{b{Bj}}{b{dAb}}}Ad}{{{b{H`}}{b{dAb}}}Ad}{{{b{Hb}}{b{dAb}}}Ad}{{{b{Hd}}{b{dAb}}}Ad}{{{b{Hf}}{b{dAb}}}Ad}{{{b{Hh}}{b{dAb}}}Ad}{{{b{Hj}}{b{dAb}}}Ad}{{{b{Hl}}{b{dAb}}}Ad}{{{b{Hn}}{b{dAb}}}Ad}{{{b{I`}}{b{dAb}}}Ad}{{{b{Ib}}{b{dAb}}}Ad}{{{b{Id}}{b{dAb}}}Ad}{{{b{If}}{b{dAb}}}Ad}{{{b{Aj}}{b{dAb}}}Ad}{{{b{Ah}}{b{dAb}}}Ad}{{{b{Af}}{b{dAb}}}Ad}{{{b{An}}{b{dAb}}}Ad}{{{b{Al}}{b{dAb}}}Ad}{{{b{B`}}{b{dAb}}}Ad}{{{b{Ih}}{b{dAb}}}Ad}{{{b{Ij}}{b{dAb}}}Ad}{{{b{Il}}{b{dAb}}}Ad}{{{b{In}}{b{dAb}}}Ad}{{{b{J`}}{b{dAb}}}Ad}{{{b{Jb}}{b{dAb}}}Ad}{{{b{Jd}}{b{dAb}}}Ad}{{{b{Jf}}{b{dAb}}}Ad}{{{b{Jh}}{b{dAb}}}Ad}{{{b{Jj}}{b{dAb}}}Ad}{{{b{Jl}}{b{dAb}}}Ad}{{{b{Jn}}{b{dAb}}}Ad}{{{b{K`}}{b{dAb}}}Ad}{{{b{Kb}}{b{dAb}}}Ad}{{{b{Kd}}{b{dAb}}}Ad}{{{b{Kf}}{b{dAb}}}Ad}{{{b{Kh}}{b{dAb}}}Ad}{{{b{Kj}}{b{dAb}}}Ad}{{{b{Kl}}{b{dAb}}}Ad}{{{b{Kn}}{b{dAb}}}Ad}{{{b{L`}}{b{dAb}}}Ad}{{{b{Lb}}{b{dAb}}}Ad}{{{b{Ld}}{b{dAb}}}Ad}{{{b{Lf}}{b{dAb}}}Ad}{{{b{Lh}}{b{dAb}}}Ad}{{{b{Lj}}{b{dAb}}}Ad}{{{b{Ll}}{b{dAb}}}Ad}{{{b{Ln}}{b{dAb}}}Ad}{{{b{M`}}{b{dAb}}}Ad}{{{b{Mb}}{b{dAb}}}Ad}{{{b{Md}}{b{dAb}}}Ad}{{{b{Mf}}{b{dAb}}}Ad}{{{b{Mh}}{b{dAb}}}Ad}{{{b{Mj}}{b{dAb}}}Ad}{{{b{Ml}}{b{dAb}}}Ad}{{{b{Mn}}{b{dAb}}}Ad}{{{b{N`}}{b{dAb}}}Ad}{{{b{Nb}}{b{dAb}}}Ad}{{{b{Nd}}{b{dAb}}}Ad}{{{b{H`}}}Nh}`{cc{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Nj{{Nl{Bf}}}}{Nj{{Nl{Bj}}}}{{{b{Bh}}}{{Nl{Bf}}}}{{{b{Bh}}}{{Nl{Bj}}}}```{{{b{Bf}}{b{dc}}}hNn}{{{b{Bj}}{b{dc}}}hNn}``````````````{{}c{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{NjA`}0```````````````````````{{{b{Jl}}}{{b{Bh}}}}```````````````````{{{b{Bf}}{b{Bf}}}{{Nl{Nf}}}}{{{b{Bj}}{b{Bj}}}{{Nl{Nf}}}}`{{{b{Cl}}}Bf}``````````````````````````````````{{{b{dH`}}Nh}h}{{{b{dCl}}Bf}h}{{{b{dIj}}O`}h}{{{b{dDl}}Bj}h}`````````````{{{b{Ij}}}O`}```````````````````````{bc{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{c{{Bb{e}}}{}{}}00000000000{Nj{{Bb{BfOb}}}}11111111111111111111111111111111{Nj{{Bb{BjOb}}}}222222222222{{{b{l}}}{{Bb{Ajc}}}{}}33{{{b{l}}}{{Bb{Ahc}}}{}}{{{b{l}}}{{Bb{Afc}}}{}}5{{{b{l}}}{{Bb{Anc}}}{}}66{{{b{l}}}{{Bb{Alc}}}{}}7{{{b{l}}}{{Bb{B`c}}}{}}888888888888888888888888888888888888888{{}{{Bb{c}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{b{Dl}}}Bj}``````````{bBd}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}Od}````````````{{{b{O`}}}{{b{Bh}}}}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{O`}}}O`}{{b{b{dc}}}h{}}{bh}{{{b{O`}}{b{O`}}}Nf}{{}O`}{{{b{O`}}{b{O`}}}A`}{{{b{O`}}{b{dAb}}}Ad}{cc{}}{Nj{{Nl{O`}}}}{{{b{Bh}}}{{Nl{O`}}}}{{{b{O`}}{b{dc}}}hNn}{{}c{}}{NjA`}{{{b{O`}}{b{O`}}}{{Nl{Nf}}}}{bc{}}{c{{Bb{e}}}{}{}}{Nj{{Bb{O`Ob}}}}{{}{{Bb{c}}}{}}{bBd}````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Of}}}Of}{{b{b{dc}}}h{}}{bh}{{{b{Of}}{b{dc}}}hOh}{{{b{Of}}}n}{{{b{Of}}{b{Of}}}A`}{{{b{Of}}{b{dAb}}}Ad}{cc{}}{{}c{}}{{{b{d{Nl{Of}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}{bc{}}{c{{Bb{e}}}{}{}}?>```{{{b{Nh}}}{{b{Bh}}}}>={{{b{Nh}}}Nh}<;{{{b{Nh}}{b{Nh}}}Nf}{{}Nh}{{{b{Nh}}{b{Nh}}}A`}{{{b{Nh}}{b{dAb}}}Ad}:{Nj{{Nl{Nh}}}}{{{b{Bh}}}{{Nl{Nh}}}}{{{b{Nh}}{b{dc}}}hNn}<{NjA`}{{{b{Nh}}{b{Nh}}}{{Nl{Nf}}}}<{Nj{{Bb{NhOb}}}}<{{}{{Bb{c}}}{}}{bBd}````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{A@b}}}A@b}{{b{b{dc}}}h{}}{bh}{{{b{A@b}}{b{dc}}}hOh}{{{b{A@b}}}n}{{{b{A@b}}{b{A@b}}}A`}{{{b{A@b}}{b{dAb}}}Ad}{cc{}}{{}c{}}{{{b{d{Nl{A@b}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}{bc{}}{c{{Bb{e}}}{}{}}?>```=<{{{b{A@d}}}A@d};:{{{b{A@d}}{b{dc}}}hOh}{{{b{A@d}}}n}{{{b{A@d}}{b{A@d}}}A`}{{{b{A@d}}{b{dAb}}}Ad}98{{{b{d{Nl{A@d}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}76{{}{{Bb{c}}}{}}{bBd}````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{A@f}}}A@f}{{b{b{dc}}}h{}}{bh}{{{b{A@f}}{b{dc}}}hOh}{{{b{A@f}}}n}{{{b{A@f}}{b{A@f}}}A`}{{{b{A@f}}{b{dAb}}}Ad}{cc{}}{{}c{}}{{{b{d{Nl{A@f}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}{bc{}}{c{{Bb{e}}}{}{}}?>`````=<{{{b{A@h}}}A@h};:{{{b{A@h}}{b{dc}}}hOh}{{{b{A@h}}}n}{{{b{A@h}}{b{A@h}}}A`}{{{b{A@h}}{b{dAb}}}Ad}98{{{b{d{Nl{A@h}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}76{{}{{Bb{c}}}{}}{bBd}````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{A@j}}}A@j}{{b{b{dc}}}h{}}{bh}{{{b{A@j}}{b{dc}}}hOh}{{{b{A@j}}}n}{{{b{A@j}}{b{A@j}}}A`}{{{b{A@j}}{b{dAb}}}Ad}{cc{}}{{}c{}}{{{b{d{Nl{A@j}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}{bc{}}{c{{Bb{e}}}{}{}}?>````=<{{{b{A@l}}}A@l};:{{{b{A@l}}{b{dc}}}hOh}{{{b{A@l}}}n}{{{b{A@l}}{b{A@l}}}A`}{{{b{A@l}}{b{dAb}}}Ad}98{{{b{d{Nl{A@l}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}76{{}{{Bb{c}}}{}}{bBd}````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{A@n}}}A@n}{{b{b{dc}}}h{}}{bh}{{{b{A@n}}{b{dc}}}hOh}{{{b{A@n}}}n}{{{b{A@n}}{b{A@n}}}A`}{{{b{A@n}}{b{dAb}}}Ad}{cc{}}{{}c{}}{{{b{d{Nl{A@n}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}{bc{}}{c{{Bb{e}}}{}{}}?>````=<{{{b{AA`}}}AA`};:{{{b{AA`}}{b{dc}}}hOh}{{{b{AA`}}}n}{{{b{AA`}}{b{AA`}}}A`}{{{b{AA`}}{b{dAb}}}Ad}98{{{b{d{Nl{AA`}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}76{{}{{Bb{c}}}{}}{bBd}`````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{AAb}}}AAb}{{b{b{dc}}}h{}}{bh}{{{b{AAb}}{b{dc}}}hOh}{{{b{AAb}}}n}{{{b{AAb}}{b{AAb}}}A`}{{{b{AAb}}{b{dAb}}}Ad}{cc{}}{{}c{}}{{{b{d{Nl{AAb}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}{bc{}}{c{{Bb{e}}}{}{}}?>```=<{{{b{AAd}}}AAd};:{{{b{AAd}}{b{dc}}}hOh}{{{b{AAd}}}n}{{{b{AAd}}{b{AAd}}}A`}{{{b{AAd}}{b{dAb}}}Ad}98{{{b{d{Nl{AAd}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}76{{}{{Bb{c}}}{}}{bBd}```{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{dAAf}}}h}{{{b{dAAh}}}h}{{{b{dAAj}}}h}{{{b{AAf}}}AAf}{{{b{AAh}}}AAh}{{{b{AAj}}}AAj}{{b{b{dc}}}h{}}00{bh}00`{{}AAf}{{}AAh}{{}AAj}`{{{b{AAf}}}n}{{{b{AAh}}}n}{{{b{AAj}}}n}{{{b{AAf}}{b{AAf}}}A`}{{{b{AAh}}{b{AAh}}}A`}{{{b{AAj}}{b{AAj}}}A`}{{{b{AAf}}{b{dAb}}}Ad}{{{b{AAh}}{b{dAb}}}Ad}{{{b{AAj}}{b{dAb}}}Ad}{cc{}}00`{{}c{}}00{bc{}}00{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{bBd}00```````````````{{{b{AAl}}}{{b{Bh}}}}{{{b{AAn}}}{{b{Bh}}}}{b{{b{c}}}{}}0000000{{{b{d}}}{{b{dc}}}{}}0000000{{{b{dAB`}}}h}{{{b{dABb}}}h}{{{b{dABd}}}h}{{{b{dABf}}}h}{{{b{dABh}}}h}{{{b{dABj}}}h}{{{b{AB`}}}AB`}{{{b{ABb}}}ABb}{{{b{AAl}}}AAl}{{{b{ABd}}}ABd}{{{b{ABf}}}ABf}{{{b{ABh}}}ABh}{{{b{ABj}}}ABj}{{{b{AAn}}}AAn}{{b{b{dc}}}h{}}0000000{bh}0000000{{{b{AAl}}{b{AAl}}}Nf}{{{b{AAn}}{b{AAn}}}Nf}{{}AB`}{{}ABb}{{}AAl}{{}ABd}{{}ABf}{{}ABh}{{}ABj}{{}AAn}{{{b{AB`}}}n}{{{b{ABb}}}n}{{{b{ABd}}}n}{{{b{ABf}}}n}{{{b{ABh}}}n}{{{b{ABj}}}n}{{{b{AB`}}{b{AB`}}}A`}{{{b{ABb}}{b{ABb}}}A`}{{{b{AAl}}{b{AAl}}}A`}{{{b{ABd}}{b{ABd}}}A`}{{{b{ABf}}{b{ABf}}}A`}{{{b{ABh}}{b{ABh}}}A`}{{{b{ABj}}{b{ABj}}}A`}{{{b{AAn}}{b{AAn}}}A`}{{{b{AB`}}{b{dAb}}}Ad}{{{b{ABb}}{b{dAb}}}Ad}{{{b{AAl}}{b{dAb}}}Ad}{{{b{ABd}}{b{dAb}}}Ad}{{{b{ABf}}{b{dAb}}}Ad}{{{b{ABh}}{b{dAb}}}Ad}{{{b{ABj}}{b{dAb}}}Ad}{{{b{AAn}}{b{dAb}}}Ad}{cc{}}0000000{Nj{{Nl{AAl}}}}{Nj{{Nl{AAn}}}}{{{b{Bh}}}{{Nl{AAl}}}}{{{b{Bh}}}{{Nl{AAn}}}}`{{{b{AAl}}{b{dc}}}hNn}{{{b{AAn}}{b{dc}}}hNn}{{}c{}}0000000{NjA`}0{{{b{ABd}}}AAn}{{{b{ABh}}}AAn}```{{{b{AAl}}{b{AAl}}}{{Nl{Nf}}}}{{{b{AAn}}{b{AAn}}}{{Nl{Nf}}}}{{{b{AB`}}}AAl}```{{{b{dABd}}AAn}h}{{{b{dABh}}AAn}h}{{{b{dAB`}}AAl}h}`{bc{}}0000000{c{{Bb{e}}}{}{}}0{Nj{{Bb{AAlOb}}}}11111{Nj{{Bb{AAnOb}}}}2{{}{{Bb{c}}}{}}0000000{bBd}0000000```````{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000`{{{b{dABl}}}h}{{{b{dABn}}}h}{{{b{dAC`}}}h}{{{b{dACb}}}h}{{{b{dACd}}}h}{{{b{ABl}}}ABl}{{{b{ABn}}}ABn}{{{b{AC`}}}AC`}{{{b{ACb}}}ACb}{{{b{ACd}}}ACd}{{b{b{dc}}}h{}}0000{bh}0000{{}ABl}{{}ABn}{{}AC`}{{}ACb}{{}ACd}{{{b{ABl}}}n}{{{b{ABn}}}n}{{{b{AC`}}}n}{{{b{ACb}}}n}{{{b{ACd}}}n}``{{{b{ABl}}{b{ABl}}}A`}{{{b{ABn}}{b{ABn}}}A`}{{{b{AC`}}{b{AC`}}}A`}{{{b{ACb}}{b{ACb}}}A`}{{{b{ACd}}{b{ACd}}}A`}{{{b{ABl}}{b{dAb}}}Ad}{{{b{ABn}}{b{dAb}}}Ad}{{{b{AC`}}{b{dAb}}}Ad}{{{b{ACb}}{b{dAb}}}Ad}{{{b{ACd}}{b{dAb}}}Ad}{cc{}}0000{{}c{}}0000```{{{b{ABl}}}{{b{{ACh{ACf}}}}}}``{bc{}}0000{c{{Bb{e}}}{}{}}0000{{}{{Bb{c}}}{}}0000{bBd}0000``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{dACj}}}h}{{{b{dACl}}}h}{{{b{ACj}}}ACj}{{{b{ACl}}}ACl}{{b{b{dc}}}h{}}0{bh}0{{}ACj}{{}ACl}`{{{b{ACj}}}n}{{{b{ACl}}}n}{{{b{ACj}}{b{ACj}}}A`}{{{b{ACl}}{b{ACl}}}A`}{{{b{ACj}}{b{dAb}}}Ad}{{{b{ACl}}{b{dAb}}}Ad}{cc{}}0{{}c{}}0`{bc{}}0{c{{Bb{e}}}{}{}}0{{}{{Bb{c}}}{}}0{bBd}0````````````````{b{{b{c}}}{}}0000000000000{{{b{d}}}{{b{dc}}}{}}0000000000000{{{b{dACn}}}h}{{{b{dAD`}}}h}{{{b{dADb}}}h}{{{b{dADd}}}h}{{{b{dADf}}}h}{{{b{dADh}}}h}{{{b{dADj}}}h}{{{b{dADl}}}h}{{{b{dADn}}}h}{{{b{dAE`}}}h}{{{b{dAEb}}}h}{{{b{dAEd}}}h}{{{b{dAEf}}}h}{{{b{dAEh}}}h}{{{b{ACn}}}ACn}{{{b{AD`}}}AD`}{{{b{ADb}}}ADb}{{{b{ADd}}}ADd}{{{b{ADf}}}ADf}{{{b{ADh}}}ADh}{{{b{ADj}}}ADj}{{{b{ADl}}}ADl}{{{b{ADn}}}ADn}{{{b{AE`}}}AE`}{{{b{AEb}}}AEb}{{{b{AEd}}}AEd}{{{b{AEf}}}AEf}{{{b{AEh}}}AEh}{{b{b{dc}}}h{}}0000000000000{bh}0000000000000```{{}ACn}{{}AD`}{{}ADb}{{}ADd}{{}ADf}{{}ADh}{{}ADj}{{}ADl}{{}ADn}{{}AE`}{{}AEb}{{}AEd}{{}AEf}{{}AEh}{{{b{ACn}}}n}{{{b{AD`}}}n}{{{b{ADb}}}n}{{{b{ADd}}}n}{{{b{ADf}}}n}{{{b{ADh}}}n}{{{b{ADj}}}n}{{{b{ADl}}}n}{{{b{ADn}}}n}{{{b{AE`}}}n}{{{b{AEb}}}n}{{{b{AEd}}}n}{{{b{AEf}}}n}{{{b{AEh}}}n}``{{{b{ACn}}{b{ACn}}}A`}{{{b{AD`}}{b{AD`}}}A`}{{{b{ADb}}{b{ADb}}}A`}{{{b{ADd}}{b{ADd}}}A`}{{{b{ADf}}{b{ADf}}}A`}{{{b{ADh}}{b{ADh}}}A`}{{{b{ADj}}{b{ADj}}}A`}{{{b{ADl}}{b{ADl}}}A`}{{{b{ADn}}{b{ADn}}}A`}{{{b{AE`}}{b{AE`}}}A`}{{{b{AEb}}{b{AEb}}}A`}{{{b{AEd}}{b{AEd}}}A`}{{{b{AEf}}{b{AEf}}}A`}{{{b{AEh}}{b{AEh}}}A`}``{{{b{ACn}}{b{dAb}}}Ad}{{{b{AD`}}{b{dAb}}}Ad}{{{b{ADb}}{b{dAb}}}Ad}{{{b{ADd}}{b{dAb}}}Ad}{{{b{ADf}}{b{dAb}}}Ad}{{{b{ADh}}{b{dAb}}}Ad}{{{b{ADj}}{b{dAb}}}Ad}{{{b{ADl}}{b{dAb}}}Ad}{{{b{ADn}}{b{dAb}}}Ad}{{{b{AE`}}{b{dAb}}}Ad}{{{b{AEb}}{b{dAb}}}Ad}{{{b{AEd}}{b{dAb}}}Ad}{{{b{AEf}}{b{dAb}}}Ad}{{{b{AEh}}{b{dAb}}}Ad}{cc{}}0000000000000{{}c{}}0000000000000````{bc{}}0000000000000{c{{Bb{e}}}{}{}}0000000000000{{}{{Bb{c}}}{}}0000000000000{bBd}0000000000000`````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{dAEj}}}h}{{{b{dAEl}}}h}{{{b{AEj}}}AEj}{{{b{AEl}}}AEl}{{b{b{dc}}}h{}}0{bh}0``{{}AEj}{{}AEl}{{{b{AEj}}}n}{{{b{AEl}}}n}{{{b{AEj}}{b{AEj}}}A`}{{{b{AEl}}{b{AEl}}}A`}{{{b{AEj}}{b{dAb}}}Ad}{{{b{AEl}}{b{dAb}}}Ad}{cc{}}0{{}c{}}0`{bc{}}0{c{{Bb{e}}}{}{}}0{{}{{Bb{c}}}{}}0{bBd}0``````````{{{b{AEn}}}{{b{Bh}}}}{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000{{{b{dAF`}}}h}{{{b{dAFb}}}h}{{{b{dAFd}}}h}{{{b{dAFf}}}h}{{{b{AF`}}}AF`}{{{b{AFb}}}AFb}{{{b{AFd}}}AFd}{{{b{AFf}}}AFf}{{{b{AEn}}}AEn}{{b{b{dc}}}h{}}0000{bh}0000{{{b{AEn}}{b{AEn}}}Nf}`{{}AF`}{{}AFb}{{}AFd}{{}AFf}{{}AEn}{{{b{AFd}}}AFh}`0`{{{b{AF`}}}n}{{{b{AFb}}}n}{{{b{AFd}}}n}{{{b{AFf}}}n}{{{b{AF`}}{b{AF`}}}A`}{{{b{AFb}}{b{AFb}}}A`}{{{b{AFd}}{b{AFd}}}A`}{{{b{AFf}}{b{AFf}}}A`}{{{b{AEn}}{b{AEn}}}A`}{{{b{AF`}}{b{dAb}}}Ad}{{{b{AFb}}{b{dAb}}}Ad}{{{b{AFd}}{b{dAb}}}Ad}{{{b{AFf}}{b{dAb}}}Ad}{{{b{AEn}}{b{dAb}}}Ad}{cc{}}0000{Nj{{Nl{AEn}}}}{{{b{Bh}}}{{Nl{AEn}}}}{{{b{AFf}}}AEn}`{{{b{AEn}}{b{dc}}}hNn}{{}c{}}0000{NjA`}{{{b{AFd}}}A`}`{{{b{AEn}}{b{AEn}}}{{Nl{Nf}}}}```{{{b{dAFf}}AEn}h}{{{b{AFd}}}AFh}`0`{bc{}}0000{c{{Bb{e}}}{}{}}000{Nj{{Bb{AEnOb}}}}1{{}{{Bb{c}}}{}}0000{bBd}0000`````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{AFj}}}AFj}{{b{b{dc}}}h{}}{bh}{{{b{AFj}}{b{dc}}}hOh}{{{b{AFj}}}n}{{{b{AFj}}{b{AFj}}}A`}{{{b{AFj}}{b{dAb}}}Ad}{cc{}}{{}c{}}{{{b{d{Nl{AFj}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}{bc{}}{c{{Bb{e}}}{}{}}?>`=<{{{b{dAFl}}}h}{{{b{AFl}}}AFl}<;{{}AFl}{{{b{AFl}}}n}{{{b{AFl}}{b{AFl}}}A`}{{{b{AFl}}{b{dAb}}}Ad}:9{{{b{AFl}}}AFh}`0`{{{b{AFl}}}Oj}`0`0`0`1`0`0`0`1`{{{b{AFl}}}A`}`1`2`:1`1`1`1`1`9{{}{{Bb{c}}}{}}{bBd}```{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{AFn}}}AFn}{{b{b{dc}}}h{}}{bh}{{{b{AFn}}{b{dc}}}hOh}{{{b{AFn}}}n}{{{b{AFn}}{b{AFn}}}A`}{{{b{AFn}}{b{dAb}}}Ad}{cc{}}{{}c{}}{{{b{d{Nl{AFn}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}{bc{}}{c{{Bb{e}}}{}{}}?>`=<{{{b{dAG`}}}h}{{{b{AG`}}}AG`}<;{{}AG`}{{{b{AG`}}}n}{{{b{AG`}}{b{AG`}}}A`}{{{b{AG`}}{b{dAb}}}Ad}:9`76{{}{{Bb{c}}}{}}{bBd}`````{b{{b{c}}}{}}000{{{b{d}}}{{b{dc}}}{}}000{{{b{dAGb}}}h}{{{b{dAGd}}}h}{{{b{dAGf}}}h}{{{b{dAGh}}}h}{{{b{AGb}}}AGb}{{{b{AGd}}}AGd}{{{b{AGf}}}AGf}{{{b{AGh}}}AGh}{{b{b{dc}}}h{}}000{bh}000``{{}AGb}{{}AGd}{{}AGf}{{}AGh}{{{b{AGb}}}n}{{{b{AGd}}}n}{{{b{AGf}}}n}{{{b{AGh}}}n}{{{b{AGb}}{b{AGb}}}A`}{{{b{AGd}}{b{AGd}}}A`}{{{b{AGf}}{b{AGf}}}A`}{{{b{AGh}}{b{AGh}}}A`}{{{b{AGb}}{b{dAb}}}Ad}{{{b{AGd}}{b{dAb}}}Ad}{{{b{AGf}}{b{dAb}}}Ad}{{{b{AGh}}{b{dAb}}}Ad}{cc{}}000{{}c{}}000``{{{b{AGb}}}AGj}`{{{b{dAGb}}AGj}h}{bc{}}000{c{{Bb{e}}}{}{}}000{{}{{Bb{c}}}{}}000{bBd}000````{{{b{AGj}}}{{b{Bh}}}}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{AGj}}}AGj}{{b{b{dc}}}h{}}{bh}{{{b{AGj}}{b{AGj}}}Nf}{{}AGj}{{{b{AGj}}{b{AGj}}}A`}{{{b{AGj}}{b{dAb}}}Ad}{cc{}}{Nj{{Nl{AGj}}}}{{{b{Bh}}}{{Nl{AGj}}}}{{{b{AGj}}{b{dc}}}hNn}{{}c{}}{NjA`}{{{b{AGj}}{b{AGj}}}{{Nl{Nf}}}}{bc{}}{Nj{{Bb{AGjOb}}}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}``````````````````{b{{b{c}}}{}}000000000000{{{b{d}}}{{b{dc}}}{}}000000000000{{{b{dAGl}}}h}{{{b{dAGn}}}h}{{{b{dAH`}}}h}{{{b{dAHb}}}h}{{{b{dAHd}}}h}{{{b{dAHf}}}h}{{{b{dAHh}}}h}{{{b{dAHj}}}h}{{{b{dAHl}}}h}{{{b{dAHn}}}h}{{{b{dAI`}}}h}{{{b{dAIb}}}h}{{{b{dAId}}}h}{{{b{AGl}}}AGl}{{{b{AGn}}}AGn}{{{b{AH`}}}AH`}{{{b{AHb}}}AHb}{{{b{AHd}}}AHd}{{{b{AHf}}}AHf}{{{b{AHh}}}AHh}{{{b{AHj}}}AHj}{{{b{AHl}}}AHl}{{{b{AHn}}}AHn}{{{b{AI`}}}AI`}{{{b{AIb}}}AIb}{{{b{AId}}}AId}{{b{b{dc}}}h{}}000000000000{bh}000000000000{{}AGl}{{}AGn}{{}AH`}{{}AHb}{{}AHd}{{}AHf}{{}AHh}{{}AHj}{{}AHl}{{}AHn}{{}AI`}{{}AIb}{{}AId}`{{{b{AGl}}}n}{{{b{AGn}}}n}{{{b{AH`}}}n}{{{b{AHb}}}n}{{{b{AHd}}}n}{{{b{AHf}}}n}{{{b{AHh}}}n}{{{b{AHj}}}n}{{{b{AHl}}}n}{{{b{AHn}}}n}{{{b{AI`}}}n}{{{b{AIb}}}n}{{{b{AId}}}n}{{{b{AGl}}{b{AGl}}}A`}{{{b{AGn}}{b{AGn}}}A`}{{{b{AH`}}{b{AH`}}}A`}{{{b{AHb}}{b{AHb}}}A`}{{{b{AHd}}{b{AHd}}}A`}{{{b{AHf}}{b{AHf}}}A`}{{{b{AHh}}{b{AHh}}}A`}{{{b{AHj}}{b{AHj}}}A`}{{{b{AHl}}{b{AHl}}}A`}{{{b{AHn}}{b{AHn}}}A`}{{{b{AI`}}{b{AI`}}}A`}{{{b{AIb}}{b{AIb}}}A`}{{{b{AId}}{b{AId}}}A`}{{{b{AGl}}{b{dAb}}}Ad}{{{b{AGn}}{b{dAb}}}Ad}{{{b{AH`}}{b{dAb}}}Ad}{{{b{AHb}}{b{dAb}}}Ad}{{{b{AHd}}{b{dAb}}}Ad}{{{b{AHf}}{b{dAb}}}Ad}{{{b{AHh}}{b{dAb}}}Ad}{{{b{AHj}}{b{dAb}}}Ad}{{{b{AHl}}{b{dAb}}}Ad}{{{b{AHn}}{b{dAb}}}Ad}{{{b{AI`}}{b{dAb}}}Ad}{{{b{AIb}}{b{dAb}}}Ad}{{{b{AId}}{b{dAb}}}Ad}`{cc{}}000000000000{{}c{}}000000000000```{bc{}}000000000000{c{{Bb{e}}}{}{}}000000000000{{}{{Bb{c}}}{}}000000000000{bBd}000000000000```````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{dAIf}}}h}{{{b{dAIh}}}h}{{{b{dAIj}}}h}{{{b{AIf}}}AIf}{{{b{AIh}}}AIh}{{{b{AIj}}}AIj}{{b{b{dc}}}h{}}00{bh}00{{}AIf}{{}AIh}{{}AIj}{{{b{AIf}}}n}{{{b{AIh}}}n}{{{b{AIj}}}n}``{{{b{AIf}}{b{AIf}}}A`}{{{b{AIh}}{b{AIh}}}A`}{{{b{AIj}}{b{AIj}}}A`}`{{{b{AIf}}{b{dAb}}}Ad}{{{b{AIh}}{b{dAb}}}Ad}{{{b{AIj}}{b{dAb}}}Ad}{cc{}}00`{{}c{}}00{bc{}}00{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{bBd}00``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{dAIl}}}h}{{{b{AIl}}}AIl}{{b{b{dc}}}h{}}{bh}{{}AIl}{{{b{AIl}}}n}`{{{b{AIl}}{b{AIl}}}A`}{{{b{AIl}}{b{dAb}}}Ad}?>=<;:```````````````````{{{b{AIn}}}{{b{{ACh{ACf}}}}}}````::::::::::::::::::999999999999999999``{{{b{dAJ`}}}h}{{{b{dAJb}}}h}{{{b{dAJd}}}h}{{{b{dAJf}}}h}{{{b{dAJh}}}h}{{{b{dAJj}}}h}{{{b{dAJl}}}h}{{{b{dAJn}}}h}{{{b{dAK`}}}h}{{{b{dAKb}}}h}{{{b{dAKd}}}h}{{{b{dAKf}}}h}{{{b{dAKh}}}h}{{{b{dAIn}}}h}{{{b{dAKj}}}h}{{{b{dAKl}}}h}{{{b{dAKn}}}h}{{{b{dAL`}}}h}{{{b{AJ`}}}AJ`}{{{b{AJb}}}AJb}{{{b{AJd}}}AJd}{{{b{AJf}}}AJf}{{{b{AJh}}}AJh}{{{b{AJj}}}AJj}{{{b{AJl}}}AJl}{{{b{AJn}}}AJn}{{{b{AK`}}}AK`}{{{b{AKb}}}AKb}{{{b{AKd}}}AKd}{{{b{AKf}}}AKf}{{{b{AKh}}}AKh}{{{b{AIn}}}AIn}{{{b{AKj}}}AKj}{{{b{AKl}}}AKl}{{{b{AKn}}}AKn}{{{b{AL`}}}AL`}{{b{b{dc}}}h{}}00000000000000000{bh}00000000000000000{{}AJ`}{{}AJb}{{}AJd}{{}AJf}{{}AJh}{{}AJj}{{}AJl}{{}AJn}{{}AK`}{{}AKb}{{}AKd}{{}AKf}{{}AKh}{{}AIn}{{}AKj}{{}AKl}{{}AKn}{{}AL`}{{{b{AJ`}}}n}{{{b{AJb}}}n}{{{b{AJd}}}n}{{{b{AJf}}}n}{{{b{AJh}}}n}{{{b{AJj}}}n}{{{b{AJl}}}n}{{{b{AJn}}}n}{{{b{AK`}}}n}{{{b{AKb}}}n}{{{b{AKd}}}n}{{{b{AKf}}}n}{{{b{AKh}}}n}{{{b{AIn}}}n}{{{b{AKj}}}n}{{{b{AKl}}}n}{{{b{AKn}}}n}{{{b{AL`}}}n}```````{{{b{AJ`}}{b{AJ`}}}A`}{{{b{AJb}}{b{AJb}}}A`}{{{b{AJd}}{b{AJd}}}A`}{{{b{AJf}}{b{AJf}}}A`}{{{b{AJh}}{b{AJh}}}A`}{{{b{AJj}}{b{AJj}}}A`}{{{b{AJl}}{b{AJl}}}A`}{{{b{AJn}}{b{AJn}}}A`}{{{b{AK`}}{b{AK`}}}A`}{{{b{AKb}}{b{AKb}}}A`}{{{b{AKd}}{b{AKd}}}A`}{{{b{AKf}}{b{AKf}}}A`}{{{b{AKh}}{b{AKh}}}A`}{{{b{AIn}}{b{AIn}}}A`}{{{b{AKj}}{b{AKj}}}A`}{{{b{AKl}}{b{AKl}}}A`}{{{b{AKn}}{b{AKn}}}A`}{{{b{AL`}}{b{AL`}}}A`}`{{{b{AJ`}}{b{dAb}}}Ad}{{{b{AJb}}{b{dAb}}}Ad}{{{b{AJd}}{b{dAb}}}Ad}{{{b{AJf}}{b{dAb}}}Ad}{{{b{AJh}}{b{dAb}}}Ad}{{{b{AJj}}{b{dAb}}}Ad}{{{b{AJl}}{b{dAb}}}Ad}{{{b{AJn}}{b{dAb}}}Ad}{{{b{AK`}}{b{dAb}}}Ad}{{{b{AKb}}{b{dAb}}}Ad}{{{b{AKd}}{b{dAb}}}Ad}{{{b{AKf}}{b{dAb}}}Ad}{{{b{AKh}}{b{dAb}}}Ad}{{{b{AIn}}{b{dAb}}}Ad}{{{b{AKj}}{b{dAb}}}Ad}{{{b{AKl}}{b{dAb}}}Ad}{{{b{AKn}}{b{dAb}}}Ad}{{{b{AL`}}{b{dAb}}}Ad}{cc{}}00000000000000000````{{}c{}}00000000000000000{{{b{AIn}}}{{b{{ACh{ACf}}}}}}`````````````{bc{}}00000000000000000{c{{Bb{e}}}{}{}}00000000000000000{{}{{Bb{c}}}{}}00000000000000000{bBd}00000000000000000``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{ALb}}}ALb}{{b{b{dc}}}h{}}{bh}{{{b{ALb}}{b{dc}}}hOh}{{{b{ALb}}}n}{{{b{ALb}}{b{ALb}}}A`}{{{b{ALb}}{b{dAb}}}Ad}?>{{{b{d{Nl{ALb}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}=<;:``98{{{b{ALd}}}ALd}76{{{b{ALd}}{b{dc}}}hOh}{{{b{ALd}}}n}{{{b{ALd}}{b{ALd}}}A`}{{{b{ALd}}{b{dAb}}}Ad}{cc{}}{{}c{}}{{{b{d{Nl{ALd}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}{bc{}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}```{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{ALf}}}ALf}{{b{b{dc}}}h{}}{bh}{{{b{ALf}}{b{dc}}}hOh}{{{b{ALf}}}n}{{{b{ALf}}{b{ALf}}}A`}{{{b{ALf}}{b{dAb}}}Ad}?>{{{b{d{Nl{ALf}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}=<;:```98{{{b{ALh}}}ALh}76{{{b{ALh}}{b{dc}}}hOh}{{{b{ALh}}}n}{{{b{ALh}}{b{ALh}}}A`}{{{b{ALh}}{b{dAb}}}Ad}{cc{}}{{}c{}}{{{b{d{Nl{ALh}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}{bc{}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{ALj}}}ALj}{{b{b{dc}}}h{}}{bh}{{{b{ALj}}{b{dc}}}hOh}{{{b{ALj}}}n}{{{b{ALj}}{b{ALj}}}A`}{{{b{ALj}}{b{dAb}}}Ad}?>{{{b{d{Nl{ALj}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}=<;:````98{{{b{ALl}}}ALl}76{{{b{ALl}}{b{dc}}}hOh}{{{b{ALl}}}n}{{{b{ALl}}{b{ALl}}}A`}{{{b{ALl}}{b{dAb}}}Ad}{cc{}}{{}c{}}{{{b{d{Nl{ALl}}}}OjOl{b{dc}}On}{{Bb{hOb}}}A@`}{bc{}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}``````````{b{{b{c}}}{}}0000000{{{b{d}}}{{b{dc}}}{}}0000000`{{{b{dALn}}}h}{{{b{dAM`}}}h}{{{b{dAMb}}}h}{{{b{dAMd}}}h}{{{b{dAMf}}}h}{{{b{dAMh}}}h}{{{b{dAMj}}}h}{{{b{dAMl}}}h}{{{b{ALn}}}ALn}{{{b{AM`}}}AM`}{{{b{AMb}}}AMb}{{{b{AMd}}}AMd}{{{b{AMf}}}AMf}{{{b{AMh}}}AMh}{{{b{AMj}}}AMj}{{{b{AMl}}}AMl}{{b{b{dc}}}h{}}0000000{bh}0000000`{{}ALn}{{}AM`}{{}AMb}{{}AMd}{{}AMf}{{}AMh}{{}AMj}{{}AMl}```{{{b{ALn}}}n}{{{b{AM`}}}n}{{{b{AMb}}}n}{{{b{AMd}}}n}{{{b{AMf}}}n}{{{b{AMh}}}n}{{{b{AMj}}}n}{{{b{AMl}}}n}{{{b{ALn}}{b{ALn}}}A`}{{{b{AM`}}{b{AM`}}}A`}{{{b{AMb}}{b{AMb}}}A`}{{{b{AMd}}{b{AMd}}}A`}{{{b{AMf}}{b{AMf}}}A`}{{{b{AMh}}{b{AMh}}}A`}{{{b{AMj}}{b{AMj}}}A`}{{{b{AMl}}{b{AMl}}}A`}```{{{b{ALn}}{b{dAb}}}Ad}{{{b{AM`}}{b{dAb}}}Ad}{{{b{AMb}}{b{dAb}}}Ad}{{{b{AMd}}{b{dAb}}}Ad}{{{b{AMf}}{b{dAb}}}Ad}{{{b{AMh}}{b{dAb}}}Ad}{{{b{AMj}}{b{dAb}}}Ad}{{{b{AMl}}{b{dAb}}}Ad}{cc{}}0000000`````````{{}c{}}0000000````````````````````````{bc{}}0000000{c{{Bb{e}}}{}{}}0000000{{}{{Bb{c}}}{}}0000000`{bBd}0000000``","D":"GAh","p":[[1,"reference"],[0,"mut"],[5,"RawDigest",3],[1,"unit"],[5,"HexDigest",3],[5,"Variant",3],[1,"usize"],[1,"bool"],[5,"Formatter",4264],[8,"Result",4264],[5,"KernelEndorsement",89],[5,"FirmwareEndorsement",89],[5,"AmdSevSnpEndorsement",89],[5,"ApplicationEndorsement",89],[5,"SystemEndorsement",89],[5,"ContainerEndorsement",89],[6,"Result",4265],[5,"TypeId",4266],[6,"TeePlatform",89],[1,"str"],[6,"KeyType",89],[5,"FirmwareAttachment",89],[5,"KernelAttachment",89],[5,"MpmAttachment",89],[5,"Stage0Measurements",89],[5,"Stage1Measurements",89],[5,"OrchestratorMeasurements",89],[5,"Event",89],[5,"EventLog",89],[5,"RootLayerEvidence",89],[5,"LayerEvidence",89],[5,"ApplicationKeys",89],[5,"Evidence",89],[5,"CertificateAuthority",89],[5,"DiceData",89],[5,"TcbVersion",89],[5,"SkipVerification",89],[5,"VerifyingKey",89],[5,"VerifyingKeySet",89],[5,"VerifyingKeyReferenceValue",89],[5,"ClaimReferenceValue",89],[5,"EndorsementReferenceValue",89],[5,"BinaryReferenceValue",89],[5,"KernelDigests",89],[5,"KernelBinaryReferenceValue",89],[5,"FileReferenceValue",89],[5,"Regex",89],[5,"StringLiterals",89],[5,"TextReferenceValue",89],[5,"RootLayerReferenceValues",89],[5,"AmdSevReferenceValues",89],[5,"IntelTdxReferenceValues",89],[5,"InsecureReferenceValues",89],[5,"Digests",89],[5,"KernelLayerReferenceValues",89],[5,"SystemLayerReferenceValues",89],[5,"ApplicationLayerReferenceValues",89],[5,"ContainerLayerReferenceValues",89],[5,"EventReferenceValues",89],[5,"OakRestrictedKernelReferenceValues",89],[5,"OakContainersReferenceValues",89],[5,"CbReferenceValues",89],[5,"ReferenceValues",89],[5,"Endorsement",89],[5,"Signature",89],[5,"SignedEndorsement",89],[5,"TransparentReleaseEndorsement",89],[5,"RootLayerEndorsements",89],[5,"KernelLayerEndorsements",89],[5,"SystemLayerEndorsements",89],[5,"ApplicationLayerEndorsements",89],[5,"ContainerLayerEndorsements",89],[5,"OakRestrictedKernelEndorsements",89],[5,"OakContainersEndorsements",89],[5,"CbEndorsements",89],[5,"Endorsements",89],[5,"AttestationResults",89],[5,"EventAttestationResults",89],[5,"Validity",89],[5,"EndorsementDetails",89],[5,"ExtractedEvidence",89],[5,"RootLayerData",89],[5,"AmdAttestationReport",89],[5,"IntelTdxAttestationReport",89],[5,"FakeAttestationReport",89],[5,"KernelLayerData",89],[5,"ApplicationLayerData",89],[5,"SystemLayerData",89],[5,"ContainerLayerData",89],[5,"EventData",89],[5,"OakRestrictedKernelData",89],[5,"OakContainersData",89],[5,"CbData",89],[5,"OakStandaloneData",89],[5,"VerificationSkipped",89],[5,"RawDigests",89],[5,"ExpectedDigests",89],[5,"KernelExpectedValues",89],[5,"AmdSevExpectedValues",89],[5,"IntelTdxExpectedValues",89],[5,"InsecureExpectedValues",89],[5,"ExpectedRegex",89],[5,"ExpectedStringLiterals",89],[5,"TextExpectedValue",89],[5,"RootLayerExpectedValues",89],[5,"KernelLayerExpectedValues",89],[5,"SystemLayerExpectedValues",89],[5,"ContainerLayerExpectedValues",89],[5,"ApplicationLayerExpectedValues",89],[5,"EventExpectedValues",89],[5,"OakRestrictedKernelExpectedValues",89],[5,"OakContainersExpectedValues",89],[5,"CbExpectedValues",89],[5,"ExpectedValues",89],[6,"Ordering",4267],[6,"Format",2120],[1,"i32"],[6,"Option",4268],[10,"Hasher",4269],[6,"Status",2074],[5,"DecodeError",4270],[5,"String",4271],[6,"Type",2100],[10,"BufMut",4272],[1,"u32"],[6,"WireType",4273],[5,"DecodeContext",4273],[10,"Buf",4274],[6,"Type",2145],[6,"Type",2165],[6,"Type",2184],[6,"EvidenceValues",2204],[6,"Type",2225],[6,"Type",2245],[6,"Report",2265],[6,"Type",2285],[6,"Type",2305],[6,"Type",2326],[5,"GetImageResponse",2345],[5,"GetApplicationConfigResponse",2345],[5,"SendAttestationEvidenceRequest",2345],[6,"KeyProvisioningRole",2400],[6,"KeyOrigin",2400],[5,"GetKeyProvisioningRoleResponse",2400],[5,"GetGroupKeysResponse",2400],[5,"DeriveSessionKeysRequest",2400],[5,"DeriveSessionKeysResponse",2400],[5,"SignRequest",2400],[5,"SignResponse",2400],[5,"EncryptedRequest",2569],[5,"EncryptedResponse",2569],[5,"AeadEncryptedMessage",2569],[5,"SessionKeys",2569],[5,"Signature",2569],[1,"u8"],[1,"slice"],[5,"CpuProfileRequest",2664],[5,"CpuProfileResponse",2664],[5,"InitializeRequest",2700],[5,"InitializeResponse",2700],[5,"InvokeRequest",2700],[5,"InvokeResponse",2700],[5,"LookupDataEntry",2700],[5,"LookupDataChunk",2700],[5,"ExtendNextLookupDataRequest",2700],[5,"ExtendNextLookupDataResponse",2700],[5,"FinishNextLookupDataRequest",2700],[5,"FinishNextLookupDataResponse",2700],[5,"AbortNextLookupDataResponse",2700],[5,"Empty",2700],[5,"ReserveRequest",2700],[5,"ReserveResponse",2700],[5,"ConfigurationReport",2954],[5,"ServerPolicy",2954],[6,"HandlerType",2992],[5,"TcpCommunicationChannel",2992],[5,"VsockCommunicationChannel",2992],[5,"WasmtimeConfig",2992],[5,"ApplicationConfig",2992],[1,"u64"],[6,"CommunicationChannel",3106],[5,"PoolingAllocationConfig",3125],[6,"Data",3180],[5,"Entry",3199],[5,"LookupRequest",3218],[5,"LookupResponse",3218],[5,"EchoAndPanicRequest",3218],[5,"EchoAndPanicResponse",3218],[6,"Mode",3294],[5,"ReadRequestRequest",3320],[5,"ReadRequestResponse",3320],[5,"WriteResponseRequest",3320],[5,"WriteResponseResponse",3320],[5,"LogRequest",3320],[5,"LogResponse",3320],[5,"LookupDataRequest",3320],[5,"LookupDataResponse",3320],[5,"LookupDataMultiRequest",3320],[5,"LookupDataMultiResponse",3320],[5,"TestRequest",3320],[5,"TestResponse",3320],[5,"BytesValue",3320],[5,"GroupKeys",3554],[5,"GetGroupKeysRequest",3554],[5,"GetGroupKeysResponse",3554],[5,"InitialData",3609],[5,"EncryptedMessage",3629],[5,"EndorsedEvidence",3629],[5,"GetEndorsedEvidenceRequest",3629],[5,"GetEndorsedEvidenceResponse",3629],[5,"InvokeRequest",3629],[5,"InvokeResponse",3629],[5,"RequestWrapper",3629],[5,"ResponseWrapper",3629],[5,"AttestRequest",3629],[5,"AttestResponse",3629],[5,"NoiseHandshakeMessage",3629],[5,"SessionBinding",3629],[5,"HandshakeRequest",3629],[5,"HandshakeResponse",3629],[5,"PlaintextMessage",3629],[5,"SessionRequest",3629],[5,"SessionRequestWithSessionId",3629],[5,"SessionResponse",3629],[6,"HandshakeType",3968],[6,"HandshakeType",3986],[6,"Request",4004],[6,"Response",4023],[6,"Request",4042],[6,"Response",4062],[5,"Profile",4083],[5,"ValueType",4083],[5,"Sample",4083],[5,"Label",4083],[5,"Mapping",4083],[5,"Location",4083],[5,"Line",4083],[5,"Function",4083]],"r":[],"b":[[42,"impl-From%3CKernelEndorsement%3E-for-Variant"],[43,"impl-From%3CFirmwareEndorsement%3E-for-Variant"],[44,"impl-From%3CAmdSevSnpEndorsement%3E-for-Variant"],[45,"impl-From%3CApplicationEndorsement%3E-for-Variant"],[46,"impl-From%3CSystemEndorsement%3E-for-Variant"],[48,"impl-From%3CContainerEndorsement%3E-for-Variant"]],"c":"OjAAAAEAAAAAAAwAEAAAACgEMgSeBHMFdAUqBksGKghXCMcJyAn2C+0M","e":"OzAAAAEAABwN1gAAAAMABwAhACsABAAxAAEANwAgAFkAAABbAAQAYgAAAGYAAABoAAIAbQAAAG8AAABxAAAAdQAAAIAAAwCIAAMAjQABAJIAAACVAAAAmAAAAJsAAACdAAIAoQACAKYAAgCqAAAArAACALAAAAC0AAAAtgAAALgAAAC7AAAAvwAAAMEAAQDFAAIAyQAAANAABgDcAAMA5ADJALABlgFNAwMAUgMEAFkDZAC/AwEAxQNiADMEZgCbBAAAnQQAAKAEAQCnBGQAegUBAIAFAQCIBQEA8gUBAPYFAQD8BQoADQYAAA8GAgATBgAAHAYBACwGAAAzBgsAUgYAAFoGAQBeBgYAawY2AaUHAwCqB2gAFQgDABsIAwAgCAgALAgAAC8IBQA4CAUAQAgBAEUIAwBLCAAATQgIAFkIAABcCAgAZggEAG0IAQByCAMAeAgFAIAIAQCFCAwAlAgBAJkIDQCpCAEArggMAL0IAQDCCAwA0QgBANYIAwDbCAAA3ggEAOUIAQDqCAQA8AgGAPkIAQD+CA0ADgkBABMJAwAaCQQAIQkBACYJBAAsCRIAQAkMAFAJAABUCRMAaQkFAHEJTQDLCQIA2gkEAOAJAADmCSMADgoqADsKCQBPCgAAVAorAIQKCgCQCpAAIgsNAEwLPgCNCwsAmwsHAKgLBwCxCwAAswsAALYLAQC7Cx0A2gsEAOMLDQD6CwAAAwwAAAwMFAAkDAYALQwBADIMAwA3DAkARAwAAEYMAABIDAAASgwAAEwMAABODAAAUAwAAFIMAABUDAAAVgwAAFgMAABcDAAAXgwBAGEMAABjDAAAZQwAAGcMAABpDAUAcAwEAHcMAQB8DAMAgQwJAI0MBQCUDCwAyQwAAMwMAADODBMA4wwIAO8MAADyDHIAZg0mAKgNVQD/DQMABA4CAAoOAAAODgsAHA4HACUOAQApDgQAMg4BADYOAQA6DgEAQQ4AAEUOIwBqDmwA2Q4AANwOAADeDiQAFw8BACwPBAAyDwEAOQ9OAIoPAQCPDwoAnA8BAKEPCwCvDwEAtA8LAMIPAQDHDwwA1g8BANsPDADqDwEA7w8HAPgPAQD9Dw8ADhAfAC8QBwA6EA8ATRAHAF8QAABhEAEAexAAAIYQFwCfEAcA"}],["oak_restricted_kernel_dice",{"t":"IIHHH","n":["DerivedKey","DigestSha2_256","generate_derived_key","generate_dice_data","measure_digest_sha2_256"],"q":[[0,"oak_restricted_kernel_dice"],[5,"oak_dice::evidence"]],"i":"`````","f":"``{{{d{b}}{d{f}}}h}{{b{d{f}}}j}{{{d{{n{l}}}}}f}","D":"f","p":[[5,"Stage0DiceData",5],[1,"reference"],[8,"DigestSha2_256",0],[8,"DerivedKey",0],[5,"RestrictedKernelDiceData",5],[1,"u8"],[1,"slice"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAIAEAAAAAIAAwAFAA=="}],["oak_restricted_kernel_interface",{"t":"SSSESECCCQCPPPPPPGNNNNNNNNNNNNSSHHHHHHHHHHHHHHPPTTTPFFTTTPGSPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["DERIVED_KEY_FD","DICE_DATA_FD","EVENT_LOG_FD","Errno","OAK_CHANNEL_FD","Syscall","errno","initial_data","syscall","","syscalls","EBADF","EFAULT","EINVAL","EIO","ENOMEM","ENOSYS","Errno","borrow","borrow_mut","eq","fmt","","from","from_repr","into","to_string","try_from","try_into","type_id","INITIAL_DATA_HEADER_SIZE","INITIAL_DATA_V1_HEADER","exit","fsync","mmap","read","sys_exit","sys_fsync","sys_mmap","sys_read","sys_unstable_create_proccess","sys_unstable_switch_proccess","sys_write","unstable_create_proccess","unstable_switch_proccess","write","Exit","Fsync","MAP_ANONYMOUS","MAP_FIXED","MAP_PRIVATE","Mmap","MmapFlags","MmapProtection","PROT_EXEC","PROT_READ","PROT_WRITE","Read","Syscall","UNSTABLE_SYSCALL_SPACE","UnstableCreateProcess","UnstableSwitchProcess","Write","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","borrow_mut","","","complement","","contains","","difference","","empty","","extend","","fmt","","","","","","","","","","from","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","from_repr","insert","","intersection","","intersects","","into","","","into_iter","","is_all","","is_empty","","iter","","iter_names","","not","","remove","","set","","sub","","sub_assign","","symmetric_difference","","toggle","","try_from","","","try_into","","","type_id","","","union",""],"q":[[0,"oak_restricted_kernel_interface"],[11,"oak_restricted_kernel_interface::errno"],[30,"oak_restricted_kernel_interface::initial_data"],[32,"oak_restricted_kernel_interface::syscall"],[46,"oak_restricted_kernel_interface::syscalls"],[167,"core::fmt"],[168,"core::result"],[169,"core::option"],[170,"alloc::string"],[171,"core::any"],[172,"core::ffi"],[173,"core::iter::traits::collect"],[174,"bitflags::iter"]],"i":"```````````f00000`000000000000````````````````Cf0Bd001``Bb002``22201010101010011010120120101010101012000011111201010011010101201010120101010101010101010101010120120120101","f":"``````````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}{b{f}}}h}{{{b{f}}{b{dj}}}l}{{{b{f}}{b{dj}}}{{Ab{nA`}}}}{cc{}}{Ad{{Af{f}}}}{{}c{}}{bAh}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bAj}``{AlAn}{Al{{Ab{nf}}}}{{{Af{B`}}AdBbBdAlBf}{{Ab{{b{d{Bj{Bh}}}}f}}}}{{Al{b{d{Bj{Bh}}}}}{{Ab{Blf}}}}{Bfn}{BfBn}{{B`C`BfBfBfBf}Ad}{{BfB`C`}Bn}{{B`C`}Bn}{C`Bn}2{{{b{{Bj{Bh}}}}}{{Ab{Blf}}}}{Bl{{Ab{Blf}}}}{{Al{b{{Bj{Bh}}}}}{{Ab{Blf}}}}`````````````````{{}Bb}{{}Bd}{{BbBb}Bb}{{BdBd}Bd}{{{b{dBb}}Bb}n}{{{b{dBd}}Bd}n}3210{{{b{Bb}}}Al}0{{{b{Bd}}}Al}05432{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{BbBb}{BdBd}{{{b{Bb}}Bb}h}{{{b{Bd}}Bd}h};:=<{{{b{dBb}}c}n{{Cd{}{{Cb{Bb}}}}}}{{{b{dBd}}c}n{{Cd{}{{Cb{Bd}}}}}}{{{b{Cf}}{b{dj}}}l}{{{b{Bb}}{b{dj}}}l}000{{{b{Bd}}{b{dj}}}l}0000{cc{}}00{Al{{Af{Bb}}}}{Al{{Af{Bd}}}}{AlBb}0{AlBd}010{cBb{{Cd{}{{Cb{Bb}}}}}}{cBd{{Cd{}{{Cb{Bd}}}}}}{{{b{Ch}}}{{Af{Bb}}}}{{{b{Ch}}}{{Af{Bd}}}}{Bl{{Af{Cf}}}}{{{b{dBb}}Bb}n}{{{b{dBd}}Bd}n}{{BbBb}Bb}{{BdBd}Bd}{{{b{Bb}}Bb}h}{{{b{Bd}}Bd}h}{{}c{}}00{Bbc{}}{Bdc{}}{{{b{Bb}}}h}{{{b{Bd}}}h}10{{{b{Bb}}}{{Cj{Bb}}}}{{{b{Bd}}}{{Cj{Bd}}}}{{{b{Bb}}}{{Cl{Bb}}}}{{{b{Bd}}}{{Cl{Bd}}}}{BbBb}{BdBd}{{{b{dBb}}Bb}n}{{{b{dBd}}Bd}n}{{{b{dBb}}Bbh}n}{{{b{dBd}}Bdh}n}{{BbBb}Bb}{{BdBd}Bd}541054{c{{Ab{e}}}{}{}}00{{}{{Ab{c}}}{}}00{bAj}0043","D":"Ln","p":[[1,"reference"],[0,"mut"],[6,"Errno",11],[1,"bool"],[5,"Formatter",167],[8,"Result",167],[1,"unit"],[5,"Error",167],[6,"Result",168],[1,"isize"],[6,"Option",169],[5,"String",170],[5,"TypeId",171],[1,"i32"],[1,"never"],[6,"c_void",172],[5,"MmapProtection",46],[5,"MmapFlags",46],[8,"c_int",172],[1,"u8"],[1,"slice"],[1,"usize"],[8,"c_ssize_t",172],[8,"c_size_t",172],[17,"Item"],[10,"IntoIterator",173],[6,"Syscall",46],[1,"str"],[5,"Iter",174],[5,"IterNames",174]],"r":[[3,11],[5,46]],"b":[[21,"impl-Debug-for-Errno"],[22,"impl-Display-for-Errno"],[73,"impl-MmapProtection"],[74,"impl-Flags-for-MmapProtection"],[75,"impl-Flags-for-MmapFlags"],[76,"impl-MmapFlags"],[98,"impl-Binary-for-MmapProtection"],[99,"impl-Octal-for-MmapProtection"],[100,"impl-LowerHex-for-MmapProtection"],[101,"impl-UpperHex-for-MmapProtection"],[102,"impl-UpperHex-for-MmapFlags"],[103,"impl-Debug-for-MmapFlags"],[104,"impl-Binary-for-MmapFlags"],[105,"impl-Octal-for-MmapFlags"],[106,"impl-LowerHex-for-MmapFlags"],[112,"impl-Flags-for-MmapProtection"],[113,"impl-MmapProtection"],[114,"impl-MmapFlags"],[115,"impl-Flags-for-MmapFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEAAEAAAAAAABAAAAAYAAwALAAAAEwAEABsABAAhAA0ANQABADkAAABLAAEAUgAFAGIACQBxAAAAdAAAAIUAAQCdAAgA"}],["oak_restricted_kernel_sdk",{"t":"KKKKCCCMXMMCEMMCCFFNNNNNNNNNNNNNNNNNNNNFKKNNNMNNNNMNHNNNNMNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHNNNNNNNNNCNNENHCCCNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNKFNNNNNNNMNMNNNNNFNNNNNNNNNNNNNFNNNNNNNNHNNNNN","n":["Attester","EncryptionKeyHandle","Endorser","Signer","attestation","channel","crypto","endorse","entrypoint","extend","generate_recipient_context","handler","oak_attestation_verification","quote","sign","testing","utils","InstanceAttester","InstanceEndorser","borrow","","borrow_mut","","create","endorse","extend","from","","into","","quote","try_from","","try_into","","type_id","","vzip","","FileDescriptorChannel","Read","Write","borrow","borrow_mut","default","flush","","from","into","new","read_exact","","start_blocking_server","try_from","try_into","type_id","vzip","write_all","","InstanceEncryptionKeyHandle","InstanceSessionBinder","InstanceSigner","bind","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","create","","","from","","","generate_recipient_context","into","","","sign","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","EncryptionHandler","borrow","borrow_mut","create","from","into","invoke","try_from","try_into","type_id","vzip","MockAttester","MockEncryptionKeyHandle","MockSigner","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","create","","","extend","from","","","generate_recipient_context","into","","","quote","sign","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","Stderr","StderrLogger","alloc_error_handler","borrow","","borrow_mut","","enabled","flush","","from","","heap","into","","log","","panic_handler","samplestore","sync","timer","try_from","","try_into","","type_id","","vzip","","write_str","GrowableHeap","LockedGrowableHeap","alloc","allocate","borrow","","borrow_mut","","dealloc","deallocate","deref","empty","","from","","into","","try_from","","try_into","","type_id","","vzip","","SampleStore","StaticSampleStore","borrow","borrow_mut","eq","fmt","from","into","new","percentile","","record","","try_from","try_into","type_id","vzip","OnceCell","borrow","borrow_mut","default","deinit","from","get","into","new","set","try_from","try_into","type_id","vzip","Timer","borrow","borrow_mut","elapsed","fmt","from","into","new","new_rdtsc","rdtsc","timed","try_from","try_into","type_id","vzip"],"q":[[0,"oak_restricted_kernel_sdk"],[17,"oak_restricted_kernel_sdk::attestation"],[39,"oak_restricted_kernel_sdk::channel"],[59,"oak_restricted_kernel_sdk::crypto"],[100,"oak_restricted_kernel_sdk::handler"],[111,"oak_restricted_kernel_sdk::testing"],[153,"oak_restricted_kernel_sdk::utils"],[183,"oak_restricted_kernel_sdk::utils::heap"],[208,"oak_restricted_kernel_sdk::utils::samplestore"],[225,"oak_restricted_kernel_sdk::utils::sync"],[239,"oak_restricted_kernel_sdk::utils::timer"],[254,"oak_attestation_types::endorser"],[255,"oak_proto_rust::oak::attestation::v1"],[256,"core::option"],[257,"anyhow"],[258,"core::result"],[259,"oak_attestation_types::attester"],[260,"oak_crypto::encryption_key"],[261,"oak_crypto::hpke"],[262,"oak_crypto::signer"],[263,"alloc::vec"],[264,"core::any"],[265,"oak_channel"],[266,"alloc::boxed"],[267,"oak_core::samplestore"],[268,"micro_rpc"],[269,"alloc::sync"],[270,"core::ops::function"],[271,"oak_proto_rust::oak::crypto::v1"],[272,"core::alloc::layout"],[273,"log"],[274,"core::panic::panic_info"],[275,"core::fmt"],[276,"oak_enclave_runtime_support::heap"],[277,"core::ptr::non_null"],[278,"spinning_top::spinlock"],[279,"lock_api::mutex"],[280,"oak_core::sync"],[281,"oak_core::timer"],[282,"oak_restricted_kernel_sdk_proc_macro"],[283,"oak_enclave_runtime_support"],[284,"oak_core"]],"i":"```````b`AbAj``1An````BbBf101011010110101010```Bj00Bl1111C`2`222212```Cn0D`Db2101010102102101210010210210210210`Df000000000```EdE`Eb210101010210221002102110210210210210```FbEh1001010`10`0````101010101``FhFj010110101010101010101``Gd000000Cf1011111`Gl000000000000`Gn0000000`00000","f":"```````{{{d{b}}{h{{d{f}}}}}{{n{jl}}}}`{{{d{A`Ab}}{d{{Af{Ad}}}}}{{n{Ahl}}}}{{{d{Aj}}{d{{Af{Ad}}}}}{{n{All}}}}``{{{d{Ab}}}{{n{fl}}}}{{{d{An}}{d{{Af{Ad}}}}}{{B`{Ad}}}}````{d{{d{c}}}{}}0{{{d{A`}}}{{d{A`c}}}{}}0{{}{{Bd{Bb}}}}{{{d{Bf}}{h{{d{f}}}}}{{Bd{j}}}}{{{d{A`Bb}}{d{{Af{Ad}}}}}{{Bd{Ah}}}}{cc{}}0{{}c{}}0{{{d{Bb}}}{{Bd{f}}}}{c{{n{e}}}{}{}}0{{}{{n{c}}}{}}0{dBh}044```:9{{}Bj}{{{d{A`Bl}}}{{n{Ahl}}}}{{{d{A`Bj}}}{{Bd{Ah}}}}87{BnBj}{{{d{A`C`}}{d{A`{Af{Ad}}}}}{{n{Ahl}}}}{{{d{A`Bj}}{d{A`{Af{Ad}}}}}{{Bd{Ah}}}}{{{Cd{Cb}}c{d{A`Cf}}}{{Bd{Ch}}}{{Cl{}{{Cj{Ch}}}}}}987;{{{d{A`Bl}}{d{{Af{Ad}}}}}{{n{Ahl}}}}{{{d{A`Bj}}{d{{Af{Ad}}}}}{{Bd{Ah}}}}```{{{d{Cn}}{d{{Af{Ad}}}}}{{B`{Ad}}}}{d{{d{c}}}{}}00{{{d{A`}}}{{d{A`c}}}{}}00{{{d{D`}}}D`}{{{d{Db}}}Db}{{d{d{A`c}}}Ah{}}0{dAh}0{{}{{Bd{Cn}}}}{{}{{Bd{D`}}}}{{}{{Bd{Db}}}}{cc{}}00{{{d{D`}}{d{{Af{Ad}}}}}{{Bd{Al}}}}{{}c{}}00{{{d{Db}}{d{{Af{Ad}}}}}{{B`{Ad}}}}{dc{}}0{c{{n{e}}}{}{}}00{{}{{n{c}}}{}}00{dBh}00555`{d{{d{c}}}{}}{{{d{A`}}}{{d{A`c}}}{}}{{{Dd{Aj}}c}{{Df{c}}}{{Dj{{B`{Ad}}}{{Dh{{B`{Ad}}}}}}}}:8{{{Df{c}}{d{Dl}}}{{Bd{Dn}}}{{Dj{{B`{Ad}}}{{Dh{{B`{Ad}}}}}}}}6549```333222{{{d{E`}}}E`}{{{d{Eb}}}Eb}{{d{d{A`c}}}Ah{}}0{dAh}0{{}{{Bd{Ed}}}}{{}{{Bd{E`}}}}{{}{{Bd{Eb}}}}{{{d{A`Ed}}{d{{Af{Ad}}}}}{{Bd{Ah}}}}{cc{}}00{{{d{Eb}}{d{{Af{Ad}}}}}{{Bd{Al}}}}{{}c{}}00{{{d{Ed}}}{{Bd{f}}}}{{{d{E`}}{d{{Af{Ad}}}}}{{B`{Ad}}}}{dc{}}0{c{{n{e}}}{}{}}00{{}{{n{c}}}{}}00{dBh}00666``{EfCh}{d{{d{c}}}{}}0{{{d{A`}}}{{d{A`c}}}{}}0{{{d{Eh}}{d{Ej}}}El}{{}Ah}{{{d{Eh}}}Ah}>>`<<`{{{d{Eh}}{d{En}}}Ah}{{{d{F`}}}Ch}```::9988>>{{{d{A`Fb}}{d{Fd}}}{{n{AhFf}}}}``{{{d{Fh}}Ef}Ad}{{{d{A`Fj}}Ef}{{n{{Fl{Ad}}Ah}}}}9988{{{d{Fh}}AdEf}Ah}{{{d{A`Fj}}{Fl{Ad}}Fn}Ah}{{{d{Fh}}}{{d{{Gb{G`Fj}}}}}}{{}Fj}{{}Fh}{cc{}}0{{}c{}}0{c{{n{e}}}{}{}}0{{}{{n{c}}}{}}0{dBh}033``{d{{d{c}}}{}}{{{d{A`}}}{{d{A`c}}}{}}{{{d{Gd}}{d{Gd}}}El}{{{d{Gd}}{d{A`Gf}}}{{n{AhFf}}}}87{{}{{h{Gd}}}}{{{d{Cf}}Gh}{{h{Gj}}}}{{{d{Gd}}Gh}{{h{Gj}}}}{{{d{A`Cf}}Gj}Ah}{{{d{A`Gd}}Gj}Ah};:9<`87{{}{{Gl{c}}}{}}{{{d{{Gl{c}}}}}{{h{c}}}{}}?{{{d{{Gl{c}}}}}{{h{{d{c}}}}}{}}?2{{{d{{Gl{c}}}}c}{{n{Ahc}}}{}}?>={{}c{}}`=<{{{d{Gn}}}Gj}{{{d{Gn}}{d{A`Gf}}}{{n{AhFf}}}}{cc{}}3{GjGn}{{}Gn}{{}Gj}{cGjDj}{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{dBh}:","D":"Jd","p":[[10,"Endorser",0,254],[1,"reference"],[5,"Evidence",255],[6,"Option",256],[5,"Endorsements",255],[5,"Error",257],[6,"Result",258],[0,"mut"],[10,"Attester",0,259],[1,"u8"],[1,"slice"],[1,"unit"],[10,"EncryptionKeyHandle",0,260],[5,"RecipientContext",261],[10,"Signer",0,262],[5,"Vec",263],[5,"InstanceAttester",17],[8,"Result",257],[5,"InstanceEndorser",17],[5,"TypeId",264],[5,"FileDescriptorChannel",39],[10,"Write",39,265],[1,"i32"],[10,"Read",39,265],[10,"Channel",265],[5,"Box",266],[10,"SampleStore",208,267],[1,"never"],[17,"Error"],[10,"Transport",268],[5,"InstanceSessionBinder",59],[5,"InstanceEncryptionKeyHandle",59],[5,"InstanceSigner",59],[5,"Arc",269],[5,"EncryptionHandler",100],[17,"Output"],[10,"FnOnce",270],[5,"EncryptedRequest",271],[5,"EncryptedResponse",271],[5,"MockSigner",111],[5,"MockEncryptionKeyHandle",111],[5,"MockAttester",111],[5,"Layout",272],[5,"StderrLogger",153],[5,"Metadata",273],[1,"bool"],[5,"Record",273],[5,"PanicInfo",274],[5,"Stderr",153],[1,"str"],[5,"Error",275],[5,"LockedGrowableHeap",183,276],[5,"GrowableHeap",183,276],[5,"NonNull",277],[1,"usize"],[5,"RawSpinlock",278],[5,"Mutex",279],[5,"StaticSampleStore",208,267],[5,"Formatter",275],[1,"f64"],[1,"u64"],[5,"OnceCell",225,280],[5,"Timer",239,281]],"r":[[0,259],[1,260],[2,254],[3,262],[8,282],[40,265],[41,265],[165,283],[171,284],[172,284],[173,284],[183,276],[184,276],[208,267],[209,267],[225,280],[239,281],[248,281]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKwAJAAAAAAABAAAAAsAAQAPAAAAFAAGAB8ACAArAAEALgABADIAAgA2AAUAPQAAAD8ADwBSAAAAVgAOAGYAAgBrAAQAcwAPAIYAAACKABAAnQAGAKkAAQCvAAgAugAGAMIAAgDJAAgA0wADANkAAADbAAAA3QAEAOMAAgDqAAAA7AADAPEAAQD0AAAA9wAAAPsAAwA="}],["oak_session",{"t":"EKEECCCCMCCMCCKFKFGPFFPPFPMNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFKFFFFNNNNNOOOONNNNNNNNNNNNNNOONNNNNNOONNNNNNOOMNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNFFNNNNONNNNNNNNNNNNNNNNNNFFFGKKPPPPFFNNNNNNNNNNNNMNNONNNOONNNNNNNNMNNNNONNNNNNMNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNNNNFKNNMNNNNNNNFFKNNNNNNNNNNNNMNNNNMNNNNNNNNNNMNNKKFFGFFGPPPPNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNN","n":["ClientSession","ProtocolEngine","ServerSession","Session","attestation","config","dice_attestation","encryptors","get_outgoing_message","handshake","key_extractor","put_incoming_message","session","session_binding","AttestationAggregator","AttestationFailure","AttestationProvider","AttestationSuccess","AttestationType","Bidirectional","ClientAttestationProvider","DefaultAttestationAggregator","PeerUnidirectional","SelfUnidirectional","ServerAttestationProvider","Unattested","aggregate_attestation_results","","attestation_results","borrow","","","","","","borrow_mut","","","","","","clone","clone_into","clone_to_uninit","create","","error_messages","fmt","","from","","","","","","","get_outgoing_message","","into","","","","","","put_incoming_message","","reason","take_attestation_result","","","to_owned","to_string","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","AttestationProviderConfig","EncryptorConfig","EncryptorProvider","HandshakerConfig","OrderedChannelEncryptorProvider","SessionConfig","SessionConfigBuilder","add_peer_verifier","add_peer_verifier_with_key_extractor","add_self_attester","add_self_endorser","add_session_binder","attestation_aggregator","attestation_provider_config","attestation_type","binding_key_extractors","borrow","","","","","","borrow_mut","","","","","","build","builder","encryptor_config","encryptor_provider","from","","","","","","handshake_type","handshaker_config","into","","","","","","peer_static_public_key","peer_verifiers","provide_encryptor","","self_attesters","self_endorsers","self_static_private_key","session_binders","set_encryption_provider","set_peer_static_public_key","set_self_private_key","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","DiceAttestationVerifier","borrow","borrow_mut","create","from","into","try_from","try_into","type_id","verify","vzip","OrderedChannelEncryptor","UnorderedChannelEncryptor","borrow","","borrow_mut","","crypter","decrypt","","encrypt","","from","","into","","try_from","","","","try_into","","type_id","","vzip","","ClientHandshaker","ClientHandshakerBuilder","HandshakeResult","HandshakeType","Handshaker","HandshakerBuilder","NoiseKK","NoiseKN","NoiseNK","NoiseNN","ServerHandshaker","ServerHandshakerBuilder","borrow","","","","","","borrow_mut","","","","","","build","","","client_binding_expected","clone","clone_into","clone_to_uninit","config","","create","fmt","from","","","","","","get_handshake_hash","","","get_outgoing_message","","handshake_hash","into","","","","","","is_handshake_complete","","","new","put_incoming_message","","session_bindings","session_keys","take_session_keys","","","to_owned","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","DefaultSigningKeyExtractor","KeyExtractor","borrow","borrow_mut","extract_verifying_key","","from","into","try_from","try_into","type_id","vzip","ClientSession","ServerSession","Session","borrow","","borrow_mut","","create","","from","","get_outgoing_message","","into","","is_open","","","put_incoming_message","","read","","","try_from","","try_into","","type_id","","vzip","","write","","","SessionBinder","SessionBindingVerifier","SignatureBinder","SignatureBinderBuilder","SignatureBinderBuilderError","SignatureBindingVerifier","SignatureBindingVerifierBuilder","SignatureBindingVerifierBuilderError","UninitializedField","","ValidationError","","additional_data","","bind","","borrow","","","","","","borrow_mut","","","","","","build","","default","","fmt","","","","from","","","","","","","","","","into","","","","","","signer","to_string","","try_from","","","","","","try_into","","","","","","type_id","","","","","","verifier","verify_binding","","vzip","","","","",""],"q":[[0,"oak_session"],[14,"oak_session::attestation"],[96,"oak_session::config"],[177,"oak_session::dice_attestation"],[188,"oak_session::encryptors"],[213,"oak_session::handshake"],[302,"oak_session::key_extractor"],[314,"oak_session::session"],[348,"oak_session::session_binding"],[430,"core::option"],[431,"anyhow"],[432,"alloc::string"],[433,"oak_proto_rust::oak::attestation::v1"],[434,"alloc::collections::btree::map"],[435,"core::result"],[436,"core::fmt"],[437,"oak_proto_rust::oak::session::v1"],[438,"core::any"],[439,"oak_attestation_verification_types::verifier"],[440,"alloc::boxed"],[441,"oak_attestation_types::attester"],[442,"oak_attestation_types::endorser"],[443,"oak_proto_rust::oak::crypto::v1"],[444,"oak_crypto::encryptor"],[445,"oak_crypto::identity_key"],[446,"oak_attestation_verification_types::util"],[447,"alloc::sync"],[448,"alloc::vec"],[449,"oak_crypto::verifier"],[450,"derive_builder::error"],[451,"oak_crypto::signer"]],"i":"````````d``0```````An``00`0nAlAf01BbBfAh634210666621000342100621342106210C`3271453217453217453217453217```````Cd0000B`Db1002Dl2GfJb35241053303524101335241014Df35522666463521463521463521463521`Ej000000000``F`Fd100101010101100101010``````Dd000``JdFnGbG`Gd5432105Fj4336664326543216Fl32326654327032232660327654327654327654327654327``Hb0Cj1111111```HdHf1010101010Hl212102121212121021````````IfIj10I`IbD`Id35024Ih4613504343665546661355504613504654613504613504613503J`1572461","f":"````````{{{f{bd}}}{{j{{h{c}}}}}{}}``{{{f{bd}}{f{c}}}{{j{{h{l}}}}}{}}``````````````{{{f{n}}{Ad{A`Ab}}}{{Aj{AfAh}}}}{{{f{Al}}{Ad{A`Ab}}}{{Aj{AfAh}}}}`{f{{f{c}}}{}}00000{{{f{b}}}{{f{bc}}}{}}00000{{{f{An}}}An}{{f{f{bc}}}l{}}{fl}{B`{{Aj{BbBd}}}}{B`{{Aj{BfBd}}}}`{{{f{Ah}}{f{bBh}}}Bj}0{cc{}}000{BdAh}11{{{f{bBb}}}{{j{{h{Bl}}}}}}{{{f{bBf}}}{{j{{h{Bn}}}}}}{{}c{}}00000{{{f{bBb}}{f{Bn}}}{{j{{h{l}}}}}}{{{f{bBf}}{f{Bl}}}{{j{{h{l}}}}}}`{{{f{bC`}}}{{h{{Aj{AfAh}}}}}}{{{f{bBb}}}{{h{{Aj{AfAh}}}}}}{{{f{bBf}}}{{h{{Aj{AfAh}}}}}}{fc{}}{fA`}{c{{Aj{e}}}{}{}}00000{{}{{Aj{c}}}{}}00000{fCb}00000::::::```````{{CdA`{Ch{Cf}}}Cd}{{CdA`{Ch{Cf}}{Ch{Cj}}}Cd}{{CdA`{Ch{Cl}}}Cd}{{CdA`{Ch{Cn}}}Cd}{{CdA`{Ch{D`}}}Cd}````{f{{f{c}}}{}}00000{{{f{b}}}{{f{bc}}}{}}00000{CdDb}{{AnDd}Cd}``{cc{}}00000``{{}c{}}00000``{{{f{Df}}Dh}{{Aj{{Ch{Dj}}Bd}}}}{{{f{Dl}}Dh}{{Aj{{Ch{Dj}}Bd}}}}````{{Cd{Ch{Df}}}Cd}{{Cd{f{{E`{Dn}}}}}Cd}{{Cd{Ch{Eb}}}Cd}{c{{Aj{e}}}{}{}}00000{{}{{Aj{c}}}{}}00000{fCb}00000888888`=<{{Ed{Eh{Ef}}}Ej}:9321{{{f{Ej}}{f{El}}{f{En}}}{{j{Ab}}}}:``??>>`{{{f{bF`}}{f{Fb}}}{{j{Fb}}}}{{{f{bFd}}{f{Fb}}}{{j{Fb}}}}10==<<6{Dh{{Aj{F`Bd}}}}{{{Fh{DhFf}}}{{Aj{FdBd}}}}87766>>````````````{f{{f{c}}}{}}00000{{{f{b}}}{{f{bc}}}{}}00000{{{Ch{Fj}}}{{Aj{cBd}}}Fl}{{{Ch{Fn}}}{{Aj{G`Bd}}}}{{{Ch{Gb}}}{{Aj{GdBd}}}}`{{{f{Dd}}}Dd}{{f{f{bc}}}l{}}{fl}``{Gf{{j{G`}}}}{{{f{Dd}}{f{bBh}}}Bj}{cc{}}00000{{{f{Fl}}}{{Aj{{Gh{Dn}}Bd}}}}{{{f{G`}}}{{Aj{{Gh{Dn}}Bd}}}}{{{f{Gd}}}{{Aj{{Gh{Dn}}Bd}}}}{{{f{bG`}}}{{j{{h{Gj}}}}}}{{{f{bGd}}}{{j{{h{Gl}}}}}}`{{}c{}}00000{{{f{Fl}}}Gn}{{{f{G`}}}Gn}{{{f{Gd}}}Gn}{{GfGn}Gd}{{{f{bG`}}{f{Gl}}}{{j{{h{l}}}}}}{{{f{bGd}}{f{Gj}}}{{j{{h{l}}}}}}``{Fl{{Aj{DhBd}}}}{G`{{Aj{DhBd}}}}{Gd{{Aj{DhBd}}}}{fc{}}{c{{Aj{e}}}{}{}}00000{{}{{Aj{c}}}{}}00000{fCb}00000======``{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{Cj}}{f{Ab}}}{{Aj{{Ch{H`}}Bd}}}}{{{f{Hb}}{f{Ab}}}{{Aj{{Ch{H`}}Bd}}}}{cc{}}{{}c{}}8760```5544{Db{{Aj{HdBd}}}}{Db{{Aj{HfBd}}}}33{{{f{bHd}}}{{Aj{{h{Hh}}Bd}}}}{{{f{bHf}}}{{Aj{{h{Hj}}Bd}}}}44{{{f{Hl}}}Gn}{{{f{Hd}}}Gn}{{{f{Hf}}}Gn}{{{f{bHd}}{f{Hj}}}{{Aj{{h{l}}Bd}}}}{{{f{bHf}}{f{Hh}}}{{Aj{{h{l}}Bd}}}}{{{f{bHl}}}{{Aj{{h{Hn}}Bd}}}}{{{f{bHd}}}{{Aj{{h{Hn}}Bd}}}}{{{f{bHf}}}{{Aj{{h{Hn}}Bd}}}}{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{fCb}0??{{{f{bHl}}{f{Hn}}}{{Aj{lBd}}}}{{{f{bHd}}{f{Hn}}}{{Aj{lBd}}}}{{{f{bHf}}{f{Hn}}}{{Aj{lBd}}}}````````````{{I`{Gh{Dn}}}I`}{{Ib{Gh{Dn}}}Ib}{{{f{D`}}{f{{E`{Dn}}}}}{{Gh{Dn}}}}{{{f{Id}}{f{{E`{Dn}}}}}{{Gh{Dn}}}}{f{{f{c}}}{}}00000{{{f{b}}}{{f{bc}}}{}}00000{I`{{Aj{IdIf}}}}{Ib{{Aj{IhIj}}}}{{}I`}{{}Ib}{{{f{If}}{f{bBh}}}Bj}0{{{f{Ij}}{f{bBh}}}Bj}0{cc{}}0{IlIf}{A`If}222{IlIj}{A`Ij}4{{}c{}}00000{{I`{Ch{In}}}I`}{fA`}0{c{{Aj{e}}}{}{}}00000{{}{{Aj{c}}}{}}00000{fCb}00000{{Ib{Ch{H`}}}Ib}{{{f{J`}}{f{{E`{Dn}}}}{f{{E`{Dn}}}}}{{Aj{lBd}}}}{{{f{Ih}}{f{{E`{Dn}}}}{f{{E`{Dn}}}}}{{Aj{lBd}}}}888888","D":"Mj","p":[[0,"mut"],[10,"ProtocolEngine",0],[1,"reference"],[6,"Option",430],[8,"Result",431],[1,"unit"],[10,"AttestationAggregator",14],[5,"String",432],[5,"AttestationResults",433],[5,"BTreeMap",434],[5,"AttestationSuccess",14],[5,"AttestationFailure",14],[6,"Result",435],[5,"DefaultAttestationAggregator",14],[6,"AttestationType",14],[5,"AttestationProviderConfig",96],[5,"ClientAttestationProvider",14],[5,"Error",431],[5,"ServerAttestationProvider",14],[5,"Formatter",436],[8,"Result",436],[5,"AttestRequest",437],[5,"AttestResponse",437],[10,"AttestationProvider",14],[5,"TypeId",438],[5,"SessionConfigBuilder",96],[10,"AttestationVerifier",439],[5,"Box",440],[10,"KeyExtractor",302],[10,"Attester",441],[10,"Endorser",442],[10,"SessionBinder",348],[5,"SessionConfig",96],[6,"HandshakeType",213],[10,"EncryptorProvider",96],[5,"SessionKeys",443],[10,"Encryptor",444],[5,"OrderedChannelEncryptorProvider",96],[1,"u8"],[1,"slice"],[10,"IdentityKeyHandle",445],[5,"ReferenceValues",433],[10,"Clock",446],[5,"Arc",447],[5,"DiceAttestationVerifier",177],[5,"Evidence",433],[5,"Endorsements",433],[5,"OrderedChannelEncryptor",188],[5,"Payload",444],[5,"UnorderedChannelEncryptor",188],[1,"u32"],[1,"tuple"],[10,"HandshakerBuilder",213],[10,"Handshaker",213],[5,"ClientHandshakerBuilder",213],[5,"ClientHandshaker",213],[5,"ServerHandshakerBuilder",213],[5,"ServerHandshaker",213],[5,"HandshakerConfig",96],[5,"Vec",448],[5,"HandshakeRequest",437],[5,"HandshakeResponse",437],[1,"bool"],[10,"Verifier",449],[5,"DefaultSigningKeyExtractor",302],[5,"ClientSession",314],[5,"ServerSession",314],[5,"SessionRequest",437],[5,"SessionResponse",437],[10,"Session",314],[5,"PlaintextMessage",437],[5,"SignatureBinderBuilder",348],[5,"SignatureBindingVerifierBuilder",348],[5,"SignatureBinder",348],[6,"SignatureBinderBuilderError",348],[5,"SignatureBindingVerifier",348],[6,"SignatureBindingVerifierBuilderError",348],[5,"UninitializedFieldError",450],[10,"Signer",451],[10,"SessionBindingVerifier",348],[5,"EncryptorConfig",96],[5,"HandshakeResult",213]],"r":[[0,314],[2,314],[3,314]],"b":[[47,"impl-Display-for-AttestationFailure"],[48,"impl-Debug-for-AttestationFailure"],[380,"impl-Display-for-SignatureBinderBuilderError"],[381,"impl-Debug-for-SignatureBinderBuilderError"],[382,"impl-Debug-for-SignatureBindingVerifierBuilderError"],[383,"impl-Display-for-SignatureBindingVerifierBuilderError"],[386,"impl-From%3CUninitializedFieldError%3E-for-SignatureBinderBuilderError"],[387,"impl-From%3CString%3E-for-SignatureBinderBuilderError"],[391,"impl-From%3CUninitializedFieldError%3E-for-SignatureBindingVerifierBuilderError"],[392,"impl-From%3CString%3E-for-SignatureBindingVerifierBuilderError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEEBJAAAAAEAAwABAAYAAAAQAAAAEgAAABYAAAAbABYANgAAADkAAQBBACYAbAAUAIcAAQCPACYAuAAFAL8ACADMAAkA1wAAANkAAADcAAMA4QAXAAABAwALAQUAFAEgADcBAwA8AQAAPgEFAEYBAQBLAQMAUAEJAFsBBABiAQAAaQEPAHsBBQCDAQEAiAEBAJEBHQA="}],["oak_session_wasm",{"t":"PGPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["NoIncomingMessageExpected","PutIncomingMessageResult","Success","WasmClientSession","borrow","","borrow_mut","","create_unattested_noise_nn_session","describe","","describe_vector","","from","","from_abi","","get_outgoing_message","into","","into_abi","","is_none","","is_open","long_ref_from_abi","none","","put_incoming_message","read","ref_from_abi","ref_mut_from_abi","return_abi","","try_from","","try_from_js_value","","try_into","","type_id","","vector_from_abi","","vector_into_abi","","vzip","","write"],"q":[[0,"oak_session_wasm"],[49,"wasm_bindgen"],[50,"core::result"],[51,"alloc::vec"],[52,"core::option"],[53,"core::any"],[54,"alloc::boxed"]],"i":"A``0`f10100101010100101010001000001010101010101010","f":"````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{}{{j{fh}}}}{{}l}000{cc{}}0{nf}{nA`}{{{b{df}}}{{j{{Af{{Ad{Ab}}}}h}}}}{{}c{}}0{fn}{A`n}{{{b{c}}}Ah{}}{{{b{n}}}Ah}{{{b{f}}}Ah}{ce{}{}}66{{{b{df}}{b{{Aj{Ab}}}}}{{j{A`h}}}}811{{}}0{c{{j{e}}}{}{}}0{h{{j{fc}}}{}}{h{{j{A`}}}}{{}{{j{c}}}{}}0{bAl}0{c{{An{{Aj{f}}}}}{}}{c{{An{{Aj{A`}}}}}{}}{{{An{{Aj{f}}}}}c{}}{{{An{{Aj{A`}}}}}c{}}{{}c{}}0{{{b{df}}{b{{Aj{Ab}}}}}{{j{lh}}}}","D":"Ab","p":[[1,"reference"],[0,"mut"],[5,"WasmClientSession",0],[5,"JsValue",49],[6,"Result",50],[1,"unit"],[1,"u32"],[6,"PutIncomingMessageResult",0],[1,"u8"],[5,"Vec",51],[6,"Option",52],[1,"bool"],[1,"slice"],[5,"TypeId",53],[5,"Box",54]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACgABQAAAA0AEAABABUAAwAaAAIAHwARAA=="}],["oak_sev_snp_attestation_report",{"t":"FFTTTPFFPTPFFTSTTTTGGTFPPOONNONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNOOOOONNNNOOOOOOOONNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNOOONNNNNNNNNNNNNNNNNNNNNNNNNOOONNOOONNOOOOONNOOONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOO","n":["AttestationReport","AttestationReportData","CIPHERTEXT_HIDING_DRAM_EN","DEBUG","ECC_EN","EcdsaP384Sha384","EcdsaSignature","GuestPolicy","Invalid","MIGRATE_MA","None","PlatformInfo","PolicyFlags","RAPL_DIS","REPORT_DATA_SIZE","RESERVED","SINGLE_SOCKET","SMT","SMT_EN","SigningAlgorithm","SigningKey","TSME_EN","TcbVersion","VCEK","VLEK","abi_major","abi_minor","all","","author_key_digest","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","boot_loader","borrow","","","","","","","","","borrow_mut","","","","","","","","","chip_id","committed_build","committed_major","committed_minor","committed_tcb","complement","","contains","","cpuid_fam_id","cpuid_mod_id","cpuid_step","current_build","current_major","current_minor","current_tcb","data","default","","difference","","empty","","eq","","extend","","family_id","flags","fmt","","","","","","","","","","","","","","","from","","","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","from_report_data","from_repr","","get_flags","get_mask_chip_key","get_platform_info","get_signature_algo","get_signing_key","guest_svn","has_author_key","has_debug_flag","host_data","id_key_digest","image_id","insert","","intersection","","intersects","","into","","","","","","","","","into_iter","","is_all","","is_empty","","iter","","iter_names","","launch_tcb","measurement","microcode","not","","platform_info","policy","r","remove","","report_data","report_id","report_id_ma","reported_tcb","s","set","","signature","signature_algo","snp","sub","","sub_assign","","symmetric_difference","","tee","toggle","","try_from","","","","","","","","","try_into","","","","","","","","","type_id","","","","","","","","","union","","validate","","","","validate_format","version","vmpl"],"q":[[0,"oak_sev_snp_attestation_report"],[234,"core::iter::traits::collect"],[235,"core::fmt"],[236,"core::option"],[237,"core::result"],[238,"bitflags::iter"],[239,"core::any"]],"i":"``bd1Ab``01Ad``3`2223``3`00Bb043B`5454545455445454BdAj2754316Bf1386542703333387873333333187878765873413888865427777013865427087887787878716543333331333878787138654270878787878733287330873333087132878787287138654270138654270138654270871342033","f":"```````````````````````````{{}b}{{}d}`{{bb}b}{{dd}d}{{{h{fb}}b}j}{{{h{fd}}d}j}3210{{{h{b}}}l}0{{{h{d}}}n}05432`{h{{h{c}}}{}}00000000{{{h{f}}}{{h{fc}}}{}}00000000`````{bb}{dd}{{{h{b}}b}A`}{{{h{d}}d}A`}````````=<;:=<{{{h{Ab}}{h{Ab}}}A`}{{{h{Ad}}{h{Ad}}}A`}{{{h{fb}}c}j{{Ah{}{{Af{b}}}}}}{{{h{fd}}c}j{{Ah{}{{Af{d}}}}}}``{{{h{Aj}}{h{fAl}}}An}{{{h{B`}}{h{fAl}}}An}{{{h{b}}{h{fAl}}}An}000{{{h{Ab}}{h{fAl}}}An}{{{h{Ad}}{h{fAl}}}An}{{{h{Bb}}{h{fAl}}}An}{{{h{Bd}}{h{fAl}}}An}{{{h{d}}{h{fAl}}}An}000{{{h{Bf}}{h{fAl}}}An}{cc{}}00000000{l{{Bh{b}}}}{n{{Bh{d}}}}{lb}0{nd}010{cb{{Ah{}{{Af{b}}}}}}{cd{{Ah{}{{Af{d}}}}}}{{{h{Bj}}}{{Bh{b}}}}{{{h{Bj}}}{{Bh{d}}}}{{{Bn{Bl}}}Aj}{C`{{Bh{Ab}}}}{C`{{Bh{Ad}}}}{{{h{Bb}}}{{Bh{d}}}}{{{h{B`}}}A`}{{{h{B`}}}b}{{{h{B`}}}{{Bh{Ab}}}}{{{h{B`}}}{{Bh{Ad}}}}`3{{{h{Aj}}}{{Cb{A`{h{Bj}}}}}}```{{{h{fb}}b}j}{{{h{fd}}d}j}{{bb}b}{{dd}d}{{{h{b}}b}A`}{{{h{d}}d}A`}{{}c{}}00000000{bc{}}{dc{}}{{{h{b}}}A`}{{{h{d}}}A`}10{{{h{b}}}{{Cd{b}}}}{{{h{d}}}{{Cd{d}}}}{{{h{b}}}{{Cf{b}}}}{{{h{d}}}{{Cf{d}}}}```{bb}{dd}```{{{h{fb}}b}j}{{{h{fd}}d}j}`````{{{h{fb}}bA`}j}{{{h{fd}}dA`}j}```{{bb}b}{{dd}d}5410`54{c{{Cb{e}}}{}{}}00000000{{}{{Cb{c}}}{}}00000000{hCh}0000000043{{{h{Aj}}}{{Cb{j{h{Bj}}}}}}{{{h{B`}}}{{Cb{j{h{Bj}}}}}}{{{h{Bb}}}{{Cb{j{h{Bj}}}}}}{{{h{Bd}}}{{Cb{j{h{Bj}}}}}}{{{h{Bf}}}{{Cb{j{h{Bj}}}}}}``","D":"AD`","p":[[5,"PlatformInfo",0],[5,"PolicyFlags",0],[0,"mut"],[1,"reference"],[1,"unit"],[1,"u64"],[1,"u16"],[1,"bool"],[6,"SigningAlgorithm",0],[6,"SigningKey",0],[17,"Item"],[10,"IntoIterator",234],[5,"AttestationReport",0],[5,"Formatter",235],[8,"Result",235],[5,"AttestationReportData",0],[5,"GuestPolicy",0],[5,"TcbVersion",0],[5,"EcdsaSignature",0],[6,"Option",236],[1,"str"],[1,"u8"],[1,"array"],[1,"u32"],[6,"Result",237],[5,"Iter",238],[5,"IterNames",238],[5,"TypeId",239]],"r":[],"b":[[38,"impl-PlatformInfo"],[39,"impl-Flags-for-PlatformInfo"],[40,"impl-PolicyFlags"],[41,"impl-Flags-for-PolicyFlags"],[96,"impl-LowerHex-for-PlatformInfo"],[97,"impl-Binary-for-PlatformInfo"],[98,"impl-UpperHex-for-PlatformInfo"],[99,"impl-Octal-for-PlatformInfo"],[104,"impl-Binary-for-PolicyFlags"],[105,"impl-Octal-for-PolicyFlags"],[106,"impl-LowerHex-for-PolicyFlags"],[107,"impl-UpperHex-for-PolicyFlags"],[120,"impl-PlatformInfo"],[121,"impl-Flags-for-PlatformInfo"],[122,"impl-PolicyFlags"],[123,"impl-Flags-for-PolicyFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEoADgALAAAAGAABACgAAAAqAAAAMAARAFMAAQBZAAEAXwAOAHoAAAB8AAAAigAAAI0AAACgAAEAxwAaAA=="}],["oak_stage0_dice",{"t":"IHHHHHH","n":["DerivedKey","derive_sealing_cdi","dice_data_proto_to_stage0_dice_data","encode_stage0_event","generate_initial_dice_data","mock_attestation_report","mock_derived_key"],"q":[[0,"oak_stage0_dice"],[7,"oak_proto_rust::oak::attestation::v1"],[8,"oak_dice::evidence"],[9,"core::result"],[10,"alloc::vec"],[11,"oak_sev_snp_attestation_report"],[12,"core::ops::function"]],"i":"```````","f":"`{{{d{b}}{d{f}}}b}{{{d{h}}}{{n{j{d{l}}}}}}{f{{Ab{A`}}}}{{cAd}{{n{h{d{l}}}}}{{Al{{Af{A`}}}{{Ah{{n{Aj{d{l}}}}}}}}}}{{{Af{A`}}}{{n{Aj{d{l}}}}}}{{}{{n{b{d{l}}}}}}","D":"j","p":[[8,"DerivedKey",0],[1,"reference"],[5,"Stage0Measurements",7],[5,"DiceData",7],[5,"Stage0DiceData",8],[1,"str"],[6,"Result",9],[1,"u8"],[5,"Vec",10],[6,"TeePlatform",8],[1,"array"],[17,"Output"],[5,"AttestationReport",11],[10,"FnOnce",12]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAIAEAAAAAEAAwAEAA=="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[157,135,182,415,16041,1694,1656,448,285,1631,4791,880,2203,1605,1311,4024,1586,307,1112,3872,3559,4854,1598,8532,6656,1018,259,1769,835,772,236,232,9310,2564,22537,871,5745,73983,502,4759,7927,11401,1537,5013,912]}