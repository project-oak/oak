(function() {var type_impls = {
"oak_stage0":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-BumpAllocator%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/oak_stage0/allocator.rs.html#69-73\">source</a><a href=\"#impl-BumpAllocator%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"oak_stage0/allocator/struct.BumpAllocator.html\" title=\"struct oak_stage0::allocator::BumpAllocator\">BumpAllocator</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.uninit\" class=\"method\"><a class=\"src rightside\" href=\"src/oak_stage0/allocator.rs.html#70-72\">source</a><h4 class=\"code-header\">pub const fn <a href=\"oak_stage0/allocator/struct.BumpAllocator.html#tymethod.uninit\" class=\"fn\">uninit</a>() -&gt; Self</h4></section></div></details>",0,"oak_stage0::BootAllocator"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Allocator-for-BumpAllocator%3CN%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/oak_stage0/allocator.rs.html#75-106\">source</a><a href=\"#impl-Allocator-for-BumpAllocator%3CN%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const N: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html\" title=\"trait core::alloc::Allocator\">Allocator</a> for <a class=\"struct\" href=\"oak_stage0/allocator/struct.BumpAllocator.html\" title=\"struct oak_stage0::allocator::BumpAllocator\">BumpAllocator</a>&lt;N&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.allocate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/oak_stage0/allocator.rs.html#76-101\">source</a><a href=\"#method.allocate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html#tymethod.allocate\" class=\"fn\">allocate</a>(&amp;self, layout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/layout/struct.Layout.html\" title=\"struct core::alloc::layout::Layout\">Layout</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span><div class='docblock'>Attempts to allocate a block of memory. <a href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html#tymethod.allocate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deallocate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/oak_stage0/allocator.rs.html#103-105\">source</a><a href=\"#method.deallocate\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html#tymethod.deallocate\" class=\"fn\">deallocate</a>(&amp;self, _: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;, _: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/layout/struct.Layout.html\" title=\"struct core::alloc::layout::Layout\">Layout</a>)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span><div class='docblock'>Deallocates the memory referenced by <code>ptr</code>. <a href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html#tymethod.deallocate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.allocate_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/alloc/mod.rs.html#147\">source</a><a href=\"#method.allocate_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html#method.allocate_zeroed\" class=\"fn\">allocate_zeroed</a>(&amp;self, layout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/layout/struct.Layout.html\" title=\"struct core::alloc::layout::Layout\">Layout</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span><div class='docblock'>Behaves like <code>allocate</code>, but also ensures that the returned memory is zero-initialized. <a href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html#method.allocate_zeroed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.grow\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/alloc/mod.rs.html#203-208\">source</a><a href=\"#method.grow\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html#method.grow\" class=\"fn\">grow</a>(\n    &amp;self,\n    ptr: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    old_layout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/layout/struct.Layout.html\" title=\"struct core::alloc::layout::Layout\">Layout</a>,\n    new_layout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/layout/struct.Layout.html\" title=\"struct core::alloc::layout::Layout\">Layout</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span><div class='docblock'>Attempts to extend the memory block. <a href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html#method.grow\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.grow_zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/alloc/mod.rs.html#266-271\">source</a><a href=\"#method.grow_zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html#method.grow_zeroed\" class=\"fn\">grow_zeroed</a>(\n    &amp;self,\n    ptr: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    old_layout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/layout/struct.Layout.html\" title=\"struct core::alloc::layout::Layout\">Layout</a>,\n    new_layout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/layout/struct.Layout.html\" title=\"struct core::alloc::layout::Layout\">Layout</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span><div class='docblock'>Behaves like <code>grow</code>, but also ensures that the new contents are set to zero before being\nreturned. <a href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html#method.grow_zeroed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/alloc/mod.rs.html#330-335\">source</a><a href=\"#method.shrink\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html#method.shrink\" class=\"fn\">shrink</a>(\n    &amp;self,\n    ptr: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;,\n    old_layout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/layout/struct.Layout.html\" title=\"struct core::alloc::layout::Layout\">Layout</a>,\n    new_layout: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/layout/struct.Layout.html\" title=\"struct core::alloc::layout::Layout\">Layout</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/alloc/struct.AllocError.html\" title=\"struct core::alloc::AllocError\">AllocError</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span><div class='docblock'>Attempts to shrink the memory block. <a href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html#method.shrink\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/nightly/src/core/alloc/mod.rs.html#360-362\">source</a><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>allocator_api</code>)</span></div></span><div class='docblock'>Creates a “by reference” adapter for this instance of <code>Allocator</code>. <a href=\"https://doc.rust-lang.org/nightly/core/alloc/trait.Allocator.html#method.by_ref\">Read more</a></div></details></div></details>","Allocator","oak_stage0::BootAllocator"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()