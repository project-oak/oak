#
# Copyright 2024 The Project Oak Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
load("@aspect_bazel_lib//lib:expand_template.bzl", "expand_template")
load("@oak//bazel:defs.bzl", "oci_runtime_bundle")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_push")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")

package(
    licenses = ["notice"],
)

filegroup(
    name = "rust_bins",
    srcs = [
        "target/image_binaries/oak_containers_orchestrator",
        "target/image_binaries/oak_containers_syslogd",
    ],
    # This rule will fail unless build-bazel.sh has been run.
    tags = ["noci"],
)

pkg_tar(
    name = "rust_bins_tar",
    srcs = [":rust_bins"],
    package_dir = "/usr/bin",
    strip_prefix = "/oak_containers_system_image/target/image_binaries",
    # This rule will fail unless build-bazel.sh has been run.
    tags = ["noci"],
)

oci_image(
    name = "oak_containers_system_image_oci_image",
    base = "@oak_containers_sysimage_base",
    # This rule will fail unless build-bazel.sh has been run.
    tags = ["noci"],
    tars = [":rust_bins_tar"],
)

oci_runtime_bundle(
    name = "oak_containers_system_image",
    image = ":oak_containers_system_image_oci_image",
    rootfs_only = True,
    # This rule will fail unless build-bazel.sh has been run.
    tags = ["noci"],
)

### Base Image Update Targets
### These can't yet be run automatically. First, the build-base.sh script must be run.

# This can be generated by running build-base.sh
filegroup(
    name = "base_image_tar",
    srcs = [
        "target/base-image.tar",
    ],
    # This rule will fail until build-base.sh has been run
    tags = ["noci"],
)

# Defines labels added to :oak_containers_sysimage_base. When built with
# `--stamp`, overrides in `stamp_substitutions` override those in
# `substitutions`; `stamp_substitutions` can access workspace status values
# (https://bazel.build/docs/user-manual#workspace-status) populated by bazel or
# //bazel:workspace_status_command.sh. Labels must conform to
# https://github.com/opencontainers/image-spec/blob/main/annotations.md.
expand_template(
    name = "oak_containers_sysimage_base_labels",
    out = "oak_containers_sysimage_base_labels.txt",
    stamp_substitutions = {"{revision}": "{{STABLE_GIT_COMMIT}}"},
    substitutions = {"{revision}": "unknown"},
    template = [
        "org.opencontainers.image.source=https://github.com/project-oak/oak",
        "org.opencontainers.image.revision={revision}",
    ],
)

oci_image(
    name = "oak_containers_sysimage_base",
    architecture = "amd64",
    labels = ":oak_containers_sysimage_base_labels",
    os = "linux",
    # This rule will fail until build-base.sh has been run
    tags = ["noci"],
    tars = [":base_image_tar"],
)

# After running this target, you will need to update the hash for
# oak_containers_sysimage_base in the WORKSPACE file to use it.
oci_push(
    name = "push_base",
    image = ":oak_containers_sysimage_base",
    remote_tags = ["latest"],
    repository = "europe-west2-docker.pkg.dev/oak-ci/oak-containers-sysimage-base/oak-containers-sysimage-base",
    # This rule will fail until build-base.sh has been run
    tags = ["noci"],
)
