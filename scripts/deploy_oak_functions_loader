#!/usr/bin/env bash

readonly SCRIPTS_DIR="$(dirname "$0")"
# shellcheck source=scripts/common
source "$SCRIPTS_DIR/common"

# shellcheck source=scripts/gcp_common
source "$SCRIPTS_DIR/gcp_common"

# TODO(#1943): Remove when #1943 is submitted.
cargo build --target=x86_64-unknown-linux-musl --manifest-path=./oak_functions/loader/Cargo.toml --release

# Build and push base Oak Functions Loader image.

readonly FUNCTIONS_DOCKER_IMAGE_NAME='gcr.io/oak-ci/oak-functions'

docker build \
  --tag="${FUNCTIONS_DOCKER_IMAGE_NAME}:latest" \
  ./oak_functions

docker push "${FUNCTIONS_DOCKER_IMAGE_NAME}:latest"

# Build and push an individual example application built on Oak Functions.

readonly FUNCTIONS_EXAMPLE_DOCKER_IMAGE_NAME='gcr.io/oak-ci/oak-functions-example'

docker build \
  --tag="${FUNCTIONS_EXAMPLE_DOCKER_IMAGE_NAME}:latest" \
  ./oak_functions/loader/testdata

docker push "${FUNCTIONS_EXAMPLE_DOCKER_IMAGE_NAME}:latest"

readonly FUNCTIONS_INSTANCE_NAME=oak-functions-example

gcloud auth activate-service-account \
  --project="${GCP_PROJECT_ID}" \
  --key-file="${GCP_ACCOUNT_FILE}"

# Deploy the example application to Cloud Run.
#
# Keep at least one instance alive all the time, even if there is no traffic to serve, since it may
# take a while for it to start up.

gcloud run deploy "${FUNCTIONS_INSTANCE_NAME}" \
  --region=europe-west2 \
  --image="${FUNCTIONS_EXAMPLE_DOCKER_IMAGE_NAME}:latest" \
  --allow-unauthenticated \
  --concurrency=20 \
  --min-instances=1 \
  --max-instances=10 \
  --platform=managed

# Attempt to communicate with the newly deployed application.
#
# The URL parameter at the end is just to let curl perform multiple consecutive requests, but it is
# ignored by the server. See https://serverfault.com/a/358464.

curl \
  --include \
  --fail \
  --fail-early \
  --request POST \
  --data 'test-request-body' \
  "https://${FUNCTIONS_INSTANCE_NAME}-62sa4xcfia-nw.a.run.app/invoke?n=[0-15]"
