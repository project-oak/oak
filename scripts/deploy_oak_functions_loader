#!/usr/bin/env bash

readonly SCRIPTS_DIR="$(dirname "$0")"
# shellcheck source=scripts/common
source "$SCRIPTS_DIR/common"

# shellcheck source=scripts/gcp_common
source "$SCRIPTS_DIR/gcp_common"

# Build Oak Functions server binary and the example application, and the client to test the connection.
./scripts/docker_run ./scripts/runner build-functions-example \
  --example-name="${EXAMPLE_NAME}" \
  --client-variant=rust
  
# Build and push base Oak Functions Loader image.

readonly FUNCTIONS_DOCKER_IMAGE_NAME='gcr.io/oak-ci/oak-functions'

docker build \
  --tag="${FUNCTIONS_DOCKER_IMAGE_NAME}:latest" \
  ./oak_functions

docker push "${FUNCTIONS_DOCKER_IMAGE_NAME}:latest"

# Build and push the example application built on Oak Functions.

# Copy the `.wasm` file to the example's directory
mkdir --parents ./oak_functions/examples/"${EXAMPLE_NAME}"/bin/
cp ./oak_functions/examples/bin/"${EXAMPLE_NAME}".wasm ./oak_functions/examples/"${EXAMPLE_NAME}"/bin/"${EXAMPLE_NAME}".wasm 

readonly FUNCTIONS_EXAMPLE_DOCKER_IMAGE_NAME="gcr.io/oak-ci/${FUNCTIONS_INSTANCE_NAME}"

docker build \
  --tag="${FUNCTIONS_EXAMPLE_DOCKER_IMAGE_NAME}:latest" \
  ./oak_functions/examples/"${EXAMPLE_NAME}"

docker push "${FUNCTIONS_EXAMPLE_DOCKER_IMAGE_NAME}:latest"

gcloud auth activate-service-account \
  --project="${GCP_PROJECT_ID}" \
  --key-file="${GCP_ACCOUNT_FILE}"

# Deploy the example application to Cloud Run.
#
# Keep at least one instance alive all the time, even if there is no traffic to serve, since it may
# take a while for it to start up.
#
# Use beta channel of Cloud Run in order to support HTTP2 until it is generally available.

gcloud beta run deploy "${FUNCTIONS_INSTANCE_NAME}" \
  --region="${GCP_REGION}" \
  --image="${FUNCTIONS_EXAMPLE_DOCKER_IMAGE_NAME}:latest" \
  --no-allow-unauthenticated \
  --use-http2 \
  --concurrency=20 \
  --memory=8G \
  --cpu=4 \
  --min-instances=1 \
  --max-instances=10 \
  --platform=managed
