#!/usr/bin/env bash

readonly SCRIPTS_DIR="$(dirname "$(readlink -f "$0")")"
# shellcheck source=scripts/common
source "$SCRIPTS_DIR/common"

# For each Rust workspace, first run tests, then run doc tests, then run clippy (turning warnings
# into errors).
#
# See:
# - https://doc.rust-lang.org/cargo/commands/cargo-test.html
# - https://github.com/rust-lang/rust-clippy.

cargo test --all-targets --manifest-path=./sdk/rust/Cargo.toml
cargo test --doc --manifest-path=./sdk/rust/Cargo.toml
cargo clippy --all-targets --manifest-path=./sdk/rust/Cargo.toml -- --deny=warnings

cargo test --all-targets --manifest-path=./examples/Cargo.toml
cargo test --doc --manifest-path=./examples/Cargo.toml
cargo clippy --all-targets --manifest-path=./examples/Cargo.toml -- --deny=warnings

cargo test --all-targets --manifest-path=./oak/server/rust/Cargo.toml
cargo test --doc --manifest-path=./oak/server/rust/Cargo.toml
cargo clippy --all-targets --manifest-path=./oak/server/rust/Cargo.toml -- --deny=warnings

bazel_build_flags+=(
  '--keep_going'
)

# Check everything builds (except Asylo-specific targets).
bazel build "${bazel_build_flags[@]}" -- //oak/...:all -//oak/server/asylo:all

# Run tests that are suitable for running on the host system (rather than the target).
bazel test "${bazel_build_flags[@]}" \
  //oak/server:host_tests \
  //oak/server/storage:host_tests \
  //oak/server/time:host_tests \
  //oak/common:host_tests
