#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o xtrace

# Check which BUILD and .bzl files need to be reformatted.
find oak examples toolchain \( -type f -name BUILD -o -name '*bzl' \) -exec buildifier -lint=warn -mode=check {} +
find oak examples toolchain \( -type f -name BUILD \) -exec grep --files-without-match '^    licenses = \["notice"\],$' {} + && (echo 'missing license directive in BUILD file'; exit 1)

# Check shell scripts for common mistakes.
find scripts -type f -exec shellcheck {} +

# Run clang-format and rustfmt on the entire codebase to check if it's
# well formatted. Exit codes:
#  - 1 there are files to be formatted.
#  - 0 everything looks fine.
./third_party/run-clang-format/run-clang-format.py -r oak examples

# Fortunately, rustfmt has the --check option that will make it exit with 1
# if formatting has to be applied.
find examples rust -type f -name '*.rs' -exec rustfmt --check {} +

# Run clippy to lint the Rust code.
cargo clippy --manifest-path="$PWD/examples/Cargo.toml" --all-targets -- -D warnings
cargo clippy --manifest-path="$PWD/rust/Cargo.toml" --all-targets -- -D warnings
