#!/usr/bin/env bash

set -o errexit
set -o xtrace

readonly SCRIPTS_DIR="$(dirname "$0")"
readonly OAK_REMOTE_CACHE_KEY='./.oak_remote_cache_key.json'

# Bazel 0.27.0 deprecates features that our dependencies (gRPC, protobuf) rely on, so disable
# the checks until all dependencies have been updated to cope with a later Bazel.
# TODO: remove these options when possible
readonly BAZEL_WARNING_OPTS=(
  "--incompatible_disable_deprecated_attr_params=false"
  "--incompatible_depset_is_not_iterable=false"
  "--incompatible_new_actions_api=false"
  "--incompatible_no_support_tools_in_action_inputs=false"
)

# Do we have a JSON key for the remote cache.
# https://docs.bazel.build/versions/master/remote-caching.html#google-cloud-storage
if [[ ! -f "$OAK_REMOTE_CACHE_KEY" ]]; then
    # Check if this exists in the environment.
    if [[ -n "$BAZEL_GOOGLE_CREDENTIALS" ]]; then
        echo "$BAZEL_GOOGLE_CREDENTIALS" > "$OAK_REMOTE_CACHE_KEY"
    fi
fi

# If we now have a key file, use it. Otherwise build without remote cache.
if [[ -f "$OAK_REMOTE_CACHE_KEY" ]]; then
    "$SCRIPTS_DIR/docker_run" bazel build \
        ${BAZEL_OPTS:+ "${BAZEL_OPTS}"} \
        "${BAZEL_WARNING_OPTS[@]}" \
        --remote_cache=https://storage.googleapis.com/oak-bazel-cache \
        --google_credentials="$OAK_REMOTE_CACHE_KEY" \
        --config=enc-sim \
        //oak/server:oak
else
    "$SCRIPTS_DIR/docker_run" bazel build \
        ${BAZEL_OPTS:+ "${BAZEL_OPTS}"} \
        "${BAZEL_WARNING_OPTS[@]}" \
        --config=enc-sim \
        //oak/server:oak
fi
