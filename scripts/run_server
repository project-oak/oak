#!/usr/bin/env bash

readonly SCRIPTS_DIR="$(dirname "$(readlink -f "$0")")"
# shellcheck source=scripts/common
source "${SCRIPTS_DIR}/common"

readonly APPLICATION="${1}"
if [[ -z "${APPLICATION}" ]]; then
  echo "Missing the application, use -h for help"
  exit 1
fi

server="asylo"
while getopts "s:h" opt; do
  case "${opt}" in
  h)
      echo -e "Usage: ${0} APPLICATION [ -s asylo|dev|arm|asan|tsan ]
  -s    Server type:
          - asylo: server based on the Asylo framework (used by default)
          - dev: development version of the server
          - arm: 'dev' server for ARM architecture
          - asan: 'dev' server with address sanitizer
          - tsan: 'dev' server with thread santizer
  -h    Print Help (this message) and exit"
      exit 0;;
  s)
    case "${OPTARG}" in
    asylo|dev|arm|asan|tsan)
      server="${OPTARG}";;
    *)
      echo "Invalid server: ${OPTARG}"
      exit 1;;
    esac;;
  *)
    echo "Invalid argument: ${OPTARG}"
    exit 1;;
  esac
done

"${SCRIPTS_DIR}/build_server" -s "${server}"

# Launching the server requires a `--application=<dir>/config.bin` flag.
if [[ "asylo" == "${server}" ]]; then
  ./bazel-bin/oak/server/asylo/asylo_oak_runner --application="${APPLICATION}"
else
  # We use a different symlink prefix for clang-based artifacts.
  ./bazel-clang-bin/oak/server/dev/dev_oak_runner --application="${APPLICATION}"
fi 
