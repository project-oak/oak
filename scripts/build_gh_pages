#!/usr/bin/env bash
#
# Script to generate documentation for Rust crates to publish as gh-pages.
#
# Usage:
#
# ./scipts/build_gh_pages <target_dir>
#
# Where <target_dir> must be an empty directory.

readonly SCRIPTS_DIR="$(dirname "$0")"
# shellcheck source=scripts/common
source "$SCRIPTS_DIR/common"

readonly TARGET_DIR="$(cd "${1:-}" && pwd)"

if [[ -z "${TARGET_DIR}" ]]; then
  echo 'target dir not specified'
  exit 1
fi

if [[ ! -d "${TARGET_DIR}" ]]; then
  echo 'target not a directory'
  exit 1
fi

if [[ -n "$(ls "${TARGET_DIR}"/*)" ]]; then
  echo 'target dir not empty'
  exit 1
fi

readonly CURRENT_DIR="$(pwd)"

paths=("." "oak_abi" "oak_utils")
names=("oak" "oak_abi" "oak_utils")
titles=("SDK" "ABI" "Utils")

for i in {0..2}; do
  cd "${CURRENT_DIR}"
  target="${TARGET_DIR}/${names[$i]}"
  mkdir -p target
  cd "${paths[$i]}"

  # Generate docs directly in the target dir.
  cargo doc --no-deps --target-dir="${target}"

  # Remove non-doc artifacts from the target dir.
  rm --recursive --force "${target}/debug"

  # Remove non-deterministic files.
  rm "${target}/.rustc_info.json"

  # The docs generated from the Cargo workspace do not include a workspace-level index, so we generate
  # one here and redirect to the Oak SDK documentation.
cat <<-END > "${target}/index.html"
<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Refresh" content="0; url=./doc/${names[$i]}/index.html" />
  </head>
  <body>
    <p><a href="./doc/${names[$i]}/index.html">Oak ${titles[$i]} main page</a></p>
  </body>
</html>
END
done
