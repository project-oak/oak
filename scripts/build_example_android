#!/usr/bin/env bash

readonly SCRIPTS_DIR="$(dirname "$0")"
# shellcheck source=scripts/common
source "$SCRIPTS_DIR/common"

while getopts "de:h" opt; do
  case "${opt}" in
    h)
      echo -e "Usage: ${0} [-h] [-d] -e EXAMPLE

Build the given example Oak Application client for Android.

Options:
  -e    Example application name (required)
  -h    Print Help (this message) and exit"
      exit 0;;
    e)
      readonly EXAMPLE="${OPTARG}";;
    *)
      echo "Invalid argument: ${OPTARG}"
      exit 1;;
  esac
done

bazel_build_flags+=(
  '--fat_apk_cpu=x86_64'
  '--linkopt=-llog'
  '--symlink_prefix=bazel-client-android-'
  '--host_crosstool_top=@bazel_tools//tools/cpp:toolchain'
)

# Use a different output_base so that we don't lose incremental state.
# See https://docs.bazel.build/versions/master/command-line-reference.html#flag--output_base.
if [[ "${EXAMPLE}" == "oak_functions"*  ]]; then
  bazel --output_base="${CACHE_DIR}/client-android" build "${bazel_build_flags[@]}" "//oak_functions/client/android:client_app"
else
  bazel --output_base="${CACHE_DIR}/client-android" build "${bazel_build_flags[@]}" "//examples/${EXAMPLE}/client/android:client_app"
fi
