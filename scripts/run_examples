#!/usr/bin/env bash

readonly SCRIPTS_DIR="$(dirname "$(readlink -f "$0")")"
# shellcheck source=scripts/common
source "${SCRIPTS_DIR}/common"

server="dev"
while getopts "s:h" opt; do
  case "${opt}" in
    h)
      echo -e "Usage: ${0} [-s dev|asan|tsan]
  -s    Server type used to run exmples:
          - dev: development version of the server (default)
          - asan: 'dev' server with address sanitizer
          - tsan: 'dev' server with thread santizer
  -h    Print Help (this message) and exit"
      exit 0;;
    s)
      case "${OPTARG}" in
        dev|asan|tsan)
          server="${OPTARG}";;
        *)
          echo "Invalid server type: ${OPTARG}"
          exit 1;;
      esac;;
    *)
      echo "Invalid argument: ${OPTARG}"
      exit 1;;
  esac
done

# Run all examples.
for language in rust cpp; do
  # TODO(#594): Re-enable rustfmt when upstream rustc internal error is fixed.
  examples="$(find examples -mindepth 2 -maxdepth 4 -type d -regex '.*/module.*/'"${language}"'$' | cut -d'/' -f2 | uniq | grep -v rustfmt)"
  for example in ${examples}; do
    client_args=()
    if [[ "${example}" == "chat" ]]; then
      client_args+=("--test")
    fi
    "${SCRIPTS_DIR}/run_example" -s "${server}" -l "${language}" -e "${example}" -- "${client_args[@]}"
  done
done
