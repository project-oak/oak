#!/usr/bin/env bash

readonly SCRIPTS_DIR="$(dirname "$0")"
# shellcheck source=scripts/common
source "${SCRIPTS_DIR}/common"

server="rust"
languages="rust"
while getopts "s:l:h" opt; do
  case "${opt}" in
    h)
      echo -e "Usage: ${0} [-s rust|base|logless|asan|tsan] [-l rust|cpp]
  -s    Server type used to run examples:
          - rust: Rust version of the server (default)
          - base: base version of the server
          - logless: base version of the server with debug logging compiled out
          - asan: server with address sanitizer
          - tsan: server with thread santizer
  -l    Run examples implemented in which language:
          - rust (default)
          - cpp
  -h    Print Help (this message) and exit"
      exit 0;;
    l)
      languages="${OPTARG}";;
    s)
      case "${OPTARG}" in
        base|logless|rust|asan|tsan)
          server="${OPTARG}";;
        *)
          echo "Invalid server type: ${OPTARG}"
          exit 1;;
      esac;;
    *)
      echo "Invalid argument: ${OPTARG}"
      exit 1;;
  esac
done

# TODO(#1009): Re-enable C++ examples after supporting them with Rust Oak Loader.
if [[ "${languages}" == "cpp" ]]; then
  echo "C++ examples are currently not supported"
  exit 1
fi

# Run all examples.
for language in ${languages}; do
  # TODO(#594): Re-enable rustfmt when upstream rustc internal error is fixed.
  examples="$(find examples -mindepth 2 -maxdepth 4 -type d -regex '.*/module.*/'"${language}"'$' | cut -d'/' -f2 | uniq | grep -v rustfmt)"
  for example in ${examples}; do
    if [[ "${example}" == "chat" ]]; then
        "${SCRIPTS_DIR}/run_example" -s "${server}" -l "${language}" -e chat -- --test
    else
        "${SCRIPTS_DIR}/run_example" -s "${server}" -l "${language}" -e "${example}"
    fi
  done
done
