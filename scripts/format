#!/usr/bin/env bash

# Keep this in sync with /scripts/check_formatting.

readonly SCRIPTS_DIR="$(dirname "$(readlink -f "$0")")"
# shellcheck source=scripts/common
source "$SCRIPTS_DIR/common"

# Run buildifier, clang-format and rustfmt on the entire codebase.
# Applies all formattings in-place.

find . \
  \(  \
    -not \( -path ./bazel-cache -prune \) -and \
    -not \( -path ./cargo-cache -prune \) -and \
    -not \( -path ./examples/target -prune \) -and \
    -not \( -path ./sdk/rust/target -prune \) -and \
    -not \( -path ./third_party -prune \) \
    \( -type f -name BUILD -or -name WORKSPACE -or -name '*bzl' \) \
  \) -exec buildifier -lint=warn -mode=fix {} +

find . \
  \(  \
    -not \( -path ./bazel-cache -prune \) -and \
    -not \( -path ./cargo-cache -prune \) -and \
    -not \( -path ./examples/target -prune \) -and \
    -not \( -path ./sdk/rust/target -prune \) -and \
    -not \( -path ./third_party -prune \) \
    \( -type f -name '*.h' -or -name '*.cc' -or -name '*.proto' \) \
  \) -exec clang-format -i -style=file {} +

cargo fmt --all --manifest-path ./examples/Cargo.toml
cargo fmt --all --manifest-path ./sdk/rust/Cargo.toml
cargo fmt --all --manifest-path ./oak/server/rust/Cargo.toml

find . \
  \(  \
    -not \( -path ./bazel-cache -prune \) -and \
    -not \( -path ./cargo-cache -prune \) -and \
    -not \( -path ./examples/target -prune \) -and \
    -not \( -path ./sdk/rust/target -prune \) -and \
    -not \( -path ./third_party -prune \) \
    \( -type f -name '*.md' \) \
  \) -exec prettier --write {} +

# Update embedded code snippets
grep --recursive --files-with-matches embedmd docs | while IFS= read -r file; do
  "$GOPATH/bin/embedmd" -w "$file"
done
