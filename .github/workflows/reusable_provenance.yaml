# Container-based SLSA provenance generator that works with multiple provenance subjects.
name: Build SLSA3 Provenance

on:
  workflow_call:
    inputs:
      build-config-path:
        required: true
        type: string
      # Public key corresponding to the private key used to sign Ent tags.
      ent-public-key:
        required: true
        type: string
    secrets:
      # The Ent API key is used to upload the binary and its provenance to Ent.
      ENT_API_KEY:
        required: true
      # The Ent secret key is used to sign Ent tags, mapping the identifier
      # of a binary to its provenance.
      ENT_SECRET_KEY:
        required: true

jobs:
  get_inputs:
    outputs:
      # Resolves to a single file which is passed to the SLSA provenance
      # generator.
      # TODO: b/301399862 - We need to figure out how we can pass more than
      # one file to the provenance generation, without having Ent tags that
      # depend on filenames.
      artifact-path: ${{ steps.parse-build-config.outputs.artifact-path }}
      # The name of the internal TR package. This must coincide with the
      # basename of the buildconfig.
      package-name: ${{ steps.parse-build-config.outputs.package-name }}
      builder-digest: ${{ steps.builder-digest.outputs.builder-digest }}

    runs-on: ubuntu-20.04

    steps:
      - name: Mount main branch
        uses: actions/checkout@v3

      - name: Parse build config
        id: parse-build-config
        run: |
          set -o errexit
          set -o nounset
          set -o xtrace
          set -o pipefail
          artifact_path="$(tail -1 ${{ inputs.build-config-path }} | grep -oP 'artifact_path = \K(.*)')"
          package_name="$(basename ${{ inputs.build-config-path }} .toml)"
          echo "artifact-path=${artifact_path}" >> $GITHUB_OUTPUT
          echo "package-name=${package_name}" >> $GITHUB_OUTPUT

      - name: Get builder image info
        id: builder-digest
        run: |
          set -o errexit
          set -o nounset
          set -o xtrace
          set -o pipefail
          source ./scripts/common
          digest="$(echo "${DOCKER_IMAGE_REPO_DIGEST}" | cut -d'@' -f2)"
          echo "builder-digest=${digest}" >> $GITHUB_OUTPUT

      - name: Print values
        run: |
          echo "${{ steps.parse-build-config.outputs.artifact-path }}"
          echo "${{ steps.parse-build-config.outputs.package-name }}"
          echo "${{ steps.builder-digest.outputs.builder-digest }}"

  generate_provenance:
    needs: [get_inputs]
    permissions:
      actions: read
      id-token: write
      contents: write # For uploading provenances.
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_container-based_slsa3.yml@main
    with:
      builder-image: 'europe-west2-docker.pkg.dev/oak-ci/oak-development/oak-development'
      builder-digest: ${{ needs.get_inputs.outputs.builder-digest }}
      config-path: ${{ inputs.build-config-path }}
      provenance-name: attestation.intoto
      compile-builder: true

  # This job uploads the signed provenance from the previous step to Ent, and
  # publishes a comment for each binary on the PR.
  upload_provenance:
    if: |
      github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'provenance:force-run')
    needs: [get_inputs, generate_provenance]
    runs-on: ubuntu-20.04
    permissions:
      # Allow the job to update the repo with the latest provenance info and index.
      contents: write
      # Allow the job to add a comment to the PR.
      pull-requests: write

    steps:
      # See https://github.com/google/ent
      - name: Download Ent CLI
        if: steps.cache-ent.outputs.cache-hit != 'true'
        env:
          ENT_URL: https://ent-server-62sa4xcfia-ew.a.run.app
          ENT_DIGEST_SHA_2_256: ca76e76e32e0b984a8d55d1a27d587865774b29a2ae2fffd756ffc2dbd4880bd
        run: |
          set -o errexit
          set -o nounset
          set -o xtrace
          set -o pipefail
          curl --fail "${ENT_URL}/raw/sha2-256:${ENT_DIGEST_SHA_2_256}" > /usr/local/bin/ent
          echo "${ENT_DIGEST_SHA_2_256} /usr/local/bin/ent" | sha256sum --check
          chmod +x /usr/local/bin/ent
          ent
          cat <<EOF > ~/.config/ent.toml
          secret_key = '${{ secrets.ENT_SECRET_KEY }}'
          [[remotes]]
          name = 'ent-store'
          url = '${ENT_URL}'
          write = true
          api_key = '${{ secrets.ENT_API_KEY }}'
          EOF

      - name: Download the built artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.generate_provenance.outputs.build-outputs-name }}
          path: downloads

      - name: Download the DSSE document
        uses: actions/download-artifact@v3
        with:
          name:
            ${{ needs.generate_provenance.outputs.attestations-download-name }}
          path: downloads

      - name: Debug step - Display structure of downloaded files
        run: ls -R
        working-directory: downloads

      - name: Upload binary, provenance, signed tag to Ent
        id: ent_upload_binary
        working-directory: downloads
        # The output on any trigger other than "pull_request" has an additional
        # ".sigstore" suffix. However, that suffix appears to be ".build.slsa".
        # See https://github.com/slsa-framework/slsa-github-generator/tree/main/internal/builders/docker#workflow-outputs
        # The artifact path may be a wildcard that resolves to multiple files.
        run: |
          set -o errexit
          set -o nounset
          set -o xtrace
          set -o pipefail
          provenance_file="attestation.intoto"
          if [[ "${{ github.event_name }}" != "pull_request" ]]; then
            provenance_file="${provenance_file}.build.slsa"
          fi
          package_name=${{ needs.get_inputs.outputs.package-name }}
          binary_file=${{ needs.get_inputs.outputs.artifact-path }}
          binary_digest="$(ent put --digest-format=human --porcelain "${binary_file}")"
          provenance_digest="$(ent put --digest-format=human --porcelain "${provenance_file}")"
          ent tag set --public-key=${{ inputs.ent-public-key }} \
            --label="artifact_${GITHUB_SHA}_${package_name}" \
            --target="${binary_digest}"
          ent tag set --public-key=${{ inputs.ent-public-key }} \
            --label="provenance_${GITHUB_SHA}_${package_name}" \
            --target=${provenance_digest}

  # Debug step similar to `upload_provenance`, but runs on pull-request events.
  # Differs from `upload_provenance` in that it does not publish the binary
  # and its provenance into Ent and that it does not post a comment on the PR.
  debug_provenance:
    if: github.event_name == 'pull_request'
    needs: [get_inputs, generate_provenance]
    runs-on: ubuntu-20.04

    steps:
      - name: Download the built artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.generate_provenance.outputs.build-outputs-name }}
          path: downloads

      - name: Download the DSSE document
        uses: actions/download-artifact@v3
        with:
          name:
            ${{ needs.generate_provenance.outputs.attestations-download-name }}
          path: downloads

      - name: Display structure after downloading the files (debug step)
        run: ls -R
        working-directory: downloads

      - name: Print binary digest
        working-directory: downloads
        run: echo "$(sha256sum ${{ needs.get_inputs.outputs.artifact-path }})"

      - name: Print provenance digest
        working-directory: downloads
        run: |
          echo "$(sha256sum attestation.intoto)"
