name: Build Reproducibility Index
description: 'Updates the reproducibility index for the given path.'
inputs:
  OAK_FUNCTIONS_BASE_PATH:
    required: true
    description: 'Path to the base oak_functions binary.'
  OAK_FUNCTIONS_UNSAFE_PATH:
    required: true
    description: 'Path to the unsafe oak_functions binary.'
  OAK_BAREMETAL_CROSVM_PATH:
    required: true
    description: 'Path to the oak_baremetal_app_crosvm binary.'
  GITHUB_TOKEN:
    description:
      'The GitHub token of the GitHub repository. Must be provided for push
      events, or the action fails.'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Checkout hashes
      uses: actions/checkout@v2
      with:
        ref: hashes
        path: out

    # Generate an index of the hashes of the reproducible artifacts.
    - name: Generate Reproducibility Index
      shell: bash
      run: |
        ./scripts/docker_run ./scripts/build_reproducibility_index ${{ inputs.OAK_FUNCTIONS_BASE_PATH }} ${{ inputs.OAK_FUNCTIONS_UNSAFE_PATH }} ${{ inputs.OAK_BAREMETAL_CROSVM_PATH }}

    # Remove all files from the "out" folder.
    - name: Clear "out" folder
      shell: bash
      run: rm --recursive --force ./out/*

    - name: Copy Reproducibility Index
      shell: bash
      run: cp ./reproducibility_index ./out/

    - name: Diff Reproducibility Index
      shell: bash
      run: |
        cd ./out
        git add .
        git status
        git diff --staged | tee ../reproducibility_index.diff

    # Print out the index to the logs of the action.
    - name: Print Reproducibility Index
      shell: bash
      run: cat ./reproducibility_index

    # Print out the index diff (compared to the previous commit) to the logs of the action.
    - name: Print Reproducibility Index diff
      shell: bash
      run: cat ./reproducibility_index.diff

    # From the "out" folder, commit the results and push to the `hashes` branch.
    # This step only applies to `push` events (not `pull_request`), even if there are no actual
    # changes to commit in the "out" folder (in which case the commit will be empty, but it will
    # still be part of the history).
    - name: Commit and push (post-merge only)
      if: github.event_name == 'push'
      shell: bash
      run: |
        cd ./out
        git add .
        git status
        git diff --staged
        git commit --allow-empty --message="Update hashes from ${GITHUB_SHA}"
        git push

    # Also post a reply on the PR thread with the contents of the index, after merge.
    - name: Post Reproducibility Index (post-merge only)
      uses: actions/github-script@0.9.0
      if: github.event_name == 'push'
      with:
        github-token: ${{inputs.GITHUB_TOKEN}}
        script: |
          const fs = require('fs').promises;
          const reproducibility_index_content = await fs.readFile('./reproducibility_index');
          const reproducibility_index_diff_content = await fs.readFile('./reproducibility_index.diff');

          const opts = await github.repos.listPullRequestsAssociatedWithCommit({
            owner: context.repo.owner,
            repo: context.repo.repo,
            commit_sha: context.sha
          });
          // See:
          // - https://octokit.github.io/rest.js/v17#previews
          // - https://developer.github.com/v3/repos/commits/#list-pull-requests-associated-with-commit
          opts.mediaType = {
              previews: ['groot']
          };

          const issues = await github.paginate(opts);

          await github.issues.createComment({
            issue_number: issues[0].number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `Reproducibility Index:

          \`\`\`
          ${reproducibility_index_content}
          \`\`\`

          Reproducibility Index diff:

          \`\`\`diff
          ${reproducibility_index_diff_content}
          \`\`\`
          `});
