//
// Copyright 2023 The Project Oak Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto3";

package oak.verification.v1;

// Client-side options for verifying the attestation endorsement for a binary.
message AttestationVerificationOptions {
    // TEE platforms that the client is allowed to interact with, and can verify the evidence
    // generated by them.
    repeated TeePlatform supported_tee_platforms = 1;
    // Whether to skip TEE certificate verification.
    bool skip_tee_certificate_verification = 2;
    // Verification option for each DICE layer.
    map<string, LayerVerificationOptions> layer_verification_options = 3;
    // If provided, will be used for verifying any layer that does not have a matching verification
    // option in `layer_verification_options`.
    LayerVerificationOptions default_layer_verification_option = 4;
}

enum TeePlatform {
  UNSPECIFIED = 0;
  AMD_SEV_SNP = 1;
  INTEL_TDX = 2;
}

message LayerVerificationOptions {
    // Options for verifying transparency evidence.
    map<string, TransparencyVerificationOptions> transparency_verification_options = 1;
    TransparencyVerificationOptions default_transparency_verification_options = 2;
    // Options for verifying evidence against reference values
    ReferenceValueVerificationOptions reference_value_verification_options = 3;
}

message TransparencyVerificationOptions {
   oneof option {
        SkipBinaryTransparencyVerification skip_binary_transparency_verification = 1;
        BinaryTransparencyVerificationOptions binary_transparency_verification_options = 2;
    }
}

// The presence of this option in TransparencyVerificationOptions implies that an endorsement
// statement must be present, its subject must be as expected, and it must be signed by a trusted
// entity. Therefore, no additional fields are required for verifying these details.
message BinaryTransparencyVerificationOptions {
    bool skip_rekor_entry_verification = 1;
}

// A singleton value to allow skipping binary transparency verification.
message SkipBinaryTransparencyVerification {}

message ReferenceValueVerificationOptions {
    // key:value pairs of reference values to check the attestation evidence against.
    map<string, string> reference_values = 1;
}
