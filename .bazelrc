# Bazel build defaults.
# incompatible_enable_cc_toolchain_resolution:
#   Should not be needed after Bazel 7.0 is released.
# cxxopt='-std=c++17': 
#   Build C++ targets using C++17.
#   <https://stackoverflow.com/questions/40260242/how-to-set-c-standard-version-when-build-with-bazel>
# --host_cxxopt='-std=c++17'
#   Fix Abseil "C++ versions less than C++14 are not supported".
#   <https://github.com/protocolbuffers/protobuf/issues/12393#issuecomment-1504349780>
build --incompatible_enable_cc_toolchain_resolution --cxxopt='-std=c++17' --host_cxxopt='-std=c++17'

# Required for bazel_clang_tidy to operate as expected
build:clang-tidy --aspects @bazel_clang_tidy//clang_tidy:clang_tidy.bzl%clang_tidy_aspect
build:clang-tidy --output_groups=report

# Optionally override the .clang-tidy config file target
build:clang-tidy --@bazel_clang_tidy//:clang_tidy_config=//:clang_tidy_config

# Use nightly rustc by default
build --@rules_rust//rust/toolchain/channel=nightly

# Use a custom workspace status command so that the git revision is included in
# stamped binaries.
build --workspace_status_command=bazel/workspace_status_command.sh
