#!/usr/bin/env bash

# Note: runs either in container extension for VS Code or on local machine, but
# for `./scripts/docker_run /bin/bash` we observed `accept error: Too many open files (os error 24)`

# Note: SECONDS_TO_RUN * QPS has to be a multiple of K
# Otherwise the Trusted Shuffler gets stuck because the last batch does not reach K requests.
readonly SECONDS_TO_RUN=20 # Don't use $SECONDS.
readonly LOG_LEVEL=error # error or info, note info makes the experiments significantly slower.
readonly OUTPUT_FILE="trusted_shuffler_experiment.csv"

KS=(500 1000 2000)
QPSS=$(seq 100 100 1000)

cargo build --manifest-path=experimental/trusted_shuffler/server/Cargo.toml
cargo build --manifest-path=experimental/trusted_shuffler/backend/Cargo.toml
cargo build --manifest-path=experimental/trusted_shuffler/client/Cargo.toml

echo "k,qps,seconds,actual_seconds_taken,avg_delay_in_ms,max_delay_in_ms" > ${OUTPUT_FILE}

for K in "${KS[@]}"
do
  for QPS in $QPSS
  do
    # Echo progress.
    echo "Starting: $K, $QPS"

    RUST_LOG=$LOG_LEVEL cargo run --manifest-path=experimental/trusted_shuffler/server/Cargo.toml -- \
      --k="${K}" --listen-address="[::]:8080" --backend-url="http://localhost:8888" &
    sleep 1
    SERVER_PID=$!

    RUST_LOG=$LOG_LEVEL cargo run --manifest-path=experimental/trusted_shuffler/backend/Cargo.toml -- \
      --listen-address="[::]:8888" &
    sleep 1
    BACKEND_PID=$!

    CLIENT_OUTPUT=$(RUST_LOG=$LOG_LEVEL cargo run --manifest-path=experimental/trusted_shuffler/client/Cargo.toml -- \
     --server-url="http://localhost:8080" --qps="${QPS}" --seconds="${SECONDS_TO_RUN}")

    echo "${K},${QPS},${SECONDS_TO_RUN},${CLIENT_OUTPUT}" >> ${OUTPUT_FILE}

    kill -9 "${SERVER_PID}"
    kill -9 "${BACKEND_PID}"
  done
done
