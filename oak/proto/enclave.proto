//
// Copyright 2018 The Project Oak Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

syntax = "proto2";

package oak;

import "asylo/enclave.proto";
import "oak/proto/application.proto";

message InitializeInput {
  optional ApplicationConfiguration application_configuration = 1;
}

// See
// https://github.com/google/asylo/blob/master/asylo/grpc/util/enclave_server.proto.
message InitializeOutput {
  // The port on which the Application is listening over gRPC.
  optional int32 grpc_port = 2;
}

// This message defines the data that is passed to the enclave at initialization
// time, corresponding to TrustedApplication::Initialize, see
// https://github.com/google/asylo/blob/master/asylo/platform/core/trusted_application.h.
extend asylo.EnclaveConfig {
  optional InitializeInput initialize_input = 9100;
}

// Because Initialization cannot return any data to the caller (only a status),
// we return the allocated port on which the Oak VM server is listening via the
// TrustedApplication::Run call, which returns a message of type EnclaveOutput.
extend asylo.EnclaveOutput {
  optional InitializeOutput initialize_output = 9200;
}
